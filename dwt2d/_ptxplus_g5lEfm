//HEADER
.version 1.4+
.target sm_10, map_f64_to_f32
//END HEADER


//INSTRUCTIONS

.const .u32 constant1_ZN8dwt_cuda12fdwt97KernelILi192ELi8EEEvPKfPfiii[15] = {
          0x00000001, 0x00000006, 0x0000007b, 0x0000007c, 
          0x00000002, 0x000000c0, 0xbfcb0673, 0xbd5901ae, 
          0x3f620676, 0x3ee31355, 0xfffffffe, 0x0000001f, 
          0x00000020, 0x00000000, 0x3f5019c3
};

.const .u32 constant1_ZN8dwt_cuda12fdwt97KernelILi128ELi6EEEvPKfPfiii[16] = {
          0x00000001, 0x00000006, 0x0000005b, 0x0000005c, 
          0x0000007f, 0x00000002, 0x00000080, 0xbfcb0673, 
          0xbd5901ae, 0x3f620676, 0x3ee31355, 0xfffffffe, 
          0x00000017, 0x00000018, 0x00000000, 0x3f5019c3
};

.const .u32 constant1_ZN8dwt_cuda12fdwt97KernelILi64ELi6EEEvPKfPfiii[16] = {
          0x00000001, 0x00000006, 0x0000003b, 0x0000003c, 
          0x0000003f, 0x00000002, 0x00000040, 0xbfcb0673, 
          0xbd5901ae, 0x3f620676, 0x3ee31355, 0xfffffffe, 
          0x00000017, 0x00000018, 0x00000000, 0x3f5019c3
};




.local .b8 l1[0];
.local .b8 l2[0];

.entry  _ZN8dwt_cuda12fdwt97KernelILi64ELi6EEEvPKfPfiii (
	.param  .u64 __cudaparm__ZN8dwt_cuda12fdwt97KernelILi64ELi6EEEvPKfPfiii_input ,
	.param  .u64 __cudaparm__ZN8dwt_cuda12fdwt97KernelILi64ELi6EEEvPKfPfiii_output ,
	.param  .s32 __cudaparm__ZN8dwt_cuda12fdwt97KernelILi64ELi6EEEvPKfPfiii_sx ,
	.param  .s32 __cudaparm__ZN8dwt_cuda12fdwt97KernelILi64ELi6EEEvPKfPfiii_sy ,
	.param  .s32 __cudaparm__ZN8dwt_cuda12fdwt97KernelILi64ELi6EEEvPKfPfiii_steps )
{
	.reg .u32 $r<32>;
	.reg .u32 $ofs<5>;
	.reg .pred $p<4>;

	.reg .u32 $r124;

	.reg .u32 $o127;

	
	cvt.u32.u16 $r17, $r0.lo;
	add.u32 $r3, $r17, 0x00000004;
	mov.u32 $r5, 0x000001d8;
	and.b32 $r4, $r3, constant1_ZN8dwt_cuda12fdwt97KernelILi64ELi6EEEvPKfPfiii[0x0000];
	mul.wide.u16 $r0, $r4.lo, $r5.hi;
	mad.wide.u16 $r6, $r4.hi, $r5.lo, $r0;
	cvt.u32.u16 $r2, %ctaid.y;
	shr.s32 $r7, $r3, 0x0000001f;
	mov.u32 $r1, 0x00000006;
	mov.u32 $r0, s[0x0028];
	and.b32 $r7, $r7, constant1_ZN8dwt_cuda12fdwt97KernelILi64ELi6EEEvPKfPfiii[0x0000];
	mad24.lo.u32 $r1, $r2, constant1_ZN8dwt_cuda12fdwt97KernelILi64ELi6EEEvPKfPfiii[0x0004], $r1;
	shl.u32 $r6, $r6, 0x00000010;
	add.u32 $r7, $r3, $r7;
	mul.wide.u16 $r8, $r0.lo, $r1.hi;
	mad.wide.u16 $r3, $r4.lo, $r5.lo, $r6;
	shr.s32 $r4, $r7, 0x00000001;
	mul.wide.u16 $r5, $r0.hi, $r2.lo;
	mad.wide.u16 $r6, $r0.hi, $r1.lo, $r8;
	add.u32 $r3, $r3, $r4;
	shl.u32 $r5, $r5, 0x00000010;
	shl.u32 $r7, $r6, 0x00000010;
	shr.u32 $r6, $r17, 0x00000005;
	shl.u32 $r4, $r17, 0x00000001;
	mad.wide.u16 $r2, $r0.lo, $r2.lo, $r5;
	mad.wide.u16 $r1, $r0.lo, $r1.lo, $r7;
	shl.b32 $ofs3, $r3, 0x00000002;
	@$p2 mad24.lo.u32 $r4, $r6, constant1_ZN8dwt_cuda12fdwt97KernelILi64ELi6EEEvPKfPfiii[0x0010], $r4;
	shl.u32 $r0, $r2, 0x00000002;
	add.u32 $r5, $r1, 0x00000003;
	shl.u32 $r1, $r2, 0x00000001;
	mul.wide.u16 $r3, %ctaid.x, 0x00000040;
	set.gt.s32.s32 $p3/$o127, s[0x0024], $r5;
	@$p3 mov.u32 $r2, $p3;
	add.half.u32 $r7, $r0, $r1;
	add.half.u32 $r9, $r17, $r3;
	add.u32 $r5, $r3, $r4;
	set.le.u32.u32 $p0/$o127, $r17, constant1_ZN8dwt_cuda12fdwt97KernelILi64ELi6EEEvPKfPfiii[0x0004];
	set.lt.u32.u32 $p1/$o127, $r17, constant1_ZN8dwt_cuda12fdwt97KernelILi64ELi6EEEvPKfPfiii[0x0008];
	set.lt.u32.u32 $p2/$o127, $r17, constant1_ZN8dwt_cuda12fdwt97KernelILi64ELi6EEEvPKfPfiii[0x000c];
	@$p2 mov.u32 $r6, $p2;
	set.le.s32.s32 $p2/$o127, s[0x0020], $r9;
	set.gt.s32.s32 $p3/$o127, s[0x0020], $r5;
	@$p3 mov.u32 $r8, $p3;
	mov.pred $p3, $r2;
	@$p3.ne bra l0x000021c0;
	mov.half.u32 $r1, s[0x0020];
	mov.half.u32 $r0, s[0x0024];
	mul.wide.u16 $r2, $r1.lo, $r0.hi;
	mad.wide.u16 $r2, $r1.hi, $r0.lo, $r2;
	shl.u32 $r2, $r2, 0x00000010;
	mad.wide.u16 $r11, $r1.lo, $r0.lo, $r2;
	cvt.u32.u16 $r2, %ctaid.y;
	set.eq.u32.u32 $p3/$o127, $r2, $r124;
	@$p3.eq bra l0x00000450;
	ssy 0x000001f8;
	@$p2.eq bra l0x000001d8;
	shl.u32 $r0, s[0x0020], 0x00000001;
	add.u32 $r0, $r0, -$r9;
	add.u32 $r10, $r0, 0xfffffffe;
	bra l0x000001f8;
	l0x000001d8: add.u32 $r10, -$r9, 0x00000000;
	set.lt.s32.s32 $p3/$o127, $r9, $r124;
	@$p3 mov.u32 $r0, $p3;
	@$p3.equ mov.u32 $r10, $r9;
	l0x000001f8: mov.u32 $r0, s[0x0020];
	mul.wide.u16 $r1, $r0.lo, $r7.hi;
	mad.wide.u16 $r1, $r0.hi, $r7.lo, $r1;
	shl.u32 $r1, $r1, 0x00000010;
	mad.wide.u16 $r2, $r0.lo, $r7.lo, $r1;
	mov.half.u32 $r0, s[0x0020];
	add.half.u32 $r1, $r2, $r10;
	set.ne.s32.s32 $p3/$o127, $r2, $r11;
	@$p3 mov.u32 $r2, $p3;
	@$p3.equ shl.u32 $r0, s[0x0020], 0x00000001;
	@$p3.equ add.u32 $r1, $r1, -$r0;
	@$p3.equ add.u32 $r0, -s[0x0020], constant1_ZN8dwt_cuda12fdwt97KernelILi64ELi6EEEvPKfPfiii[0x0038];
	shl.u32 $r2, $r1, 0x00000002;
	add.u32 $r2, s[0x0010], $r2;
	ld.global.u32 $r12, [$r2];
	add.half.u32 $r2, $r11, $r10;
	add.half.u32 $r1, $r0, $r1;
	mov.u32 s[$ofs3+0x026c], $r12;
	set.ne.s32.s32 $p3/$o127, $r2, $r1;
	@$p3 mov.u32 $r10, $p3;
	@$p3.equ shl.u32 $r10, $r0, 0x00000001;
	@$p3.equ add.u32 $r1, $r1, -$r10;
	@$p3.equ add.u32 $r0, -$r0, constant1_ZN8dwt_cuda12fdwt97KernelILi64ELi6EEEvPKfPfiii[0x0038];
	shl.u32 $r10, $r1, 0x00000002;
	add.u32 $r10, s[0x0010], $r10;
	ld.global.u32 $r10, [$r10];
	mov.u32 s[$ofs3+0x02fc], $r10;
	add.u32 $r1, $r0, $r1;
	mov.u32 s[$ofs3+0x01dc], $r10;
	set.ne.s32.s32 $p3/$o127, $r2, $r1;
	@$p3 mov.u32 $r10, $p3;
	@$p3.equ shl.u32 $r10, $r0, 0x00000001;
	@$p3.equ add.u32 $r1, $r1, -$r10;
	@$p3.equ add.u32 $r0, -$r0, constant1_ZN8dwt_cuda12fdwt97KernelILi64ELi6EEEvPKfPfiii[0x0038];
	shl.u32 $r10, $r1, 0x00000002;
	add.u32 $r10, s[0x0010], $r10;
	ld.global.u32 $r10, [$r10];
	mov.u32 s[$ofs3+0x038c], $r10;
	add.u32 $r1, $r0, $r1;
	mov.u32 s[$ofs3+0x014c], $r10;
	set.ne.s32.s32 $p3/$o127, $r2, $r1;
	@$p3 mov.u32 $r10, $p3;
	@$p3.equ shl.u32 $r10, $r0, 0x00000001;
	@$p3.equ add.u32 $r1, $r1, -$r10;
	@$p3.equ add.u32 $r0, -$r0, constant1_ZN8dwt_cuda12fdwt97KernelILi64ELi6EEEvPKfPfiii[0x0038];
	shl.u32 $r10, $r1, 0x00000002;
	add.u32 $r10, s[0x0010], $r10;
	ld.global.u32 $r10, [$r10];
	add.u32 $r1, $r0, $r1;
	mov.u32 s[$ofs3+0x00bc], $r10;
	set.ne.s32.s32 $p3/$o127, $r2, $r1;
	@$p3 mov.u32 $r2, $p3;
	@$p3.equ shl.u32 $r0, $r0, 0x00000001;
	@$p3.equ add.u32 $r1, $r1, -$r0;
	shl.u32 $r0, $r1, 0x00000002;
	add.u32 $r0, s[0x0010], $r0;
	ld.global.u32 $r0, [$r0];
	mov.u32 s[$ofs3+0x002c], $r0;
	ssy 0x00000400;
	@$p2.eq bra l0x000003e8;
	shl.u32 $r0, s[0x0020], 0x00000001;
	add.u32 $r0, $r0, -$r9;
	add.u32 $r10, $r0, 0xfffffffe;
	bra l0x00000400;
	l0x000003e8: add.u32 $r10, -$r9, 0x00000000;
	set.lt.s32.s32 $p2/$o127, $r9, $r124;
	@$p2.equ mov.u32 $r10, $r9;
	l0x00000400: nop;
	add.u32 $r1, $r7, 0x00000003;
	mov.u32 $r0, s[0x0020];
	mul.wide.u16 $r2, $r0.lo, $r1.hi;
	mad.wide.u16 $r2, $r0.hi, $r1.lo, $r2;
	shl.u32 $r2, $r2, 0x00000010;
	mad.wide.u16 $r0, $r0.lo, $r1.lo, $r2;
	add.half.u32 $r2, $r10, $r0;
	add.half.u32 $r0, $r11, $r10;
	mov.half.u32 $r1, s[0x0020];
	add.half.u32 $r21, -s[0x0020], $r2;
	bra l0x000006c8;
	l0x00000450: ssy 0x00000498;
	@$p2.eq bra l0x00000480;
	shl.u32 $r0, s[0x0020], 0x00000001;
	add.u32 $r0, $r0, -$r9;
	add.u32 $r10, $r0, 0xfffffffe;
	bra l0x00000498;
	l0x00000480: add.u32 $r10, -$r9, 0x00000000;
	set.lt.s32.s32 $p2/$o127, $r9, $r124;
	@$p2.equ mov.u32 $r10, $r9;
	l0x00000498: mov.u32 $r1, s[0x0020];
	add.u32 $r2, $r7, 0xfffffffc;
	mul.wide.u16 $r0, $r2.lo, $r1.hi;
	mad.wide.u16 $r0, $r2.hi, $r1.lo, $r0;
	shl.u32 $r9, $r0, 0x00000010;
	add.u32 $r0, $r11, $r10;
	mad.wide.u16 $r9, $r2.lo, $r1.lo, $r9;
	mov.half.u32 $r1, s[0x0020];
	add.half.u32 $r2, $r10, $r9;
	set.ne.s32.s32 $p2/$o127, $r9, $r11;
	@$p2.equ shl.u32 $r1, s[0x0020], 0x00000001;
	@$p2.equ add.u32 $r2, $r2, -$r1;
	@$p2.equ add.u32 $r1, -s[0x0020], constant1_ZN8dwt_cuda12fdwt97KernelILi64ELi6EEEvPKfPfiii[0x0038];
	shl.u32 $r9, $r2, 0x00000002;
	add.u32 $r9, s[0x0010], $r9;
	ld.global.u32 $r9, [$r9];
	add.u32 $r2, $r2, $r1;
	mov.u32 s[$ofs3+0x002c], $r9;
	set.ne.s32.s32 $p2/$o127, $r0, $r2;
	@$p2.equ shl.u32 $r9, $r1, 0x00000001;
	@$p2.equ add.u32 $r2, $r2, -$r9;
	@$p2.equ add.u32 $r1, -$r1, constant1_ZN8dwt_cuda12fdwt97KernelILi64ELi6EEEvPKfPfiii[0x0038];
	shl.u32 $r9, $r2, 0x00000002;
	add.u32 $r9, s[0x0010], $r9;
	ld.global.u32 $r9, [$r9];
	add.u32 $r2, $r2, $r1;
	mov.u32 s[$ofs3+0x00bc], $r9;
	set.ne.s32.s32 $p2/$o127, $r0, $r2;
	@$p2.equ shl.u32 $r9, $r1, 0x00000001;
	@$p2.equ add.u32 $r2, $r2, -$r9;
	@$p2.equ add.u32 $r1, -$r1, constant1_ZN8dwt_cuda12fdwt97KernelILi64ELi6EEEvPKfPfiii[0x0038];
	shl.u32 $r9, $r2, 0x00000002;
	add.u32 $r9, s[0x0010], $r9;
	ld.global.u32 $r9, [$r9];
	add.u32 $r2, $r2, $r1;
	mov.u32 s[$ofs3+0x014c], $r9;
	set.ne.s32.s32 $p2/$o127, $r0, $r2;
	@$p2.equ shl.u32 $r9, $r1, 0x00000001;
	@$p2.equ add.u32 $r2, $r2, -$r9;
	@$p2.equ add.u32 $r1, -$r1, constant1_ZN8dwt_cuda12fdwt97KernelILi64ELi6EEEvPKfPfiii[0x0038];
	shl.u32 $r9, $r2, 0x00000002;
	add.u32 $r9, s[0x0010], $r9;
	ld.global.u32 $r9, [$r9];
	add.u32 $r2, $r2, $r1;
	mov.u32 s[$ofs3+0x01dc], $r9;
	set.ne.s32.s32 $p2/$o127, $r0, $r2;
	@$p2.equ shl.u32 $r9, $r1, 0x00000001;
	@$p2.equ add.u32 $r2, $r2, -$r9;
	@$p2.equ add.u32 $r1, -$r1, constant1_ZN8dwt_cuda12fdwt97KernelILi64ELi6EEEvPKfPfiii[0x0038];
	shl.u32 $r9, $r2, 0x00000002;
	add.u32 $r9, s[0x0010], $r9;
	ld.global.u32 $r9, [$r9];
	add.u32 $r2, $r2, $r1;
	mov.u32 s[$ofs3+0x026c], $r9;
	set.ne.s32.s32 $p2/$o127, $r0, $r2;
	@$p2.equ shl.u32 $r9, $r1, 0x00000001;
	@$p2.equ add.u32 $r2, $r2, -$r9;
	@$p2.equ add.u32 $r1, -$r1, constant1_ZN8dwt_cuda12fdwt97KernelILi64ELi6EEEvPKfPfiii[0x0038];
	shl.u32 $r9, $r2, 0x00000002;
	add.u32 $r9, s[0x0010], $r9;
	ld.global.u32 $r9, [$r9];
	add.u32 $r21, $r2, $r1;
	mov.u32 s[$ofs3+0x02fc], $r9;
	set.ne.s32.s32 $p2/$o127, $r0, $r21;
	@$p2.equ shl.u32 $r2, $r1, 0x00000001;
	@$p2.equ add.u32 $r21, $r21, -$r2;
	@$p2.equ add.u32 $r1, -$r1, constant1_ZN8dwt_cuda12fdwt97KernelILi64ELi6EEEvPKfPfiii[0x0038];
	shl.u32 $r2, $r21, 0x00000002;
	add.u32 $r2, s[0x0010], $r2;
	ld.global.u32 $r2, [$r2];
	mov.u32 s[$ofs3+0x038c], $r2;
	l0x000006c8: ssy 0x00000cb8;
	@$p0.eq bra l0x00000c90;
	add.u32 $r10, $r17, 0xfffffff9;
	set.le.u32.u32 $p2/$o127, $r17, constant1_ZN8dwt_cuda12fdwt97KernelILi64ELi6EEEvPKfPfiii[0x0014];
	@$p2.ne add.u32 $r10, $r17, constant1_ZN8dwt_cuda12fdwt97KernelILi64ELi6EEEvPKfPfiii[0x0018];
	add.u32 $r12, $r10, 0x00000004;
	mov.u32 $r9, 0x000001d8;
	and.b32 $r2, $r12, constant1_ZN8dwt_cuda12fdwt97KernelILi64ELi6EEEvPKfPfiii[0x0000];
	mul.wide.u16 $r14, $r2.lo, $r9.hi;
	shr.s32 $r13, $r12, 0x0000001f;
	mad.wide.u16 $r14, $r2.hi, $r9.lo, $r14;
	and.b32 $r13, $r13, constant1_ZN8dwt_cuda12fdwt97KernelILi64ELi6EEEvPKfPfiii[0x0000];
	shl.u32 $r14, $r14, 0x00000010;
	add.u32 $r12, $r12, $r13;
	mad.wide.u16 $r9, $r2.lo, $r9.lo, $r14;
	shr.s32 $r2, $r12, 0x00000001;
	add.u32 $r2, $r9, $r2;
	shl.b32 $ofs1, $r2, 0x00000002;
	mov.u32 $r23, $ofs1;
	add.u32 $r9, $r10, $r3;
	set.le.s32.s32 $p2/$o127, s[0x0020], $r9;
	cvt.u32.u16 $r2, %ctaid.y;
	set.eq.u32.u32 $p3/$o127, $r2, $r124;
	@$p3.eq bra l0x00000a08;
	ssy 0x000007d0;
	@$p2.eq bra l0x000007b8;
	shl.u32 $r2, s[0x0020], 0x00000001;
	add.u32 $r2, $r2, -$r9;
	add.u32 $r10, $r2, 0xfffffffe;
	bra l0x000007d0;
	l0x000007b8: add.u32 $r10, -$r9, 0x00000000;
	set.lt.s32.s32 $p3/$o127, $r9, $r124;
	@$p3.equ mov.u32 $r10, $r9;
	l0x000007d0: mov.u32 $r2, s[0x0020];
	mul.wide.u16 $r3, $r2.lo, $r7.hi;
	mad.wide.u16 $r3, $r2.hi, $r7.lo, $r3;
	shl.u32 $r3, $r3, 0x00000010;
	mad.wide.u16 $r12, $r2.lo, $r7.lo, $r3;
	mov.half.u32 $r2, s[0x0020];
	add.half.u32 $r3, $r12, $r10;
	set.ne.s32.s32 $p3/$o127, $r12, $r11;
	@$p3.equ shl.u32 $r2, s[0x0020], 0x00000001;
	@$p3.equ add.u32 $r3, $r3, -$r2;
	@$p3.equ add.u32 $r2, -s[0x0020], constant1_ZN8dwt_cuda12fdwt97KernelILi64ELi6EEEvPKfPfiii[0x0038];
	shl.u32 $r12, $r3, 0x00000002;
	add.u32 $r12, s[0x0010], $r12;
	ld.global.u32 $r12, [$r12];
	add.half.u32 $r10, $r11, $r10;
	add.half.u32 $r3, $r2, $r3;
	shl.b32 $ofs1, $r23, 0x0;
	mov.u32 s[$ofs1+0x026c], $r12;
	set.ne.s32.s32 $p3/$o127, $r10, $r3;
	@$p3.equ shl.u32 $r12, $r2, 0x00000001;
	@$p3.equ add.u32 $r3, $r3, -$r12;
	@$p3.equ add.u32 $r2, -$r2, constant1_ZN8dwt_cuda12fdwt97KernelILi64ELi6EEEvPKfPfiii[0x0038];
	shl.u32 $r12, $r3, 0x00000002;
	add.u32 $r12, s[0x0010], $r12;
	ld.global.u32 $r12, [$r12];
	mov.u32 s[$ofs1+0x02fc], $r12;
	add.u32 $r3, $r2, $r3;
	mov.u32 s[$ofs1+0x01dc], $r12;
	set.ne.s32.s32 $p3/$o127, $r10, $r3;
	@$p3.equ shl.u32 $r12, $r2, 0x00000001;
	@$p3.equ add.u32 $r3, $r3, -$r12;
	@$p3.equ add.u32 $r2, -$r2, constant1_ZN8dwt_cuda12fdwt97KernelILi64ELi6EEEvPKfPfiii[0x0038];
	shl.u32 $r12, $r3, 0x00000002;
	add.u32 $r12, s[0x0010], $r12;
	ld.global.u32 $r12, [$r12];
	mov.u32 s[$ofs1+0x038c], $r12;
	add.u32 $r3, $r2, $r3;
	mov.u32 s[$ofs1+0x014c], $r12;
	set.ne.s32.s32 $p3/$o127, $r10, $r3;
	@$p3.equ shl.u32 $r12, $r2, 0x00000001;
	@$p3.equ add.u32 $r3, $r3, -$r12;
	@$p3.equ add.u32 $r2, -$r2, constant1_ZN8dwt_cuda12fdwt97KernelILi64ELi6EEEvPKfPfiii[0x0038];
	shl.u32 $r12, $r3, 0x00000002;
	add.u32 $r12, s[0x0010], $r12;
	ld.global.u32 $r12, [$r12];
	add.u32 $r3, $r2, $r3;
	mov.u32 s[$ofs1+0x00bc], $r12;
	set.ne.s32.s32 $p3/$o127, $r10, $r3;
	@$p3.equ shl.u32 $r2, $r2, 0x00000001;
	@$p3.equ add.u32 $r3, $r3, -$r2;
	shl.u32 $r2, $r3, 0x00000002;
	add.u32 $r2, s[0x0010], $r2;
	ld.global.u32 $r2, [$r2];
	mov.u32 s[$ofs1+0x002c], $r2;
	ssy 0x000009b8;
	@$p2.eq bra l0x000009a0;
	shl.u32 $r2, s[0x0020], 0x00000001;
	add.u32 $r2, $r2, -$r9;
	add.u32 $r10, $r2, 0xfffffffe;
	bra l0x000009b8;
	l0x000009a0: add.u32 $r10, -$r9, 0x00000000;
	set.lt.s32.s32 $p2/$o127, $r9, $r124;
	@$p2.equ mov.u32 $r10, $r9;
	l0x000009b8: nop;
	add.u32 $r3, $r7, 0x00000003;
	mov.u32 $r2, s[0x0020];
	mul.wide.u16 $r9, $r2.lo, $r3.hi;
	mad.wide.u16 $r9, $r2.hi, $r3.lo, $r9;
	shl.u32 $r9, $r9, 0x00000010;
	mad.wide.u16 $r2, $r2.lo, $r3.lo, $r9;
	add.half.u32 $r9, $r10, $r2;
	add.half.u32 $r2, $r11, $r10;
	mov.half.u32 $r3, s[0x0020];
	add.half.u32 $r22, -s[0x0020], $r9;
	bra l0x00000cb8;
	l0x00000a08: ssy 0x00000a50;
	@$p2.eq bra l0x00000a38;
	shl.u32 $r2, s[0x0020], 0x00000001;
	add.u32 $r2, $r2, -$r9;
	add.u32 $r10, $r2, 0xfffffffe;
	bra l0x00000a50;
	l0x00000a38: add.u32 $r10, -$r9, 0x00000000;
	set.lt.s32.s32 $p2/$o127, $r9, $r124;
	@$p2.equ mov.u32 $r10, $r9;
	l0x00000a50: mov.u32 $r3, s[0x0020];
	add.u32 $r9, $r7, 0xfffffffc;
	mul.wide.u16 $r2, $r9.lo, $r3.hi;
	mad.wide.u16 $r2, $r9.hi, $r3.lo, $r2;
	shl.u32 $r12, $r2, 0x00000010;
	add.u32 $r2, $r11, $r10;
	mad.wide.u16 $r12, $r9.lo, $r3.lo, $r12;
	mov.half.u32 $r3, s[0x0020];
	add.half.u32 $r9, $r10, $r12;
	set.ne.s32.s32 $p2/$o127, $r12, $r11;
	@$p2.equ shl.u32 $r3, s[0x0020], 0x00000001;
	@$p2.equ add.u32 $r9, $r9, -$r3;
	@$p2.equ add.u32 $r3, -s[0x0020], constant1_ZN8dwt_cuda12fdwt97KernelILi64ELi6EEEvPKfPfiii[0x0038];
	shl.u32 $r10, $r9, 0x00000002;
	add.u32 $r10, s[0x0010], $r10;
	ld.global.u32 $r10, [$r10];
	add.u32 $r9, $r9, $r3;
	shl.b32 $ofs1, $r23, 0x0;
	mov.u32 s[$ofs1+0x002c], $r10;
	set.ne.s32.s32 $p2/$o127, $r2, $r9;
	@$p2.equ shl.u32 $r10, $r3, 0x00000001;
	@$p2.equ add.u32 $r9, $r9, -$r10;
	@$p2.equ add.u32 $r3, -$r3, constant1_ZN8dwt_cuda12fdwt97KernelILi64ELi6EEEvPKfPfiii[0x0038];
	shl.u32 $r10, $r9, 0x00000002;
	add.u32 $r10, s[0x0010], $r10;
	ld.global.u32 $r10, [$r10];
	add.u32 $r9, $r9, $r3;
	mov.u32 s[$ofs1+0x00bc], $r10;
	set.ne.s32.s32 $p2/$o127, $r2, $r9;
	@$p2.equ shl.u32 $r10, $r3, 0x00000001;
	@$p2.equ add.u32 $r9, $r9, -$r10;
	@$p2.equ add.u32 $r3, -$r3, constant1_ZN8dwt_cuda12fdwt97KernelILi64ELi6EEEvPKfPfiii[0x0038];
	shl.u32 $r10, $r9, 0x00000002;
	add.u32 $r10, s[0x0010], $r10;
	ld.global.u32 $r10, [$r10];
	add.u32 $r9, $r9, $r3;
	mov.u32 s[$ofs1+0x014c], $r10;
	set.ne.s32.s32 $p2/$o127, $r2, $r9;
	@$p2.equ shl.u32 $r10, $r3, 0x00000001;
	@$p2.equ add.u32 $r9, $r9, -$r10;
	@$p2.equ add.u32 $r3, -$r3, constant1_ZN8dwt_cuda12fdwt97KernelILi64ELi6EEEvPKfPfiii[0x0038];
	shl.u32 $r10, $r9, 0x00000002;
	add.u32 $r10, s[0x0010], $r10;
	ld.global.u32 $r10, [$r10];
	add.u32 $r9, $r9, $r3;
	mov.u32 s[$ofs1+0x01dc], $r10;
	set.ne.s32.s32 $p2/$o127, $r2, $r9;
	@$p2.equ shl.u32 $r10, $r3, 0x00000001;
	@$p2.equ add.u32 $r9, $r9, -$r10;
	@$p2.equ add.u32 $r3, -$r3, constant1_ZN8dwt_cuda12fdwt97KernelILi64ELi6EEEvPKfPfiii[0x0038];
	shl.u32 $r10, $r9, 0x00000002;
	add.u32 $r10, s[0x0010], $r10;
	ld.global.u32 $r10, [$r10];
	add.u32 $r9, $r9, $r3;
	mov.u32 s[$ofs1+0x026c], $r10;
	set.ne.s32.s32 $p2/$o127, $r2, $r9;
	@$p2.equ shl.u32 $r10, $r3, 0x00000001;
	@$p2.equ add.u32 $r9, $r9, -$r10;
	@$p2.equ add.u32 $r3, -$r3, constant1_ZN8dwt_cuda12fdwt97KernelILi64ELi6EEEvPKfPfiii[0x0038];
	shl.u32 $r10, $r9, 0x00000002;
	add.u32 $r10, s[0x0010], $r10;
	ld.global.u32 $r10, [$r10];
	add.u32 $r22, $r9, $r3;
	mov.u32 s[$ofs1+0x02fc], $r10;
	set.ne.s32.s32 $p2/$o127, $r2, $r22;
	@$p2.equ shl.u32 $r9, $r3, 0x00000001;
	@$p2.equ add.u32 $r22, $r22, -$r9;
	@$p2.equ add.u32 $r3, -$r3, constant1_ZN8dwt_cuda12fdwt97KernelILi64ELi6EEEvPKfPfiii[0x0038];
	shl.u32 $r9, $r22, 0x00000002;
	add.u32 $r9, s[0x0010], $r9;
	ld.global.u32 $r9, [$r9];
	mov.u32 s[$ofs1+0x038c], $r9;
	bra l0x00000cb8;
	l0x00000c90: shl.b32 $ofs1, $r124, 0x00000002;
	mov.u32 $r23, $ofs1;
	mov.u32 $r22, $r124;
	mov.u32 $r3, $r124;
	mov.u32 $r2, $r124;
	l0x00000cb8: nop;
	bar.sync 0x00000000;
	shl.b32 $ofs2, $r17, 0x00000002;
	add.u32 $ofs1, $ofs2, 0x0000078c;
	mov.half.u32 $r9, s[$ofs2+0x0030];
	mov.half.u32 $r10, s[$ofs1+0x0000];
	add.f32 $r9, s[$ofs2+0x002c], $r9;
	mad.f32 $r10, $r9, 0xbfcb0673, $r10;
	mov.u32 s[$ofs2+0x078c], $r10;
	add.u32 $ofs1, $ofs2, 0x0000012c;
	mov.half.u32 $r9, s[$ofs1+0x0004];
	add.half.f32 $r10, s[$ofs1+0x0000], $r9;
	add.u32 $ofs1, $ofs2, 0x0000088c;
	mov.u32 $r9, s[$ofs1+0x0000];
	mad.f32 $r9, $r10, 0xbfcb0673, $r9;
	mov.u32 s[$ofs2+0x088c], $r9;
	add.u32 $ofs1, $ofs2, 0x0000022c;
	mov.half.u32 $r9, s[$ofs1+0x0004];
	add.half.f32 $r10, s[$ofs1+0x0000], $r9;
	add.u32 $ofs1, $ofs2, 0x0000098c;
	mov.u32 $r9, s[$ofs1+0x0000];
	mad.f32 $r9, $r10, 0xbfcb0673, $r9;
	mov.u32 s[$ofs2+0x098c], $r9;
	ssy 0x00000da0;
	@$p1.eq bra l0x00000da0;
	shl.b32 $ofs2, $r17, 0x00000002;
	add.u32 $ofs1, $ofs2, 0x0000032c;
	mov.half.u32 $r9, s[$ofs1+0x0004];
	add.half.f32 $r10, s[$ofs1+0x0000], $r9;
	add.u32 $ofs1, $ofs2, 0x00000a8c;
	mov.u32 $r9, s[$ofs1+0x0000];
	mad.f32 $r9, $r10, 0xbfcb0673, $r9;
	mov.u32 s[$ofs2+0x0a8c], $r9;
	l0x00000da0: nop;
	bar.sync 0x00000000;
	shl.b32 $ofs2, $r17, 0x00000002;
	add.u32 $ofs1, $ofs2, 0x0000078c;
	mov.half.u32 $r9, s[$ofs1+0x0004];
	mov.half.u32 $r10, s[$ofs2+0x0030];
	add.f32 $r9, s[$ofs1+0x0000], $r9;
	mad.f32 $r10, $r9, 0xbd5901ae, $r10;
	mov.u32 s[$ofs2+0x0030], $r10;
	add.u32 $ofs1, $ofs2, 0x0000088c;
	mov.half.u32 $r9, s[$ofs1+0x0004];
	add.half.f32 $r10, s[$ofs1+0x0000], $r9;
	add.u32 $ofs1, $ofs2, 0x00000130;
	mov.u32 $r9, s[$ofs1+0x0000];
	mad.f32 $r9, $r10, 0xbd5901ae, $r9;
	mov.u32 s[$ofs2+0x0130], $r9;
	add.u32 $ofs1, $ofs2, 0x0000098c;
	mov.half.u32 $r9, s[$ofs1+0x0004];
	add.half.f32 $r10, s[$ofs1+0x0000], $r9;
	add.u32 $ofs1, $ofs2, 0x00000230;
	mov.u32 $r9, s[$ofs1+0x0000];
	mad.f32 $r9, $r10, 0xbd5901ae, $r9;
	mov.u32 s[$ofs2+0x0230], $r9;
	ssy 0x00000e88;
	@$p1.eq bra l0x00000e88;
	shl.b32 $ofs2, $r17, 0x00000002;
	add.u32 $ofs1, $ofs2, 0x00000a8c;
	mov.half.u32 $r9, s[$ofs1+0x0004];
	add.half.f32 $r10, s[$ofs1+0x0000], $r9;
	add.u32 $ofs1, $ofs2, 0x00000330;
	mov.u32 $r9, s[$ofs1+0x0000];
	mad.f32 $r9, $r10, 0xbd5901ae, $r9;
	mov.u32 s[$ofs2+0x0330], $r9;
	l0x00000e88: nop;
	bar.sync 0x00000000;
	shl.b32 $ofs2, $r17, 0x00000002;
	add.u32 $ofs1, $ofs2, 0x0000078c;
	mov.half.u32 $r9, s[$ofs2+0x0030];
	mov.half.u32 $r10, s[$ofs1+0x0000];
	add.f32 $r9, s[$ofs2+0x002c], $r9;
	mad.f32 $r10, $r9, 0x3f620676, $r10;
	mov.u32 s[$ofs2+0x078c], $r10;
	add.u32 $ofs1, $ofs2, 0x0000012c;
	mov.half.u32 $r9, s[$ofs1+0x0004];
	add.half.f32 $r10, s[$ofs1+0x0000], $r9;
	add.u32 $ofs1, $ofs2, 0x0000088c;
	mov.u32 $r9, s[$ofs1+0x0000];
	mad.f32 $r9, $r10, 0x3f620676, $r9;
	mov.u32 s[$ofs2+0x088c], $r9;
	add.u32 $ofs1, $ofs2, 0x0000022c;
	mov.half.u32 $r9, s[$ofs1+0x0004];
	add.half.f32 $r10, s[$ofs1+0x0000], $r9;
	add.u32 $ofs1, $ofs2, 0x0000098c;
	mov.u32 $r9, s[$ofs1+0x0000];
	mad.f32 $r9, $r10, 0x3f620676, $r9;
	mov.u32 s[$ofs2+0x098c], $r9;
	ssy 0x00000f70;
	@$p1.eq bra l0x00000f70;
	shl.b32 $ofs2, $r17, 0x00000002;
	add.u32 $ofs1, $ofs2, 0x0000032c;
	mov.half.u32 $r9, s[$ofs1+0x0004];
	add.half.f32 $r10, s[$ofs1+0x0000], $r9;
	add.u32 $ofs1, $ofs2, 0x00000a8c;
	mov.u32 $r9, s[$ofs1+0x0000];
	mad.f32 $r9, $r10, 0x3f620676, $r9;
	mov.u32 s[$ofs2+0x0a8c], $r9;
	l0x00000f70: nop;
	bar.sync 0x00000000;
	shl.b32 $ofs2, $r17, 0x00000002;
	add.u32 $ofs1, $ofs2, 0x0000078c;
	mov.half.u32 $r9, s[$ofs1+0x0004];
	mov.half.u32 $r10, s[$ofs2+0x0030];
	add.f32 $r9, s[$ofs1+0x0000], $r9;
	mad.f32 $r10, $r9, 0x3ee31355, $r10;
	mov.u32 s[$ofs2+0x0030], $r10;
	add.u32 $ofs1, $ofs2, 0x0000088c;
	mov.half.u32 $r9, s[$ofs1+0x0004];
	add.half.f32 $r10, s[$ofs1+0x0000], $r9;
	add.u32 $ofs1, $ofs2, 0x00000130;
	mov.u32 $r9, s[$ofs1+0x0000];
	mad.f32 $r9, $r10, 0x3ee31355, $r9;
	mov.u32 s[$ofs2+0x0130], $r9;
	add.u32 $ofs1, $ofs2, 0x0000098c;
	mov.half.u32 $r9, s[$ofs1+0x0004];
	add.half.f32 $r10, s[$ofs1+0x0000], $r9;
	add.u32 $ofs1, $ofs2, 0x00000230;
	mov.u32 $r9, s[$ofs1+0x0000];
	mad.f32 $r9, $r10, 0x3ee31355, $r9;
	mov.u32 s[$ofs2+0x0230], $r9;
	ssy 0x00001058;
	@$p1.eq bra l0x00001058;
	shl.b32 $ofs2, $r17, 0x00000002;
	add.u32 $ofs1, $ofs2, 0x00000a8c;
	mov.half.u32 $r9, s[$ofs1+0x0004];
	add.half.f32 $r10, s[$ofs1+0x0000], $r9;
	add.u32 $ofs1, $ofs2, 0x00000330;
	mov.u32 $r9, s[$ofs1+0x0000];
	mad.f32 $r9, $r10, 0x3ee31355, $r9;
	mov.u32 s[$ofs2+0x0330], $r9;
	l0x00001058: nop;
	bar.sync 0x00000000;
	shl.b32 $ofs2, $r17, 0x00000002;
	mul.f32 $r9, s[$ofs2+0x002c], 0x3f5019c3;
	mov.u32 s[$ofs2+0x002c], $r9;
	add.u32 $ofs1, $ofs2, 0x0000078c;
	mul.f32 $r9, s[$ofs1+0x0000], 0x3f9d7658;
	mov.u32 s[$ofs2+0x078c], $r9;
	add.u32 $ofs1, $ofs2, 0x0000012c;
	mul.f32 $r9, s[$ofs1+0x0000], 0x3f5019c3;
	mov.u32 s[$ofs2+0x012c], $r9;
	add.u32 $ofs1, $ofs2, 0x0000088c;
	mul.f32 $r9, s[$ofs1+0x0000], 0x3f9d7658;
	mov.u32 s[$ofs2+0x088c], $r9;
	add.u32 $ofs1, $ofs2, 0x0000022c;
	mul.f32 $r9, s[$ofs1+0x0000], 0x3f5019c3;
	mov.u32 s[$ofs2+0x022c], $r9;
	add.u32 $ofs1, $ofs2, 0x0000098c;
	mul.f32 $r9, s[$ofs1+0x0000], 0x3f9d7658;
	mov.u32 s[$ofs2+0x098c], $r9;
	ssy 0x00001148;
	mov.pred $p2, $r6;
	@$p2.eq bra l0x00001148;
	shl.b32 $ofs2, $r17, 0x00000002;
	add.u32 $ofs1, $ofs2, 0x0000032c;
	mul.f32 $r6, s[$ofs1+0x0000], 0x3f5019c3;
	mov.u32 s[$ofs2+0x032c], $r6;
	add.u32 $ofs1, $ofs2, 0x00000a8c;
	mul.f32 $r6, s[$ofs1+0x0000], 0x3f9d7658;
	mov.u32 s[$ofs2+0x0a8c], $r6;
	l0x00001148: nop;
	bar.sync 0x00000000;
	ssy 0x000013b8;
	mov.pred $p3, $r8;
	@$p3.eq bra l0x00001398;
	shr.s32 $r8, s[0x0024], 0x0000001f;
	shr.s32 $r6, $r5, 0x0000001f;
	and.b32 $r9, $r8, constant1_ZN8dwt_cuda12fdwt97KernelILi64ELi6EEEvPKfPfiii[0x0000];
	shr.s32 $r8, s[0x0020], 0x0000001f;
	and.b32 $r6, $r6, constant1_ZN8dwt_cuda12fdwt97KernelILi64ELi6EEEvPKfPfiii[0x0000];
	add.u32 $r10, s[0x0024], $r9;
	and.b32 $p2|$o127, $r5, constant1_ZN8dwt_cuda12fdwt97KernelILi64ELi6EEEvPKfPfiii[0x0000];
	and.b32 $r8, $r8, constant1_ZN8dwt_cuda12fdwt97KernelILi64ELi6EEEvPKfPfiii[0x0000];
	add.u32 $r5, $r6, $r5;
	and.b32 $r6, $r10, constant1_ZN8dwt_cuda12fdwt97KernelILi64ELi6EEEvPKfPfiii[0x002c];
	ssy 0x000012d8;
	add.u32 $r9, s[0x0020], $r8;
	shr.s32 $r8, $r5, 0x00000001;
	add.u32 $r5, s[0x0024], -$r6;
	shr.s32 $r6, $r10, 0x00000001;
	shr.s32 $r9, $r9, 0x00000001;
	set.ne.s32.s32 $p1/$o127, $r5, $r124;
	@$p2.eq bra l0x00001290;
	shr.s32 $r5, s[0x0020], 0x0000001f;
	and.b32 $r5, $r5, constant1_ZN8dwt_cuda12fdwt97KernelILi64ELi6EEEvPKfPfiii[0x0000];
	add.u32 $r5, s[0x0020], $r5;
	and.b32 $r10, $r5, constant1_ZN8dwt_cuda12fdwt97KernelILi64ELi6EEEvPKfPfiii[0x002c];
	mov.u32 $r5, $r9;
	add.u32 $p2|$o127, s[0x0020], -$r10;
	@$p2.neu add.u32 $r9, $r9, constant1_ZN8dwt_cuda12fdwt97KernelILi64ELi6EEEvPKfPfiii[0x0000];
	@$p1.neu add.u32 $r10, $r6, constant1_ZN8dwt_cuda12fdwt97KernelILi64ELi6EEEvPKfPfiii[0x0000];
	@$p1.eq mov.u32 $r10, $r6;
	mul.wide.u16 $r12, $r9.lo, $r10.hi;
	mad.wide.u16 $r12, $r9.hi, $r10.lo, $r12;
	shr.s32 $r13, $r11, 0x0000001f;
	shl.u32 $r12, $r12, 0x00000010;
	and.b32 $r13, $r13, constant1_ZN8dwt_cuda12fdwt97KernelILi64ELi6EEEvPKfPfiii[0x0000];
	mad.wide.u16 $r9, $r9.lo, $r10.lo, $r12;
	add.half.u32 $r10, $r13, $r11;
	add.half.u32 $r8, $r9, $r8;
	shr.s32 $r16, $r10, 0x00000001;
	bra l0x000012d8;
	l0x00001290: and.b32 $r5, s[0x0020], constant1_ZN8dwt_cuda12fdwt97KernelILi64ELi6EEEvPKfPfiii[0x0000];
	add.u32 $r5, $r9, $r5;
	@$p1.neu add.u32 $r9, $r6, constant1_ZN8dwt_cuda12fdwt97KernelILi64ELi6EEEvPKfPfiii[0x0000];
	@$p1.eq mov.u32 $r9, $r6;
	mov.u32 $r10, s[0x0020];
	mul.wide.u16 $r11, $r9.lo, $r10.hi;
	mad.wide.u16 $r11, $r9.hi, $r10.lo, $r11;
	shl.u32 $r11, $r11, 0x00000010;
	mad.wide.u16 $r16, $r9.lo, $r10.lo, $r11;
	l0x000012d8: shr.s32 $r9, $r7, 0x0000001f;
	and.b32 $r9, $r9, constant1_ZN8dwt_cuda12fdwt97KernelILi64ELi6EEEvPKfPfiii[0x0000];
	add.u32 $r11, $r9, $r7;
	and.b32 $r9, s[0x0024], constant1_ZN8dwt_cuda12fdwt97KernelILi64ELi6EEEvPKfPfiii[0x0000];
	and.b32 $r10, $r7, constant1_ZN8dwt_cuda12fdwt97KernelILi64ELi6EEEvPKfPfiii[0x0000];
	shr.s32 $r7, $r11, 0x00000001;
	mul.half.lo.u16 $r11, $r6.lo, $r5.hi;
	mul.half.lo.u16 $r12, $r16.lo, $r9.hi;
	mul.half.lo.u16 $r13, $r5.lo, $r7.hi;
	mul.half.lo.u16 $r14, $r16.lo, $r10.hi;
	mad.wide.u16 $r11, $r6.hi, $r5.lo, $r11;
	mad.wide.u16 $r12, $r16.hi, $r9.lo, $r12;
	mad.wide.u16 $r13, $r5.hi, $r7.lo, $r13;
	mad.wide.u16 $r14, $r16.hi, $r10.lo, $r14;
	shl.u32 $r11, $r11, 0x00000010;
	shl.u32 $r12, $r12, 0x00000010;
	shl.u32 $r13, $r13, 0x00000010;
	shl.u32 $r14, $r14, 0x00000010;
	mad.wide.u16 $r6, $r6.lo, $r5.lo, $r11;
	mad.wide.u16 $r9, $r16.lo, $r9.lo, $r12;
	mad.wide.u16 $r7, $r5.lo, $r7.lo, $r13;
	mad.wide.u16 $r10, $r16.lo, $r10.lo, $r14;
	add.half.u32 $r6, $r6, $r9;
	add.half.u32 $r7, $r7, $r10;
	add.half.u32 $r24, $r8, $r6;
	add.half.u32 $r25, $r8, $r7;
	add.u32 $r26, $r5, -$r16;
	bra l0x000013b8;
	l0x00001398: mov.u32 $r25, $r124;
	mov.u32 $r26, $r124;
	mov.u32 $r24, $r124;
	mov.u32 $r16, $r124;
	l0x000013b8: set.gt.s32.s32 $p1/$o127, s[0x0028], $r124;
	@$p1.eq retp;
	add.u32 $r6, $r4, 0x00000004;
	mov.u32 $r5, 0x000001d8;
	and.b32 $r4, $r6, constant1_ZN8dwt_cuda12fdwt97KernelILi64ELi6EEEvPKfPfiii[0x0000];
	mul.wide.u16 $r8, $r4.lo, $r5.hi;
	shr.s32 $r7, $r6, 0x0000001f;
	mad.wide.u16 $r8, $r4.hi, $r5.lo, $r8;
	and.b32 $r7, $r7, constant1_ZN8dwt_cuda12fdwt97KernelILi64ELi6EEEvPKfPfiii[0x0000];
	shl.u32 $r8, $r8, 0x00000010;
	add.u32 $r6, $r6, $r7;
	mad.wide.u16 $r5, $r4.lo, $r5.lo, $r8;
	shr.s32 $r4, $r6, 0x00000001;
	add.u32 $r4, $r5, $r4;
	shl.b32 $ofs2, $r4, 0x00000002;
	set.lt.u32.u32 $p1/$o127, $r17, constant1_ZN8dwt_cuda12fdwt97KernelILi64ELi6EEEvPKfPfiii[0x0030];
	set.lt.u32.u32 $p2/$o127, $r17, constant1_ZN8dwt_cuda12fdwt97KernelILi64ELi6EEEvPKfPfiii[0x0034];
	@$p2 mov.u32 $r28, $p2;
	mov.u32 $r27, $r124;
	l0x00001450: add.u32 $r4, $r1, $r21;
	set.ne.s32.s32 $p2/$o127, $r0, $r4;
	@$p2.equ shl.u32 $r5, $r1, 0x00000001;
	@$p2.equ add.u32 $r4, $r4, -$r5;
	@$p2.equ add.u32 $r1, -$r1, constant1_ZN8dwt_cuda12fdwt97KernelILi64ELi6EEEvPKfPfiii[0x0038];
	shl.u32 $r5, $r4, 0x00000002;
	add.u32 $r5, s[0x0010], $r5;
	ld.global.u32 $r5, [$r5];
	add.u32 $r4, $r4, $r1;
	mov.u32 s[$ofs3+0x041c], $r5;
	set.ne.s32.s32 $p2/$o127, $r0, $r4;
	@$p2.equ shl.u32 $r5, $r1, 0x00000001;
	@$p2.equ add.u32 $r4, $r4, -$r5;
	@$p2.equ add.u32 $r1, -$r1, constant1_ZN8dwt_cuda12fdwt97KernelILi64ELi6EEEvPKfPfiii[0x0038];
	shl.u32 $r5, $r4, 0x00000002;
	add.u32 $r5, s[0x0010], $r5;
	ld.global.u32 $r5, [$r5];
	add.u32 $r4, $r4, $r1;
	mov.u32 s[$ofs3+0x04ac], $r5;
	set.ne.s32.s32 $p2/$o127, $r0, $r4;
	@$p2.equ shl.u32 $r5, $r1, 0x00000001;
	@$p2.equ add.u32 $r4, $r4, -$r5;
	@$p2.equ add.u32 $r1, -$r1, constant1_ZN8dwt_cuda12fdwt97KernelILi64ELi6EEEvPKfPfiii[0x0038];
	shl.u32 $r5, $r4, 0x00000002;
	add.u32 $r5, s[0x0010], $r5;
	ld.global.u32 $r5, [$r5];
	add.u32 $r4, $r4, $r1;
	mov.u32 s[$ofs3+0x053c], $r5;
	set.ne.s32.s32 $p2/$o127, $r0, $r4;
	@$p2.equ shl.u32 $r5, $r1, 0x00000001;
	@$p2.equ add.u32 $r4, $r4, -$r5;
	@$p2.equ add.u32 $r1, -$r1, constant1_ZN8dwt_cuda12fdwt97KernelILi64ELi6EEEvPKfPfiii[0x0038];
	shl.u32 $r5, $r4, 0x00000002;
	add.u32 $r5, s[0x0010], $r5;
	ld.global.u32 $r5, [$r5];
	add.u32 $r4, $r4, $r1;
	mov.u32 s[$ofs3+0x05cc], $r5;
	set.ne.s32.s32 $p2/$o127, $r0, $r4;
	@$p2.equ shl.u32 $r5, $r1, 0x00000001;
	@$p2.equ add.u32 $r4, $r4, -$r5;
	@$p2.equ add.u32 $r1, -$r1, constant1_ZN8dwt_cuda12fdwt97KernelILi64ELi6EEEvPKfPfiii[0x0038];
	shl.u32 $r5, $r4, 0x00000002;
	add.u32 $r5, s[0x0010], $r5;
	ld.global.u32 $r5, [$r5];
	add.u32 $r21, $r4, $r1;
	mov.u32 s[$ofs3+0x065c], $r5;
	set.ne.s32.s32 $p2/$o127, $r0, $r21;
	@$p2.equ shl.u32 $r4, $r1, 0x00000001;
	@$p2.equ add.u32 $r21, $r21, -$r4;
	@$p2.equ add.u32 $r1, -$r1, constant1_ZN8dwt_cuda12fdwt97KernelILi64ELi6EEEvPKfPfiii[0x0038];
	shl.u32 $r4, $r21, 0x00000002;
	add.u32 $r4, s[0x0010], $r4;
	ld.global.u32 $r4, [$r4];
	mov.u32 s[$ofs3+0x06ec], $r4;
	ssy 0x000017f0;
	@$p0.eq bra l0x000017f0;
	add.u32 $r4, $r22, $r3;
	set.ne.s32.s32 $p2/$o127, $r4, $r2;
	@$p2.equ shl.u32 $r5, $r3, 0x00000001;
	@$p2.equ add.u32 $r4, $r4, -$r5;
	@$p2.equ add.u32 $r3, -$r3, constant1_ZN8dwt_cuda12fdwt97KernelILi64ELi6EEEvPKfPfiii[0x0038];
	shl.u32 $r5, $r4, 0x00000002;
	add.u32 $r5, s[0x0010], $r5;
	ld.global.u32 $r5, [$r5];
	add.u32 $r4, $r4, $r3;
	shl.b32 $ofs1, $r23, 0x0;
	mov.u32 s[$ofs1+0x041c], $r5;
	set.ne.s32.s32 $p2/$o127, $r4, $r2;
	@$p2.equ shl.u32 $r5, $r3, 0x00000001;
	@$p2.equ add.u32 $r4, $r4, -$r5;
	@$p2.equ add.u32 $r3, -$r3, constant1_ZN8dwt_cuda12fdwt97KernelILi64ELi6EEEvPKfPfiii[0x0038];
	shl.u32 $r5, $r4, 0x00000002;
	add.u32 $r5, s[0x0010], $r5;
	ld.global.u32 $r5, [$r5];
	add.u32 $r4, $r4, $r3;
	shl.b32 $ofs1, $r23, 0x0;
	mov.u32 s[$ofs1+0x04ac], $r5;
	set.ne.s32.s32 $p2/$o127, $r4, $r2;
	@$p2.equ shl.u32 $r5, $r3, 0x00000001;
	@$p2.equ add.u32 $r4, $r4, -$r5;
	@$p2.equ add.u32 $r3, -$r3, constant1_ZN8dwt_cuda12fdwt97KernelILi64ELi6EEEvPKfPfiii[0x0038];
	shl.u32 $r5, $r4, 0x00000002;
	add.u32 $r5, s[0x0010], $r5;
	ld.global.u32 $r5, [$r5];
	add.u32 $r4, $r4, $r3;
	shl.b32 $ofs1, $r23, 0x0;
	mov.u32 s[$ofs1+0x053c], $r5;
	set.ne.s32.s32 $p2/$o127, $r4, $r2;
	@$p2.equ shl.u32 $r5, $r3, 0x00000001;
	@$p2.equ add.u32 $r4, $r4, -$r5;
	@$p2.equ add.u32 $r3, -$r3, constant1_ZN8dwt_cuda12fdwt97KernelILi64ELi6EEEvPKfPfiii[0x0038];
	shl.u32 $r5, $r4, 0x00000002;
	add.u32 $r5, s[0x0010], $r5;
	ld.global.u32 $r5, [$r5];
	add.u32 $r4, $r4, $r3;
	shl.b32 $ofs1, $r23, 0x0;
	mov.u32 s[$ofs1+0x05cc], $r5;
	set.ne.s32.s32 $p2/$o127, $r4, $r2;
	@$p2.equ shl.u32 $r5, $r3, 0x00000001;
	@$p2.equ add.u32 $r4, $r4, -$r5;
	@$p2.equ add.u32 $r3, -$r3, constant1_ZN8dwt_cuda12fdwt97KernelILi64ELi6EEEvPKfPfiii[0x0038];
	shl.u32 $r5, $r4, 0x00000002;
	add.u32 $r5, s[0x0010], $r5;
	ld.global.u32 $r5, [$r5];
	add.u32 $r22, $r4, $r3;
	shl.b32 $ofs1, $r23, 0x0;
	mov.u32 s[$ofs1+0x065c], $r5;
	set.ne.s32.s32 $p2/$o127, $r22, $r2;
	@$p2.equ shl.u32 $r4, $r3, 0x00000001;
	@$p2.equ add.u32 $r22, $r22, -$r4;
	@$p2.equ add.u32 $r3, -$r3, constant1_ZN8dwt_cuda12fdwt97KernelILi64ELi6EEEvPKfPfiii[0x0038];
	shl.u32 $r4, $r22, 0x00000002;
	add.u32 $r4, s[0x0010], $r4;
	ld.global.u32 $r4, [$r4];
	shl.b32 $ofs1, $r23, 0x0;
	mov.u32 s[$ofs1+0x06ec], $r4;
	l0x000017f0: nop;
	bar.sync 0x00000000;
	shl.b32 $ofs4, $r17, 0x00000002;
	add.u32 $ofs1, $ofs4, 0x00000b7c;
	mov.u32 $r5, s[$ofs1+0x0000];
	add.u32 $ofs1, $ofs4, 0x0000041c;
	mov.half.u32 $r4, s[$ofs1+0x0004];
	add.half.f32 $r4, s[$ofs1+0x0000], $r4;
	mad.f32 $r5, $r4, 0xbfcb0673, $r5;
	mov.u32 s[$ofs4+0x0b7c], $r5;
	add.u32 $ofs1, $ofs4, 0x00000c7c;
	mov.u32 $r5, s[$ofs1+0x0000];
	add.u32 $ofs1, $ofs4, 0x0000051c;
	mov.half.u32 $r4, s[$ofs1+0x0004];
	add.half.f32 $r4, s[$ofs1+0x0000], $r4;
	mad.f32 $r5, $r4, 0xbfcb0673, $r5;
	mov.u32 s[$ofs4+0x0c7c], $r5;
	add.u32 $ofs1, $ofs4, 0x00000d7c;
	mov.u32 $r5, s[$ofs1+0x0000];
	add.u32 $ofs1, $ofs4, 0x0000061c;
	mov.half.u32 $r4, s[$ofs1+0x0004];
	add.half.f32 $r4, s[$ofs1+0x0000], $r4;
	mad.f32 $r5, $r4, 0xbfcb0673, $r5;
	mov.u32 s[$ofs4+0x0d7c], $r5;
	ssy 0x000018e0;
	@$p1.eq bra l0x000018e0;
	shl.b32 $ofs4, $r17, 0x00000002;
	add.u32 $ofs1, $ofs4, 0x0000071c;
	mov.half.u32 $r4, s[$ofs1+0x0004];
	add.half.f32 $r5, s[$ofs1+0x0000], $r4;
	add.u32 $ofs1, $ofs4, 0x00000e7c;
	mov.u32 $r4, s[$ofs1+0x0000];
	mad.f32 $r4, $r5, 0xbfcb0673, $r4;
	mov.u32 s[$ofs4+0x0e7c], $r4;
	l0x000018e0: nop;
	bar.sync 0x00000000;
	shl.b32 $ofs4, $r17, 0x00000002;
	add.u32 $ofs1, $ofs4, 0x00000420;
	mov.u32 $r5, s[$ofs1+0x0000];
	add.u32 $ofs1, $ofs4, 0x00000b7c;
	mov.half.u32 $r4, s[$ofs1+0x0004];
	add.half.f32 $r4, s[$ofs1+0x0000], $r4;
	mad.f32 $r5, $r4, 0xbd5901ae, $r5;
	mov.u32 s[$ofs4+0x0420], $r5;
	add.u32 $ofs1, $ofs4, 0x00000520;
	mov.u32 $r5, s[$ofs1+0x0000];
	add.u32 $ofs1, $ofs4, 0x00000c7c;
	mov.half.u32 $r4, s[$ofs1+0x0004];
	add.half.f32 $r4, s[$ofs1+0x0000], $r4;
	mad.f32 $r5, $r4, 0xbd5901ae, $r5;
	mov.u32 s[$ofs4+0x0520], $r5;
	add.u32 $ofs1, $ofs4, 0x00000620;
	mov.u32 $r5, s[$ofs1+0x0000];
	add.u32 $ofs1, $ofs4, 0x00000d7c;
	mov.half.u32 $r4, s[$ofs1+0x0004];
	add.half.f32 $r4, s[$ofs1+0x0000], $r4;
	mad.f32 $r5, $r4, 0xbd5901ae, $r5;
	mov.u32 s[$ofs4+0x0620], $r5;
	ssy 0x000019d0;
	@$p1.eq bra l0x000019d0;
	shl.b32 $ofs4, $r17, 0x00000002;
	add.u32 $ofs1, $ofs4, 0x00000e7c;
	mov.half.u32 $r4, s[$ofs1+0x0004];
	add.half.f32 $r5, s[$ofs1+0x0000], $r4;
	add.u32 $ofs1, $ofs4, 0x00000720;
	mov.u32 $r4, s[$ofs1+0x0000];
	mad.f32 $r4, $r5, 0xbd5901ae, $r4;
	mov.u32 s[$ofs4+0x0720], $r4;
	l0x000019d0: nop;
	bar.sync 0x00000000;
	shl.b32 $ofs4, $r17, 0x00000002;
	add.u32 $ofs1, $ofs4, 0x00000b7c;
	mov.u32 $r5, s[$ofs1+0x0000];
	add.u32 $ofs1, $ofs4, 0x0000041c;
	mov.half.u32 $r4, s[$ofs1+0x0004];
	add.half.f32 $r4, s[$ofs1+0x0000], $r4;
	mad.f32 $r5, $r4, 0x3f620676, $r5;
	mov.u32 s[$ofs4+0x0b7c], $r5;
	add.u32 $ofs1, $ofs4, 0x00000c7c;
	mov.u32 $r5, s[$ofs1+0x0000];
	add.u32 $ofs1, $ofs4, 0x0000051c;
	mov.half.u32 $r4, s[$ofs1+0x0004];
	add.half.f32 $r4, s[$ofs1+0x0000], $r4;
	mad.f32 $r5, $r4, 0x3f620676, $r5;
	mov.u32 s[$ofs4+0x0c7c], $r5;
	add.u32 $ofs1, $ofs4, 0x00000d7c;
	mov.u32 $r5, s[$ofs1+0x0000];
	add.u32 $ofs1, $ofs4, 0x0000061c;
	mov.half.u32 $r4, s[$ofs1+0x0004];
	add.half.f32 $r4, s[$ofs1+0x0000], $r4;
	mad.f32 $r5, $r4, 0x3f620676, $r5;
	mov.u32 s[$ofs4+0x0d7c], $r5;
	ssy 0x00001ac0;
	@$p1.eq bra l0x00001ac0;
	shl.b32 $ofs4, $r17, 0x00000002;
	add.u32 $ofs1, $ofs4, 0x0000071c;
	mov.half.u32 $r4, s[$ofs1+0x0004];
	add.half.f32 $r5, s[$ofs1+0x0000], $r4;
	add.u32 $ofs1, $ofs4, 0x00000e7c;
	mov.u32 $r4, s[$ofs1+0x0000];
	mad.f32 $r4, $r5, 0x3f620676, $r4;
	mov.u32 s[$ofs4+0x0e7c], $r4;
	l0x00001ac0: nop;
	bar.sync 0x00000000;
	shl.b32 $ofs4, $r17, 0x00000002;
	add.u32 $ofs1, $ofs4, 0x00000420;
	mov.u32 $r5, s[$ofs1+0x0000];
	add.u32 $ofs1, $ofs4, 0x00000b7c;
	mov.half.u32 $r4, s[$ofs1+0x0004];
	add.half.f32 $r4, s[$ofs1+0x0000], $r4;
	mad.f32 $r5, $r4, 0x3ee31355, $r5;
	mov.u32 s[$ofs4+0x0420], $r5;
	add.u32 $ofs1, $ofs4, 0x00000520;
	mov.u32 $r5, s[$ofs1+0x0000];
	add.u32 $ofs1, $ofs4, 0x00000c7c;
	mov.half.u32 $r4, s[$ofs1+0x0004];
	add.half.f32 $r4, s[$ofs1+0x0000], $r4;
	mad.f32 $r5, $r4, 0x3ee31355, $r5;
	mov.u32 s[$ofs4+0x0520], $r5;
	add.u32 $ofs1, $ofs4, 0x00000620;
	mov.u32 $r5, s[$ofs1+0x0000];
	add.u32 $ofs1, $ofs4, 0x00000d7c;
	mov.half.u32 $r4, s[$ofs1+0x0004];
	add.half.f32 $r4, s[$ofs1+0x0000], $r4;
	mad.f32 $r5, $r4, 0x3ee31355, $r5;
	mov.u32 s[$ofs4+0x0620], $r5;
	ssy 0x00001bb0;
	@$p1.eq bra l0x00001bb0;
	shl.b32 $ofs4, $r17, 0x00000002;
	add.u32 $ofs1, $ofs4, 0x00000e7c;
	mov.half.u32 $r4, s[$ofs1+0x0004];
	add.half.f32 $r5, s[$ofs1+0x0000], $r4;
	add.u32 $ofs1, $ofs4, 0x00000720;
	mov.u32 $r4, s[$ofs1+0x0000];
	mad.f32 $r4, $r5, 0x3ee31355, $r4;
	mov.u32 s[$ofs4+0x0720], $r4;
	l0x00001bb0: nop;
	bar.sync 0x00000000;
	shl.b32 $ofs4, $r17, 0x00000002;
	add.u32 $ofs1, $ofs4, 0x0000041c;
	mul.f32 $r4, s[$ofs1+0x0000], 0x3f5019c3;
	mov.u32 s[$ofs4+0x041c], $r4;
	add.u32 $ofs1, $ofs4, 0x00000b7c;
	mul.f32 $r4, s[$ofs1+0x0000], 0x3f9d7658;
	mov.u32 s[$ofs4+0x0b7c], $r4;
	add.u32 $ofs1, $ofs4, 0x0000051c;
	mul.f32 $r4, s[$ofs1+0x0000], 0x3f5019c3;
	mov.u32 s[$ofs4+0x051c], $r4;
	add.u32 $ofs1, $ofs4, 0x00000c7c;
	mul.f32 $r4, s[$ofs1+0x0000], 0x3f9d7658;
	mov.u32 s[$ofs4+0x0c7c], $r4;
	add.u32 $ofs1, $ofs4, 0x0000061c;
	mul.f32 $r4, s[$ofs1+0x0000], 0x3f5019c3;
	mov.u32 s[$ofs4+0x061c], $r4;
	add.u32 $ofs1, $ofs4, 0x00000d7c;
	mul.f32 $r4, s[$ofs1+0x0000], 0x3f9d7658;
	mov.u32 s[$ofs4+0x0d7c], $r4;
	ssy 0x00001ca8;
	mov.pred $p2, $r28;
	@$p2.eq bra l0x00001ca8;
	shl.b32 $ofs4, $r17, 0x00000002;
	add.u32 $ofs1, $ofs4, 0x0000071c;
	mul.f32 $r4, s[$ofs1+0x0000], 0x3f5019c3;
	mov.u32 s[$ofs4+0x071c], $r4;
	add.u32 $ofs1, $ofs4, 0x00000e7c;
	mul.f32 $r4, s[$ofs1+0x0000], 0x3f9d7658;
	mov.u32 s[$ofs4+0x0e7c], $r4;
	l0x00001ca8: nop;
	bar.sync 0x00000000;
	add.u32 $ofs1, $ofs2, 0x000000bc;
	mov.u32 $r12, s[$ofs1+0x0000];
	add.u32 $ofs1, $ofs2, 0x0000041c;
	mov.u32 $r5, s[$ofs1+0x0000];
	st.local.u32 [0x0010], $r5;
	mov.u32 $r11, s[$ofs1+0x0000];
	add.u32 $ofs1, $ofs2, 0x0000053c;
	mov.u32 $r7, s[$ofs1+0x0000];
	st.local.u32 [0x000c], $r7;
	mov.u32 $r9, s[$ofs1+0x0000];
	add.u32 $ofs1, $ofs2, 0x0000065c;
	mov.u32 $r13, s[$ofs1+0x0000];
	st.local.u32 [0x0008], $r13;
	mov.u32 $r20, s[$ofs1+0x0000];
	add.u32 $ofs1, $ofs2, 0x0000014c;
	mov.half.u32 $r13, s[$ofs1+0x0000];
	mov.half.u32 $r18, s[$ofs1+0x0000];
	mov.u32 $r14, s[$ofs1+0x0000];
	add.u32 $ofs1, $ofs2, 0x000004ac;
	add.u32 $ofs4, $ofs2, 0x0000038c;
	mov.u32 $r4, s[$ofs1+0x0000];
	mov.u32 $r8, s[$ofs4+0x0000];
	mov.u32 $r19, s[$ofs4+0x0000];
	mov.u32 $r7, s[$ofs4+0x0000];
	add.f32 $r10, s[$ofs4+0x0000], $r4;
	add.u32 $ofs4, $ofs2, 0x000005cc;
	mov.u32 $r4, s[$ofs4+0x0000];
	mov.half.u32 $r6, s[$ofs1+0x0000];
	mov.half.u32 $r5, s[$ofs1+0x0000];
	add.half.f32 $r15, s[$ofs1+0x0000], $r4;
	add.half.f32 $r4, s[$ofs2+0x002c], $r13;
	add.u32 $ofs1, $ofs2, 0x000006ec;
	mad.f32 $r12, $r4, 0xbfcb0673, $r12;
	mov.u32 $r4, s[$ofs1+0x0000];
	add.f32 $r4, s[$ofs4+0x0000], $r4;
	mad.f32 $r9, $r15, 0xbfcb0673, $r9;
	mad.f32 $r20, $r4, 0xbfcb0673, $r20;
	mov.u32 $r4, s[$ofs4+0x0000];
	mov.u32 $r13, s[$ofs4+0x0000];
	mad.f32 $r11, $r10, 0xbfcb0673, $r11;
	add.f32 $r10, $r9, $r20;
	mad.f32 $r13, $r10, 0xbd5901ae, $r13;
	mov.half.u32 $r15, s[$ofs2+0x002c];
	mov.half.u32 $r10, s[$ofs1+0x0000];
	add.f32 $r30, s[$ofs1+0x0000], $r13;
	add.u32 $ofs4, $ofs2, 0x0000026c;
	mov.u32 s[$ofs2+0x00bc], $r12;
	mov.u32 $r29, s[$ofs4+0x0000];
	add.f32 $r29, $r18, $r29;
	add.u32 $ofs1, $ofs2, 0x000001dc;
	mov.u32 $r18, s[$ofs1+0x0000];
	mad.f32 $r18, $r29, 0xbfcb0673, $r18;
	mov.u32 $r29, s[$ofs4+0x0000];
	add.f32 $r31, $r19, $r29;
	mov.u32 $r29, s[$ofs4+0x0000];
	add.u32 $ofs1, $ofs2, 0x000002fc;
	mov.u32 s[$ofs2+0x01dc], $r18;
	mov.u32 $r19, s[$ofs1+0x0000];
	mad.f32 $r19, $r31, 0xbfcb0673, $r19;
	mov.u32 s[$ofs2+0x02fc], $r19;
	mov.u32 s[$ofs2+0x041c], $r11;
	mov.u32 s[$ofs2+0x053c], $r9;
	mov.u32 s[$ofs2+0x065c], $r20;
	mad.f32 $r20, $r30, 0x3f620676, $r20;
	add.f32 $r30, $r12, $r18;
	mad.f32 $r14, $r30, 0xbd5901ae, $r14;
	add.f32 $r15, $r15, $r14;
	mad.f32 $r15, $r15, constant1_ZN8dwt_cuda12fdwt97KernelILi64ELi6EEEvPKfPfiii[0x0024], $r12;
	add.f32 $r12, $r18, $r19;
	mad.f32 $r12, $r12, constant1_ZN8dwt_cuda12fdwt97KernelILi64ELi6EEEvPKfPfiii[0x0020], $r29;
	add.f32 $r29, $r19, $r11;
	mad.f32 $r7, $r29, 0xbd5901ae, $r7;
	add.f32 $r29, $r11, $r9;
	mad.f32 $r5, $r29, 0xbd5901ae, $r5;
	add.f32 $r29, $r14, $r12;
	mad.f32 $r18, $r29, 0x3f620676, $r18;
	mov.u32 s[$ofs2+0x014c], $r14;
	mov.u32 s[$ofs2+0x026c], $r12;
	mov.u32 s[$ofs2+0x038c], $r7;
	mov.u32 s[$ofs2+0x04ac], $r5;
	mov.u32 s[$ofs2+0x05cc], $r13;
	mov.u32 s[$ofs2+0x00bc], $r15;
	add.f32 $r15, $r15, $r18;
	mad.f32 $r14, $r15, 0x3ee31355, $r14;
	add.f32 $r15, $r12, $r7;
	mad.f32 $r19, $r15, 0x3f620676, $r19;
	add.f32 $r15, $r7, $r5;
	mad.f32 $r11, $r15, 0x3f620676, $r11;
	add.f32 $r15, $r5, $r13;
	mad.f32 $r9, $r15, 0x3f620676, $r9;
	mov.u32 s[$ofs2+0x01dc], $r18;
	mov.u32 s[$ofs2+0x02fc], $r19;
	mov.u32 s[$ofs2+0x041c], $r11;
	mov.u32 s[$ofs2+0x053c], $r9;
	mov.u32 s[$ofs2+0x065c], $r20;
	add.f32 $r15, $r18, $r19;
	mov.u32 s[$ofs2+0x014c], $r14;
	add.f32 $r14, $r19, $r11;
	mad.f32 $r12, $r15, 0x3ee31355, $r12;
	mad.f32 $r7, $r14, 0x3ee31355, $r7;
	mov.u32 s[$ofs2+0x026c], $r12;
	add.f32 $r11, $r11, $r9;
	mov.u32 s[$ofs2+0x038c], $r7;
	add.f32 $r7, $r9, $r20;
	mad.f32 $r5, $r11, 0x3ee31355, $r5;
	mad.f32 $r13, $r7, 0x3ee31355, $r13;
	mov.u32 s[$ofs2+0x04ac], $r5;
	mov.u32 s[$ofs2+0x05cc], $r13;
	mul.f32 $r5, $r12, 0x3f5019c3;
	set.ne.s32.s32 $p3/$r7, $r25, $r24;
	cvt.s32.s32 $p2|$o127, $r7;
	@$p3.neu shl.u32 $r7, $r25, 0x00000002;
	@$p3.neu add.u32 $r7, s[0x0018], $r7;
	@$p3.neu add.u32 $r25, $r25, $r16;
	@$p3.neu st.global.u32 [$r7], $r5;
	@$p3.neu set.ne.s32.s32 $p2/$o127, $r25, $r24;
	add.u32 $ofs1, $ofs2, 0x000002fc;
	mul.f32 $r5, s[$ofs1+0x0000], 0x3f9d7658;
	@$p2.neu shl.u32 $r7, $r25, 0x00000002;
	@$p2.neu add.u32 $r7, s[0x0018], $r7;
	@$p2.neu add.u32 $r25, $r25, $r26;
	@$p2.neu st.global.u32 [$r7], $r5;
	@$p2.neu set.ne.s32.s32 $p2/$o127, $r25, $r24;
	add.u32 $ofs1, $ofs2, 0x0000038c;
	mul.f32 $r5, s[$ofs1+0x0000], 0x3f5019c3;
	@$p2.neu shl.u32 $r7, $r25, 0x00000002;
	@$p2.neu add.u32 $r7, s[0x0018], $r7;
	@$p2.neu add.u32 $r25, $r25, $r16;
	@$p2.neu st.global.u32 [$r7], $r5;
	@$p2.neu set.ne.s32.s32 $p2/$o127, $r25, $r24;
	add.u32 $ofs1, $ofs2, 0x0000041c;
	mul.f32 $r5, s[$ofs1+0x0000], 0x3f9d7658;
	@$p2.neu shl.u32 $r7, $r25, 0x00000002;
	@$p2.neu add.u32 $r7, s[0x0018], $r7;
	@$p2.neu add.u32 $r25, $r25, $r26;
	@$p2.neu st.global.u32 [$r7], $r5;
	@$p2.neu set.ne.s32.s32 $p2/$o127, $r25, $r24;
	add.u32 $ofs1, $ofs2, 0x000004ac;
	mul.f32 $r5, s[$ofs1+0x0000], 0x3f5019c3;
	@$p2.neu shl.u32 $r7, $r25, 0x00000002;
	@$p2.neu add.u32 $r7, s[0x0018], $r7;
	@$p2.neu add.u32 $r25, $r25, $r16;
	@$p2.neu st.global.u32 [$r7], $r5;
	@$p2.neu set.ne.s32.s32 $p2/$o127, $r25, $r24;
	add.u32 $ofs1, $ofs2, 0x0000053c;
	mul.f32 $r5, s[$ofs1+0x0000], 0x3f9d7658;
	@$p2.neu shl.u32 $r7, $r25, 0x00000002;
	@$p2.neu add.u32 $r7, s[0x0018], $r7;
	@$p2.neu st.global.u32 [$r7], $r5;
	@$p2.neu add.u32 $r25, $r25, $r26;
	ld.local.u32 $r5, [0x0010];
	ld.local.u32 $r7, [0x000c];
	ld.local.u32 $r13, [0x0008];
	mov.u32 s[$ofs2+0x002c], $r8;
	mov.u32 s[$ofs2+0x00bc], $r5;
	mov.u32 s[$ofs2+0x014c], $r6;
	mov.u32 s[$ofs2+0x01dc], $r7;
	mov.u32 s[$ofs2+0x026c], $r4;
	mov.u32 s[$ofs2+0x02fc], $r13;
	mov.u32 s[$ofs2+0x038c], $r10;
	bar.sync 0x00000000;
	add.u32 $r27, $r27, 0x00000001;
	set.ne.s32.s32 $p2/$o127, s[0x0028], $r27;
	@$p2.ne bra l0x00001450;
	retp;
	l0x000021c0: mul.wide.u16 $r0, %ctaid.x, 0x00000040;
	add.u32 $r0, $r0, 0x00000043;
	set.gt.s32.s32 $p3/$o127, s[0x0020], $r0;
	@$p3.ne bra l0x00003c80;
	cvt.u32.u16 $r2, %ctaid.y;
	set.eq.u32.u32 $p3/$o127, $r2, $r124;
	@$p3.eq bra l0x000023c8;
	ssy 0x00002248;
	@$p2.eq bra l0x00002228;
	shl.u32 $r0, s[0x0020], 0x00000001;
	add.u32 $r0, $r0, -$r9;
	add.u32 $r2, $r0, 0xfffffffe;
	bra l0x00002248;
	l0x00002228: add.u32 $r2, -$r9, 0x00000000;
	set.lt.s32.s32 $p3/$o127, $r9, $r124;
	@$p3 mov.u32 $r0, $p3;
	@$p3.equ mov.u32 $r2, $r9;
	l0x00002248: mov.u32 $r0, s[0x0020];
	mul.wide.u16 $r1, $r0.lo, $r7.hi;
	mad.wide.u16 $r1, $r0.hi, $r7.lo, $r1;
	shl.u32 $r1, $r1, 0x00000010;
	mad.wide.u16 $r0, $r0.lo, $r7.lo, $r1;
	add.half.u32 $r0, $r0, $r2;
	add.half.u32 $r2, s[0x0020], $r0;
	shl.u32 $r0, $r0, 0x00000002;
	shl.u32 $r10, $r2, 0x00000002;
	add.u32 $r0, s[0x0010], $r0;
	ld.global.u32 $r1, [$r0];
	add.u32 $r0, s[0x0010], $r10;
	ld.global.u32 $r0, [$r0];
	add.half.u32 $r2, s[0x0020], $r2;
	add.half.u32 $r10, s[0x0020], $r2;
	mov.u32 s[$ofs3+0x026c], $r1;
	add.u32 $r11, s[0x0020], $r10;
	shl.u32 $r1, $r2, 0x00000002;
	mov.u32 s[$ofs3+0x02fc], $r0;
	shl.u32 $r10, $r10, 0x00000002;
	shl.u32 $r11, $r11, 0x00000002;
	add.u32 $r1, s[0x0010], $r1;
	ld.global.u32 $r2, [$r1];
	mov.u32 s[$ofs3+0x01dc], $r0;
	add.u32 $r0, s[0x0010], $r10;
	ld.global.u32 $r1, [$r0];
	add.u32 $r0, s[0x0010], $r11;
	ld.global.u32 $r0, [$r0];
	mov.u32 s[$ofs3+0x038c], $r2;
	mov.u32 s[$ofs3+0x014c], $r2;
	mov.u32 s[$ofs3+0x00bc], $r1;
	mov.u32 s[$ofs3+0x002c], $r0;
	ssy 0x00002380;
	@$p2.eq bra l0x00002368;
	shl.u32 $r0, s[0x0020], 0x00000001;
	add.u32 $r0, $r0, -$r9;
	add.u32 $r2, $r0, 0xfffffffe;
	bra l0x00002380;
	l0x00002368: add.u32 $r2, -$r9, 0x00000000;
	set.lt.s32.s32 $p2/$o127, $r9, $r124;
	@$p2.equ mov.u32 $r2, $r9;
	l0x00002380: nop;
	add.u32 $r1, $r7, 0x00000003;
	mov.u32 $r0, s[0x0020];
	mul.wide.u16 $r9, $r0.lo, $r1.hi;
	mad.wide.u16 $r9, $r0.hi, $r1.lo, $r9;
	shl.u32 $r9, $r9, 0x00000010;
	mad.wide.u16 $r0, $r0.lo, $r1.lo, $r9;
	add.half.u32 $r0, $r0, $r2;
	add.half.u32 $r9, -s[0x0020], $r0;
	bra l0x00002550;
	l0x000023c8: ssy 0x00002410;
	@$p2.eq bra l0x000023f8;
	shl.u32 $r0, s[0x0020], 0x00000001;
	add.u32 $r0, $r0, -$r9;
	add.u32 $r2, $r0, 0xfffffffe;
	bra l0x00002410;
	l0x000023f8: add.u32 $r2, -$r9, 0x00000000;
	set.lt.s32.s32 $p2/$o127, $r9, $r124;
	@$p2.equ mov.u32 $r2, $r9;
	l0x00002410: mov.u32 $r0, s[0x0020];
	add.u32 $r1, $r7, 0xfffffffc;
	mul.wide.u16 $r9, $r1.lo, $r0.hi;
	mad.wide.u16 $r9, $r1.hi, $r0.lo, $r9;
	shl.u32 $r9, $r9, 0x00000010;
	mad.wide.u16 $r0, $r1.lo, $r0.lo, $r9;
	add.half.u32 $r0, $r0, $r2;
	add.half.u32 $r1, s[0x0020], $r0;
	add.u32 $r9, s[0x0020], $r1;
	shl.u32 $r0, $r0, 0x00000002;
	shl.u32 $r1, $r1, 0x00000002;
	shl.u32 $r10, $r9, 0x00000002;
	add.u32 $r0, s[0x0010], $r0;
	ld.global.u32 $r2, [$r0];
	add.u32 $r0, s[0x0010], $r1;
	ld.global.u32 $r1, [$r0];
	add.u32 $r0, s[0x0010], $r10;
	ld.global.u32 $r0, [$r0];
	add.u32 $r10, s[0x0020], $r9;
	mov.u32 s[$ofs3+0x002c], $r2;
	add.u32 $r2, s[0x0020], $r10;
	mov.u32 s[$ofs3+0x00bc], $r1;
	add.u32 $r11, s[0x0020], $r2;
	mov.u32 s[$ofs3+0x014c], $r0;
	add.u32 $r9, s[0x0020], $r11;
	shl.u32 $r0, $r10, 0x00000002;
	shl.u32 $r1, $r2, 0x00000002;
	shl.u32 $r11, $r11, 0x00000002;
	shl.u32 $r12, $r9, 0x00000002;
	add.u32 $r0, s[0x0010], $r0;
	ld.global.u32 $r10, [$r0];
	add.u32 $r0, s[0x0010], $r1;
	ld.global.u32 $r2, [$r0];
	add.u32 $r0, s[0x0010], $r11;
	ld.global.u32 $r1, [$r0];
	add.u32 $r0, s[0x0010], $r12;
	ld.global.u32 $r0, [$r0];
	mov.u32 s[$ofs3+0x01dc], $r10;
	mov.u32 s[$ofs3+0x026c], $r2;
	mov.u32 s[$ofs3+0x02fc], $r1;
	mov.u32 s[$ofs3+0x038c], $r0;
	l0x00002550: ssy 0x000029a0;
	@$p0.eq bra l0x00002980;
	add.u32 $r0, $r17, 0xfffffff9;
	set.le.u32.u32 $p2/$o127, $r17, constant1_ZN8dwt_cuda12fdwt97KernelILi64ELi6EEEvPKfPfiii[0x0014];
	@$p2.ne add.u32 $r0, $r17, constant1_ZN8dwt_cuda12fdwt97KernelILi64ELi6EEEvPKfPfiii[0x0018];
	add.u32 $r1, $r0, 0x00000004;
	mov.u32 $r10, 0x000001d8;
	and.b32 $r2, $r1, constant1_ZN8dwt_cuda12fdwt97KernelILi64ELi6EEEvPKfPfiii[0x0000];
	mul.wide.u16 $r12, $r2.lo, $r10.hi;
	shr.s32 $r11, $r1, 0x0000001f;
	mad.wide.u16 $r12, $r2.hi, $r10.lo, $r12;
	and.b32 $r11, $r11, constant1_ZN8dwt_cuda12fdwt97KernelILi64ELi6EEEvPKfPfiii[0x0000];
	shl.u32 $r12, $r12, 0x00000010;
	add.u32 $r1, $r1, $r11;
	mad.wide.u16 $r2, $r2.lo, $r10.lo, $r12;
	shr.s32 $r1, $r1, 0x00000001;
	add.u32 $r1, $r2, $r1;
	shl.b32 $ofs1, $r1, 0x00000002;
	mov.u32 $r25, $ofs1;
	add.u32 $r1, $r0, $r3;
	set.le.s32.s32 $p2/$o127, s[0x0020], $r1;
	cvt.u32.u16 $r2, %ctaid.y;
	set.eq.u32.u32 $p3/$o127, $r2, $r124;
	@$p3.eq bra l0x000027e0;
	ssy 0x00002658;
	@$p2.eq bra l0x00002640;
	shl.u32 $r0, s[0x0020], 0x00000001;
	add.u32 $r0, $r0, -$r1;
	add.u32 $r2, $r0, 0xfffffffe;
	bra l0x00002658;
	l0x00002640: add.u32 $r2, -$r1, 0x00000000;
	set.lt.s32.s32 $p3/$o127, $r1, $r124;
	@$p3.equ mov.u32 $r2, $r1;
	l0x00002658: mov.u32 $r0, s[0x0020];
	mul.wide.u16 $r3, $r0.lo, $r7.hi;
	mad.wide.u16 $r3, $r0.hi, $r7.lo, $r3;
	shl.u32 $r3, $r3, 0x00000010;
	mad.wide.u16 $r0, $r0.lo, $r7.lo, $r3;
	add.half.u32 $r0, $r0, $r2;
	add.half.u32 $r3, s[0x0020], $r0;
	shl.u32 $r0, $r0, 0x00000002;
	shl.u32 $r10, $r3, 0x00000002;
	add.u32 $r0, s[0x0010], $r0;
	ld.global.u32 $r2, [$r0];
	add.u32 $r0, s[0x0010], $r10;
	ld.global.u32 $r0, [$r0];
	add.half.u32 $r3, s[0x0020], $r3;
	add.half.u32 $r10, s[0x0020], $r3;
	shl.b32 $ofs1, $r25, 0x0;
	mov.u32 s[$ofs1+0x026c], $r2;
	add.u32 $r11, s[0x0020], $r10;
	shl.u32 $r2, $r3, 0x00000002;
	mov.u32 s[$ofs1+0x02fc], $r0;
	shl.u32 $r10, $r10, 0x00000002;
	shl.u32 $r11, $r11, 0x00000002;
	add.u32 $r2, s[0x0010], $r2;
	ld.global.u32 $r3, [$r2];
	mov.u32 s[$ofs1+0x01dc], $r0;
	add.u32 $r0, s[0x0010], $r10;
	ld.global.u32 $r2, [$r0];
	add.u32 $r0, s[0x0010], $r11;
	ld.global.u32 $r0, [$r0];
	mov.u32 s[$ofs1+0x038c], $r3;
	mov.u32 s[$ofs1+0x014c], $r3;
	mov.u32 s[$ofs1+0x00bc], $r2;
	mov.u32 s[$ofs1+0x002c], $r0;
	ssy 0x00002798;
	@$p2.eq bra l0x00002780;
	shl.u32 $r0, s[0x0020], 0x00000001;
	add.u32 $r0, $r0, -$r1;
	add.u32 $r2, $r0, 0xfffffffe;
	bra l0x00002798;
	l0x00002780: add.u32 $r2, -$r1, 0x00000000;
	set.lt.s32.s32 $p2/$o127, $r1, $r124;
	@$p2.equ mov.u32 $r2, $r1;
	l0x00002798: nop;
	add.u32 $r1, $r7, 0x00000003;
	mov.u32 $r0, s[0x0020];
	mul.wide.u16 $r3, $r0.lo, $r1.hi;
	mad.wide.u16 $r3, $r0.hi, $r1.lo, $r3;
	shl.u32 $r3, $r3, 0x00000010;
	mad.wide.u16 $r0, $r0.lo, $r1.lo, $r3;
	add.half.u32 $r0, $r0, $r2;
	add.half.u32 $r22, -s[0x0020], $r0;
	bra l0x00002970;
	l0x000027e0: ssy 0x00002828;
	@$p2.eq bra l0x00002810;
	shl.u32 $r0, s[0x0020], 0x00000001;
	add.u32 $r0, $r0, -$r1;
	add.u32 $r2, $r0, 0xfffffffe;
	bra l0x00002828;
	l0x00002810: add.u32 $r2, -$r1, 0x00000000;
	set.lt.s32.s32 $p2/$o127, $r1, $r124;
	@$p2.equ mov.u32 $r2, $r1;
	l0x00002828: mov.u32 $r0, s[0x0020];
	add.u32 $r1, $r7, 0xfffffffc;
	mul.wide.u16 $r3, $r1.lo, $r0.hi;
	mad.wide.u16 $r3, $r1.hi, $r0.lo, $r3;
	shl.u32 $r3, $r3, 0x00000010;
	mad.wide.u16 $r0, $r1.lo, $r0.lo, $r3;
	add.half.u32 $r0, $r0, $r2;
	add.half.u32 $r1, s[0x0020], $r0;
	add.u32 $r3, s[0x0020], $r1;
	shl.u32 $r0, $r0, 0x00000002;
	shl.u32 $r1, $r1, 0x00000002;
	shl.u32 $r10, $r3, 0x00000002;
	add.u32 $r0, s[0x0010], $r0;
	ld.global.u32 $r2, [$r0];
	add.u32 $r0, s[0x0010], $r1;
	ld.global.u32 $r1, [$r0];
	add.u32 $r0, s[0x0010], $r10;
	ld.global.u32 $r0, [$r0];
	add.u32 $r3, s[0x0020], $r3;
	shl.b32 $ofs1, $r25, 0x0;
	mov.u32 s[$ofs1+0x002c], $r2;
	add.u32 $r2, s[0x0020], $r3;
	mov.u32 s[$ofs1+0x00bc], $r1;
	add.u32 $r10, s[0x0020], $r2;
	mov.u32 s[$ofs1+0x014c], $r0;
	add.u32 $r22, s[0x0020], $r10;
	shl.u32 $r0, $r3, 0x00000002;
	shl.u32 $r1, $r2, 0x00000002;
	shl.u32 $r10, $r10, 0x00000002;
	shl.u32 $r11, $r22, 0x00000002;
	add.u32 $r0, s[0x0010], $r0;
	ld.global.u32 $r3, [$r0];
	add.u32 $r0, s[0x0010], $r1;
	ld.global.u32 $r2, [$r0];
	add.u32 $r0, s[0x0010], $r10;
	ld.global.u32 $r1, [$r0];
	add.u32 $r0, s[0x0010], $r11;
	ld.global.u32 $r0, [$r0];
	mov.u32 s[$ofs1+0x01dc], $r3;
	mov.u32 s[$ofs1+0x026c], $r2;
	mov.u32 s[$ofs1+0x02fc], $r1;
	mov.u32 s[$ofs1+0x038c], $r0;
	l0x00002970: mov.u32 $r0, s[0x0020];
	bra l0x000029a0;
	l0x00002980: shl.b32 $ofs1, $r124, 0x00000002;
	mov.u32 $r25, $ofs1;
	mov.u32 $r22, $r124;
	mov.u32 $r0, $r124;
	l0x000029a0: nop;
	bar.sync 0x00000000;
	shl.b32 $ofs2, $r17, 0x00000002;
	add.u32 $ofs1, $ofs2, 0x0000078c;
	mov.half.u32 $r1, s[$ofs2+0x0030];
	mov.half.u32 $r2, s[$ofs1+0x0000];
	add.f32 $r1, s[$ofs2+0x002c], $r1;
	mad.f32 $r2, $r1, 0xbfcb0673, $r2;
	mov.u32 s[$ofs2+0x078c], $r2;
	add.u32 $ofs1, $ofs2, 0x0000012c;
	mov.half.u32 $r1, s[$ofs1+0x0004];
	add.half.f32 $r2, s[$ofs1+0x0000], $r1;
	add.u32 $ofs1, $ofs2, 0x0000088c;
	mov.u32 $r1, s[$ofs1+0x0000];
	mad.f32 $r1, $r2, 0xbfcb0673, $r1;
	mov.u32 s[$ofs2+0x088c], $r1;
	add.u32 $ofs1, $ofs2, 0x0000022c;
	mov.half.u32 $r1, s[$ofs1+0x0004];
	add.half.f32 $r2, s[$ofs1+0x0000], $r1;
	add.u32 $ofs1, $ofs2, 0x0000098c;
	mov.u32 $r1, s[$ofs1+0x0000];
	mad.f32 $r1, $r2, 0xbfcb0673, $r1;
	mov.u32 s[$ofs2+0x098c], $r1;
	ssy 0x00002a88;
	@$p1.eq bra l0x00002a88;
	shl.b32 $ofs2, $r17, 0x00000002;
	add.u32 $ofs1, $ofs2, 0x0000032c;
	mov.half.u32 $r1, s[$ofs1+0x0004];
	add.half.f32 $r2, s[$ofs1+0x0000], $r1;
	add.u32 $ofs1, $ofs2, 0x00000a8c;
	mov.u32 $r1, s[$ofs1+0x0000];
	mad.f32 $r1, $r2, 0xbfcb0673, $r1;
	mov.u32 s[$ofs2+0x0a8c], $r1;
	l0x00002a88: nop;
	bar.sync 0x00000000;
	shl.b32 $ofs2, $r17, 0x00000002;
	add.u32 $ofs1, $ofs2, 0x0000078c;
	mov.half.u32 $r1, s[$ofs1+0x0004];
	mov.half.u32 $r2, s[$ofs2+0x0030];
	add.f32 $r1, s[$ofs1+0x0000], $r1;
	mad.f32 $r2, $r1, 0xbd5901ae, $r2;
	mov.u32 s[$ofs2+0x0030], $r2;
	add.u32 $ofs1, $ofs2, 0x0000088c;
	mov.half.u32 $r1, s[$ofs1+0x0004];
	add.half.f32 $r2, s[$ofs1+0x0000], $r1;
	add.u32 $ofs1, $ofs2, 0x00000130;
	mov.u32 $r1, s[$ofs1+0x0000];
	mad.f32 $r1, $r2, 0xbd5901ae, $r1;
	mov.u32 s[$ofs2+0x0130], $r1;
	add.u32 $ofs1, $ofs2, 0x0000098c;
	mov.half.u32 $r1, s[$ofs1+0x0004];
	add.half.f32 $r2, s[$ofs1+0x0000], $r1;
	add.u32 $ofs1, $ofs2, 0x00000230;
	mov.u32 $r1, s[$ofs1+0x0000];
	mad.f32 $r1, $r2, 0xbd5901ae, $r1;
	mov.u32 s[$ofs2+0x0230], $r1;
	ssy 0x00002b70;
	@$p1.eq bra l0x00002b70;
	shl.b32 $ofs2, $r17, 0x00000002;
	add.u32 $ofs1, $ofs2, 0x00000a8c;
	mov.half.u32 $r1, s[$ofs1+0x0004];
	add.half.f32 $r2, s[$ofs1+0x0000], $r1;
	add.u32 $ofs1, $ofs2, 0x00000330;
	mov.u32 $r1, s[$ofs1+0x0000];
	mad.f32 $r1, $r2, 0xbd5901ae, $r1;
	mov.u32 s[$ofs2+0x0330], $r1;
	l0x00002b70: nop;
	bar.sync 0x00000000;
	shl.b32 $ofs2, $r17, 0x00000002;
	add.u32 $ofs1, $ofs2, 0x0000078c;
	mov.half.u32 $r1, s[$ofs2+0x0030];
	mov.half.u32 $r2, s[$ofs1+0x0000];
	add.f32 $r1, s[$ofs2+0x002c], $r1;
	mad.f32 $r2, $r1, 0x3f620676, $r2;
	mov.u32 s[$ofs2+0x078c], $r2;
	add.u32 $ofs1, $ofs2, 0x0000012c;
	mov.half.u32 $r1, s[$ofs1+0x0004];
	add.half.f32 $r2, s[$ofs1+0x0000], $r1;
	add.u32 $ofs1, $ofs2, 0x0000088c;
	mov.u32 $r1, s[$ofs1+0x0000];
	mad.f32 $r1, $r2, 0x3f620676, $r1;
	mov.u32 s[$ofs2+0x088c], $r1;
	add.u32 $ofs1, $ofs2, 0x0000022c;
	mov.half.u32 $r1, s[$ofs1+0x0004];
	add.half.f32 $r2, s[$ofs1+0x0000], $r1;
	add.u32 $ofs1, $ofs2, 0x0000098c;
	mov.u32 $r1, s[$ofs1+0x0000];
	mad.f32 $r1, $r2, 0x3f620676, $r1;
	mov.u32 s[$ofs2+0x098c], $r1;
	ssy 0x00002c58;
	@$p1.eq bra l0x00002c58;
	shl.b32 $ofs2, $r17, 0x00000002;
	add.u32 $ofs1, $ofs2, 0x0000032c;
	mov.half.u32 $r1, s[$ofs1+0x0004];
	add.half.f32 $r2, s[$ofs1+0x0000], $r1;
	add.u32 $ofs1, $ofs2, 0x00000a8c;
	mov.u32 $r1, s[$ofs1+0x0000];
	mad.f32 $r1, $r2, 0x3f620676, $r1;
	mov.u32 s[$ofs2+0x0a8c], $r1;
	l0x00002c58: nop;
	bar.sync 0x00000000;
	shl.b32 $ofs2, $r17, 0x00000002;
	add.u32 $ofs1, $ofs2, 0x0000078c;
	mov.half.u32 $r1, s[$ofs1+0x0004];
	mov.half.u32 $r2, s[$ofs2+0x0030];
	add.f32 $r1, s[$ofs1+0x0000], $r1;
	mad.f32 $r2, $r1, 0x3ee31355, $r2;
	mov.u32 s[$ofs2+0x0030], $r2;
	add.u32 $ofs1, $ofs2, 0x0000088c;
	mov.half.u32 $r1, s[$ofs1+0x0004];
	add.half.f32 $r2, s[$ofs1+0x0000], $r1;
	add.u32 $ofs1, $ofs2, 0x00000130;
	mov.u32 $r1, s[$ofs1+0x0000];
	mad.f32 $r1, $r2, 0x3ee31355, $r1;
	mov.u32 s[$ofs2+0x0130], $r1;
	add.u32 $ofs1, $ofs2, 0x0000098c;
	mov.half.u32 $r1, s[$ofs1+0x0004];
	add.half.f32 $r2, s[$ofs1+0x0000], $r1;
	add.u32 $ofs1, $ofs2, 0x00000230;
	mov.u32 $r1, s[$ofs1+0x0000];
	mad.f32 $r1, $r2, 0x3ee31355, $r1;
	mov.u32 s[$ofs2+0x0230], $r1;
	ssy 0x00002d40;
	@$p1.eq bra l0x00002d40;
	shl.b32 $ofs2, $r17, 0x00000002;
	add.u32 $ofs1, $ofs2, 0x00000a8c;
	mov.half.u32 $r1, s[$ofs1+0x0004];
	add.half.f32 $r2, s[$ofs1+0x0000], $r1;
	add.u32 $ofs1, $ofs2, 0x00000330;
	mov.u32 $r1, s[$ofs1+0x0000];
	mad.f32 $r1, $r2, 0x3ee31355, $r1;
	mov.u32 s[$ofs2+0x0330], $r1;
	l0x00002d40: nop;
	bar.sync 0x00000000;
	shl.b32 $ofs2, $r17, 0x00000002;
	mul.f32 $r1, s[$ofs2+0x002c], 0x3f5019c3;
	mov.u32 s[$ofs2+0x002c], $r1;
	add.u32 $ofs1, $ofs2, 0x0000078c;
	mul.f32 $r1, s[$ofs1+0x0000], 0x3f9d7658;
	mov.u32 s[$ofs2+0x078c], $r1;
	add.u32 $ofs1, $ofs2, 0x0000012c;
	mul.f32 $r1, s[$ofs1+0x0000], 0x3f5019c3;
	mov.u32 s[$ofs2+0x012c], $r1;
	add.u32 $ofs1, $ofs2, 0x0000088c;
	mul.f32 $r1, s[$ofs1+0x0000], 0x3f9d7658;
	mov.u32 s[$ofs2+0x088c], $r1;
	add.u32 $ofs1, $ofs2, 0x0000022c;
	mul.f32 $r1, s[$ofs1+0x0000], 0x3f5019c3;
	mov.u32 s[$ofs2+0x022c], $r1;
	add.u32 $ofs1, $ofs2, 0x0000098c;
	mul.f32 $r1, s[$ofs1+0x0000], 0x3f9d7658;
	mov.u32 s[$ofs2+0x098c], $r1;
	ssy 0x00002e30;
	mov.pred $p2, $r6;
	@$p2.eq bra l0x00002e30;
	shl.b32 $ofs2, $r17, 0x00000002;
	add.u32 $ofs1, $ofs2, 0x0000032c;
	mul.f32 $r1, s[$ofs1+0x0000], 0x3f5019c3;
	mov.u32 s[$ofs2+0x032c], $r1;
	add.u32 $ofs1, $ofs2, 0x00000a8c;
	mul.f32 $r1, s[$ofs1+0x0000], 0x3f9d7658;
	mov.u32 s[$ofs2+0x0a8c], $r1;
	l0x00002e30: nop;
	bar.sync 0x00000000;
	ssy 0x000030c8;
	mov.pred $p3, $r8;
	@$p3.eq bra l0x000030a8;
	shr.s32 $r2, s[0x0024], 0x0000001f;
	shr.s32 $r1, $r5, 0x0000001f;
	and.b32 $r3, $r2, constant1_ZN8dwt_cuda12fdwt97KernelILi64ELi6EEEvPKfPfiii[0x0000];
	shr.s32 $r2, s[0x0020], 0x0000001f;
	and.b32 $r1, $r1, constant1_ZN8dwt_cuda12fdwt97KernelILi64ELi6EEEvPKfPfiii[0x0000];
	add.u32 $r6, s[0x0024], $r3;
	and.b32 $p2|$o127, $r5, constant1_ZN8dwt_cuda12fdwt97KernelILi64ELi6EEEvPKfPfiii[0x0000];
	and.b32 $r2, $r2, constant1_ZN8dwt_cuda12fdwt97KernelILi64ELi6EEEvPKfPfiii[0x0000];
	add.u32 $r1, $r1, $r5;
	and.b32 $r8, $r6, constant1_ZN8dwt_cuda12fdwt97KernelILi64ELi6EEEvPKfPfiii[0x002c];
	ssy 0x00002fe8;
	add.u32 $r5, s[0x0020], $r2;
	shr.s32 $r3, $r1, 0x00000001;
	add.u32 $r1, s[0x0024], -$r8;
	shr.s32 $r2, $r6, 0x00000001;
	shr.s32 $r5, $r5, 0x00000001;
	set.ne.s32.s32 $p1/$o127, $r1, $r124;
	@$p2.eq bra l0x00002fa0;
	shr.s32 $r1, s[0x0020], 0x0000001f;
	and.b32 $r1, $r1, constant1_ZN8dwt_cuda12fdwt97KernelILi64ELi6EEEvPKfPfiii[0x0000];
	add.u32 $r1, s[0x0020], $r1;
	and.b32 $r6, $r1, constant1_ZN8dwt_cuda12fdwt97KernelILi64ELi6EEEvPKfPfiii[0x002c];
	mov.u32 $r1, $r5;
	add.u32 $p2|$o127, s[0x0020], -$r6;
	@$p2.neu add.u32 $r5, $r5, constant1_ZN8dwt_cuda12fdwt97KernelILi64ELi6EEEvPKfPfiii[0x0000];
	@$p1.neu add.u32 $r6, $r2, constant1_ZN8dwt_cuda12fdwt97KernelILi64ELi6EEEvPKfPfiii[0x0000];
	@$p1.eq mov.u32 $r6, $r2;
	mov.half.u32 $r8, s[0x0020];
	mov.half.u32 $r10, s[0x0024];
	mul.wide.u16 $r11, $r8.lo, $r10.hi;
	mad.wide.u16 $r11, $r8.hi, $r10.lo, $r11;
	shl.u32 $r12, $r11, 0x00000010;
	mul.wide.u16 $r11, $r5.lo, $r6.hi;
	mad.wide.u16 $r10, $r8.lo, $r10.lo, $r12;
	mad.wide.u16 $r8, $r5.hi, $r6.lo, $r11;
	shr.s32 $r11, $r10, 0x0000001f;
	shl.u32 $r8, $r8, 0x00000010;
	and.b32 $r11, $r11, constant1_ZN8dwt_cuda12fdwt97KernelILi64ELi6EEEvPKfPfiii[0x0000];
	mad.wide.u16 $r5, $r5.lo, $r6.lo, $r8;
	add.half.u32 $r6, $r11, $r10;
	add.half.u32 $r3, $r5, $r3;
	shr.s32 $r15, $r6, 0x00000001;
	bra l0x00002fe8;
	l0x00002fa0: and.b32 $r1, s[0x0020], constant1_ZN8dwt_cuda12fdwt97KernelILi64ELi6EEEvPKfPfiii[0x0000];
	add.u32 $r1, $r5, $r1;
	@$p1.neu add.u32 $r5, $r2, constant1_ZN8dwt_cuda12fdwt97KernelILi64ELi6EEEvPKfPfiii[0x0000];
	@$p1.eq mov.u32 $r5, $r2;
	mov.u32 $r6, s[0x0020];
	mul.wide.u16 $r8, $r5.lo, $r6.hi;
	mad.wide.u16 $r8, $r5.hi, $r6.lo, $r8;
	shl.u32 $r8, $r8, 0x00000010;
	mad.wide.u16 $r15, $r5.lo, $r6.lo, $r8;
	l0x00002fe8: shr.s32 $r5, $r7, 0x0000001f;
	and.b32 $r5, $r5, constant1_ZN8dwt_cuda12fdwt97KernelILi64ELi6EEEvPKfPfiii[0x0000];
	add.u32 $r6, $r5, $r7;
	and.b32 $r5, s[0x0024], constant1_ZN8dwt_cuda12fdwt97KernelILi64ELi6EEEvPKfPfiii[0x0000];
	and.b32 $r7, $r7, constant1_ZN8dwt_cuda12fdwt97KernelILi64ELi6EEEvPKfPfiii[0x0000];
	shr.s32 $r6, $r6, 0x00000001;
	mul.half.lo.u16 $r8, $r2.lo, $r1.hi;
	mul.half.lo.u16 $r10, $r15.lo, $r5.hi;
	mul.half.lo.u16 $r11, $r1.lo, $r6.hi;
	mul.half.lo.u16 $r12, $r15.lo, $r7.hi;
	mad.wide.u16 $r8, $r2.hi, $r1.lo, $r8;
	mad.wide.u16 $r10, $r15.hi, $r5.lo, $r10;
	mad.wide.u16 $r11, $r1.hi, $r6.lo, $r11;
	mad.wide.u16 $r12, $r15.hi, $r7.lo, $r12;
	shl.u32 $r8, $r8, 0x00000010;
	shl.u32 $r10, $r10, 0x00000010;
	shl.u32 $r11, $r11, 0x00000010;
	shl.u32 $r12, $r12, 0x00000010;
	mad.wide.u16 $r2, $r2.lo, $r1.lo, $r8;
	mad.wide.u16 $r5, $r15.lo, $r5.lo, $r10;
	mad.wide.u16 $r6, $r1.lo, $r6.lo, $r11;
	mad.wide.u16 $r7, $r15.lo, $r7.lo, $r12;
	add.half.u32 $r2, $r2, $r5;
	add.half.u32 $r5, $r6, $r7;
	add.half.u32 $r24, $r3, $r2;
	add.half.u32 $r21, $r3, $r5;
	add.u32 $r23, $r1, -$r15;
	bra l0x000030c8;
	l0x000030a8: mov.u32 $r21, $r124;
	mov.u32 $r23, $r124;
	mov.u32 $r24, $r124;
	mov.u32 $r15, $r124;
	l0x000030c8: set.gt.s32.s32 $p1/$o127, s[0x0028], $r124;
	@$p1.eq retp;
	add.u32 $r1, $r4, 0x00000004;
	mov.u32 $r4, 0x000001d8;
	and.b32 $r3, $r1, constant1_ZN8dwt_cuda12fdwt97KernelILi64ELi6EEEvPKfPfiii[0x0000];
	mul.wide.u16 $r5, $r3.lo, $r4.hi;
	shr.s32 $r2, $r1, 0x0000001f;
	mad.wide.u16 $r5, $r3.hi, $r4.lo, $r5;
	and.b32 $r2, $r2, constant1_ZN8dwt_cuda12fdwt97KernelILi64ELi6EEEvPKfPfiii[0x0000];
	shl.u32 $r5, $r5, 0x00000010;
	add.u32 $r1, $r1, $r2;
	mad.wide.u16 $r2, $r3.lo, $r4.lo, $r5;
	shr.s32 $r1, $r1, 0x00000001;
	add.u32 $r1, $r2, $r1;
	shl.b32 $ofs2, $r1, 0x00000002;
	set.lt.u32.u32 $p1/$o127, $r17, constant1_ZN8dwt_cuda12fdwt97KernelILi64ELi6EEEvPKfPfiii[0x0030];
	shl.u32 $r1, $r9, 0x00000002;
	set.lt.u32.u32 $p2/$o127, $r17, constant1_ZN8dwt_cuda12fdwt97KernelILi64ELi6EEEvPKfPfiii[0x0034];
	@$p2 mov.u32 $r28, $p2;
	mov.u32 $r27, $r124;
	add.u32 $r26, s[0x0010], $r1;
	l0x00003170: shl.u32 $r1, s[0x0020], 0x00000002;
	add.u32 $r2, $r26, $r1;
	ld.global.u32 $r3, [$r2];
	add.u32 $r4, $r2, $r1;
	ld.global.u32 $r2, [$r4];
	add.u32 $r5, $r4, $r1;
	ld.global.u32 $r4, [$r5];
	mov.u32 s[$ofs3+0x041c], $r3;
	add.u32 $r5, $r5, $r1;
	ld.global.u32 $r3, [$r5];
	mov.u32 s[$ofs3+0x04ac], $r2;
	add.u32 $r5, $r5, $r1;
	ld.global.u32 $r2, [$r5];
	mov.u32 s[$ofs3+0x053c], $r4;
	add.u32 $r26, $r5, $r1;
	ld.global.u32 $r1, [$r26];
	mov.u32 s[$ofs3+0x05cc], $r3;
	mov.u32 s[$ofs3+0x065c], $r2;
	mov.u32 s[$ofs3+0x06ec], $r1;
	ssy 0x00003300;
	@$p0.eq bra l0x00003300;
	add.half.u32 $r1, $r22, $r0;
	add.half.u32 $r2, $r1, $r0;
	add.u32 $r4, $r0, $r2;
	shl.u32 $r3, $r1, 0x00000002;
	shl.u32 $r2, $r2, 0x00000002;
	shl.u32 $r1, $r4, 0x00000002;
	add.u32 $r3, s[0x0010], $r3;
	ld.global.u32 $r3, [$r3];
	add.u32 $r2, s[0x0010], $r2;
	ld.global.u32 $r2, [$r2];
	add.u32 $r1, s[0x0010], $r1;
	ld.global.u32 $r1, [$r1];
	add.half.u32 $r4, $r0, $r4;
	add.half.u32 $r5, $r0, $r4;
	shl.b32 $ofs1, $r25, 0x0;
	mov.u32 s[$ofs1+0x041c], $r3;
	add.u32 $r22, $r0, $r5;
	shl.u32 $r3, $r4, 0x00000002;
	mov.u32 s[$ofs1+0x04ac], $r2;
	shl.u32 $r2, $r5, 0x00000002;
	shl.u32 $r4, $r22, 0x00000002;
	add.u32 $r3, s[0x0010], $r3;
	ld.global.u32 $r3, [$r3];
	mov.u32 s[$ofs1+0x053c], $r1;
	add.u32 $r1, s[0x0010], $r2;
	ld.global.u32 $r2, [$r1];
	add.u32 $r1, s[0x0010], $r4;
	ld.global.u32 $r1, [$r1];
	mov.u32 s[$ofs1+0x05cc], $r3;
	mov.u32 s[$ofs1+0x065c], $r2;
	mov.u32 s[$ofs1+0x06ec], $r1;
	l0x00003300: nop;
	bar.sync 0x00000000;
	shl.b32 $ofs4, $r17, 0x00000002;
	add.u32 $ofs1, $ofs4, 0x00000b7c;
	mov.u32 $r2, s[$ofs1+0x0000];
	add.u32 $ofs1, $ofs4, 0x0000041c;
	mov.half.u32 $r1, s[$ofs1+0x0004];
	add.half.f32 $r1, s[$ofs1+0x0000], $r1;
	mad.f32 $r2, $r1, 0xbfcb0673, $r2;
	mov.u32 s[$ofs4+0x0b7c], $r2;
	add.u32 $ofs1, $ofs4, 0x00000c7c;
	mov.u32 $r2, s[$ofs1+0x0000];
	add.u32 $ofs1, $ofs4, 0x0000051c;
	mov.half.u32 $r1, s[$ofs1+0x0004];
	add.half.f32 $r1, s[$ofs1+0x0000], $r1;
	mad.f32 $r2, $r1, 0xbfcb0673, $r2;
	mov.u32 s[$ofs4+0x0c7c], $r2;
	add.u32 $ofs1, $ofs4, 0x00000d7c;
	mov.u32 $r2, s[$ofs1+0x0000];
	add.u32 $ofs1, $ofs4, 0x0000061c;
	mov.half.u32 $r1, s[$ofs1+0x0004];
	add.half.f32 $r1, s[$ofs1+0x0000], $r1;
	mad.f32 $r2, $r1, 0xbfcb0673, $r2;
	mov.u32 s[$ofs4+0x0d7c], $r2;
	ssy 0x000033f0;
	@$p1.eq bra l0x000033f0;
	shl.b32 $ofs4, $r17, 0x00000002;
	add.u32 $ofs1, $ofs4, 0x0000071c;
	mov.half.u32 $r1, s[$ofs1+0x0004];
	add.half.f32 $r2, s[$ofs1+0x0000], $r1;
	add.u32 $ofs1, $ofs4, 0x00000e7c;
	mov.u32 $r1, s[$ofs1+0x0000];
	mad.f32 $r1, $r2, 0xbfcb0673, $r1;
	mov.u32 s[$ofs4+0x0e7c], $r1;
	l0x000033f0: nop;
	bar.sync 0x00000000;
	shl.b32 $ofs4, $r17, 0x00000002;
	add.u32 $ofs1, $ofs4, 0x00000420;
	mov.u32 $r2, s[$ofs1+0x0000];
	add.u32 $ofs1, $ofs4, 0x00000b7c;
	mov.half.u32 $r1, s[$ofs1+0x0004];
	add.half.f32 $r1, s[$ofs1+0x0000], $r1;
	mad.f32 $r2, $r1, 0xbd5901ae, $r2;
	mov.u32 s[$ofs4+0x0420], $r2;
	add.u32 $ofs1, $ofs4, 0x00000520;
	mov.u32 $r2, s[$ofs1+0x0000];
	add.u32 $ofs1, $ofs4, 0x00000c7c;
	mov.half.u32 $r1, s[$ofs1+0x0004];
	add.half.f32 $r1, s[$ofs1+0x0000], $r1;
	mad.f32 $r2, $r1, 0xbd5901ae, $r2;
	mov.u32 s[$ofs4+0x0520], $r2;
	add.u32 $ofs1, $ofs4, 0x00000620;
	mov.u32 $r2, s[$ofs1+0x0000];
	add.u32 $ofs1, $ofs4, 0x00000d7c;
	mov.half.u32 $r1, s[$ofs1+0x0004];
	add.half.f32 $r1, s[$ofs1+0x0000], $r1;
	mad.f32 $r2, $r1, 0xbd5901ae, $r2;
	mov.u32 s[$ofs4+0x0620], $r2;
	ssy 0x000034e0;
	@$p1.eq bra l0x000034e0;
	shl.b32 $ofs4, $r17, 0x00000002;
	add.u32 $ofs1, $ofs4, 0x00000e7c;
	mov.half.u32 $r1, s[$ofs1+0x0004];
	add.half.f32 $r2, s[$ofs1+0x0000], $r1;
	add.u32 $ofs1, $ofs4, 0x00000720;
	mov.u32 $r1, s[$ofs1+0x0000];
	mad.f32 $r1, $r2, 0xbd5901ae, $r1;
	mov.u32 s[$ofs4+0x0720], $r1;
	l0x000034e0: nop;
	bar.sync 0x00000000;
	shl.b32 $ofs4, $r17, 0x00000002;
	add.u32 $ofs1, $ofs4, 0x00000b7c;
	mov.u32 $r2, s[$ofs1+0x0000];
	add.u32 $ofs1, $ofs4, 0x0000041c;
	mov.half.u32 $r1, s[$ofs1+0x0004];
	add.half.f32 $r1, s[$ofs1+0x0000], $r1;
	mad.f32 $r2, $r1, 0x3f620676, $r2;
	mov.u32 s[$ofs4+0x0b7c], $r2;
	add.u32 $ofs1, $ofs4, 0x00000c7c;
	mov.u32 $r2, s[$ofs1+0x0000];
	add.u32 $ofs1, $ofs4, 0x0000051c;
	mov.half.u32 $r1, s[$ofs1+0x0004];
	add.half.f32 $r1, s[$ofs1+0x0000], $r1;
	mad.f32 $r2, $r1, 0x3f620676, $r2;
	mov.u32 s[$ofs4+0x0c7c], $r2;
	add.u32 $ofs1, $ofs4, 0x00000d7c;
	mov.u32 $r2, s[$ofs1+0x0000];
	add.u32 $ofs1, $ofs4, 0x0000061c;
	mov.half.u32 $r1, s[$ofs1+0x0004];
	add.half.f32 $r1, s[$ofs1+0x0000], $r1;
	mad.f32 $r2, $r1, 0x3f620676, $r2;
	mov.u32 s[$ofs4+0x0d7c], $r2;
	ssy 0x000035d0;
	@$p1.eq bra l0x000035d0;
	shl.b32 $ofs4, $r17, 0x00000002;
	add.u32 $ofs1, $ofs4, 0x0000071c;
	mov.half.u32 $r1, s[$ofs1+0x0004];
	add.half.f32 $r2, s[$ofs1+0x0000], $r1;
	add.u32 $ofs1, $ofs4, 0x00000e7c;
	mov.u32 $r1, s[$ofs1+0x0000];
	mad.f32 $r1, $r2, 0x3f620676, $r1;
	mov.u32 s[$ofs4+0x0e7c], $r1;
	l0x000035d0: nop;
	bar.sync 0x00000000;
	shl.b32 $ofs4, $r17, 0x00000002;
	add.u32 $ofs1, $ofs4, 0x00000420;
	mov.u32 $r2, s[$ofs1+0x0000];
	add.u32 $ofs1, $ofs4, 0x00000b7c;
	mov.half.u32 $r1, s[$ofs1+0x0004];
	add.half.f32 $r1, s[$ofs1+0x0000], $r1;
	mad.f32 $r2, $r1, 0x3ee31355, $r2;
	mov.u32 s[$ofs4+0x0420], $r2;
	add.u32 $ofs1, $ofs4, 0x00000520;
	mov.u32 $r2, s[$ofs1+0x0000];
	add.u32 $ofs1, $ofs4, 0x00000c7c;
	mov.half.u32 $r1, s[$ofs1+0x0004];
	add.half.f32 $r1, s[$ofs1+0x0000], $r1;
	mad.f32 $r2, $r1, 0x3ee31355, $r2;
	mov.u32 s[$ofs4+0x0520], $r2;
	add.u32 $ofs1, $ofs4, 0x00000620;
	mov.u32 $r2, s[$ofs1+0x0000];
	add.u32 $ofs1, $ofs4, 0x00000d7c;
	mov.half.u32 $r1, s[$ofs1+0x0004];
	add.half.f32 $r1, s[$ofs1+0x0000], $r1;
	mad.f32 $r2, $r1, 0x3ee31355, $r2;
	mov.u32 s[$ofs4+0x0620], $r2;
	ssy 0x000036c0;
	@$p1.eq bra l0x000036c0;
	shl.b32 $ofs4, $r17, 0x00000002;
	add.u32 $ofs1, $ofs4, 0x00000e7c;
	mov.half.u32 $r1, s[$ofs1+0x0004];
	add.half.f32 $r2, s[$ofs1+0x0000], $r1;
	add.u32 $ofs1, $ofs4, 0x00000720;
	mov.u32 $r1, s[$ofs1+0x0000];
	mad.f32 $r1, $r2, 0x3ee31355, $r1;
	mov.u32 s[$ofs4+0x0720], $r1;
	l0x000036c0: nop;
	bar.sync 0x00000000;
	shl.b32 $ofs4, $r17, 0x00000002;
	add.u32 $ofs1, $ofs4, 0x0000041c;
	mul.f32 $r1, s[$ofs1+0x0000], 0x3f5019c3;
	mov.u32 s[$ofs4+0x041c], $r1;
	add.u32 $ofs1, $ofs4, 0x00000b7c;
	mul.f32 $r1, s[$ofs1+0x0000], 0x3f9d7658;
	mov.u32 s[$ofs4+0x0b7c], $r1;
	add.u32 $ofs1, $ofs4, 0x0000051c;
	mul.f32 $r1, s[$ofs1+0x0000], 0x3f5019c3;
	mov.u32 s[$ofs4+0x051c], $r1;
	add.u32 $ofs1, $ofs4, 0x00000c7c;
	mul.f32 $r1, s[$ofs1+0x0000], 0x3f9d7658;
	mov.u32 s[$ofs4+0x0c7c], $r1;
	add.u32 $ofs1, $ofs4, 0x0000061c;
	mul.f32 $r1, s[$ofs1+0x0000], 0x3f5019c3;
	mov.u32 s[$ofs4+0x061c], $r1;
	add.u32 $ofs1, $ofs4, 0x00000d7c;
	mul.f32 $r1, s[$ofs1+0x0000], 0x3f9d7658;
	mov.u32 s[$ofs4+0x0d7c], $r1;
	ssy 0x000037b8;
	mov.pred $p2, $r28;
	@$p2.eq bra l0x000037b8;
	shl.b32 $ofs4, $r17, 0x00000002;
	add.u32 $ofs1, $ofs4, 0x0000071c;
	mul.f32 $r1, s[$ofs1+0x0000], 0x3f5019c3;
	mov.u32 s[$ofs4+0x071c], $r1;
	add.u32 $ofs1, $ofs4, 0x00000e7c;
	mul.f32 $r1, s[$ofs1+0x0000], 0x3f9d7658;
	mov.u32 s[$ofs4+0x0e7c], $r1;
	l0x000037b8: nop;
	bar.sync 0x00000000;
	add.u32 $ofs1, $ofs2, 0x000000bc;
	mov.u32 $r16, s[$ofs1+0x0000];
	add.u32 $ofs1, $ofs2, 0x0000041c;
	mov.half.u32 $r2, s[$ofs1+0x0000];
	mov.half.u32 $r12, s[$ofs1+0x0000];
	add.u32 $ofs1, $ofs2, 0x0000053c;
	mov.half.u32 $r4, s[$ofs1+0x0000];
	mov.half.u32 $r10, s[$ofs1+0x0000];
	add.u32 $ofs1, $ofs2, 0x0000065c;
	mov.half.u32 $r6, s[$ofs1+0x0000];
	mov.half.u32 $r20, s[$ofs1+0x0000];
	add.u32 $ofs1, $ofs2, 0x0000014c;
	mov.half.u32 $r7, s[$ofs1+0x0000];
	mov.half.u32 $r13, s[$ofs1+0x0000];
	mov.u32 $r18, s[$ofs1+0x0000];
	add.u32 $ofs4, $ofs2, 0x000005cc;
	add.u32 $ofs1, $ofs2, 0x000004ac;
	mov.u32 $r1, s[$ofs4+0x0000];
	mov.half.u32 $r19, s[$ofs1+0x0000];
	mov.half.u32 $r3, s[$ofs1+0x0000];
	mov.half.u32 $r8, s[$ofs1+0x0000];
	add.half.f32 $r11, s[$ofs1+0x0000], $r1;
	add.u32 $ofs1, $ofs2, 0x000006ec;
	mov.u32 $r1, s[$ofs1+0x0000];
	mov.u32 $r5, s[$ofs4+0x0000];
	mov.u32 $r9, s[$ofs4+0x0000];
	add.f32 $r29, s[$ofs4+0x0000], $r1;
	add.u32 $ofs4, $ofs2, 0x0000038c;
	mad.f32 $r10, $r11, 0xbfcb0673, $r10;
	mov.u32 $r1, s[$ofs4+0x0000];
	mov.u32 $r14, s[$ofs4+0x0000];
	mov.u32 $r11, s[$ofs4+0x0000];
	add.f32 $r19, s[$ofs4+0x0000], $r19;
	mad.f32 $r20, $r29, 0xbfcb0673, $r20;
	add.half.f32 $r7, s[$ofs2+0x002c], $r7;
	add.half.f32 $r29, $r10, $r20;
	mad.f32 $r16, $r7, 0xbfcb0673, $r16;
	mad.f32 $r9, $r29, 0xbd5901ae, $r9;
	mad.f32 $r12, $r19, 0xbfcb0673, $r12;
	mov.half.u32 $r19, s[$ofs2+0x002c];
	mov.half.u32 $r7, s[$ofs1+0x0000];
	add.f32 $r30, s[$ofs1+0x0000], $r9;
	add.u32 $ofs4, $ofs2, 0x0000026c;
	mov.u32 s[$ofs2+0x00bc], $r16;
	mov.u32 $r29, s[$ofs4+0x0000];
	add.f32 $r29, $r13, $r29;
	add.u32 $ofs1, $ofs2, 0x000001dc;
	mov.u32 $r13, s[$ofs1+0x0000];
	mad.f32 $r13, $r29, 0xbfcb0673, $r13;
	mov.u32 $r29, s[$ofs4+0x0000];
	add.f32 $r31, $r14, $r29;
	mov.u32 $r29, s[$ofs4+0x0000];
	add.u32 $ofs1, $ofs2, 0x000002fc;
	mov.u32 s[$ofs2+0x01dc], $r13;
	mov.u32 $r14, s[$ofs1+0x0000];
	mad.f32 $r14, $r31, 0xbfcb0673, $r14;
	mov.u32 s[$ofs2+0x02fc], $r14;
	mov.u32 s[$ofs2+0x041c], $r12;
	mov.u32 s[$ofs2+0x053c], $r10;
	mov.u32 s[$ofs2+0x065c], $r20;
	mad.f32 $r20, $r30, 0x3f620676, $r20;
	add.f32 $r30, $r16, $r13;
	mad.f32 $r18, $r30, 0xbd5901ae, $r18;
	add.f32 $r19, $r19, $r18;
	mad.f32 $r16, $r19, 0x3f620676, $r16;
	add.f32 $r19, $r13, $r14;
	mad.f32 $r19, $r19, constant1_ZN8dwt_cuda12fdwt97KernelILi64ELi6EEEvPKfPfiii[0x0020], $r29;
	add.f32 $r29, $r14, $r12;
	mov.u32 s[$ofs2+0x014c], $r18;
	mad.f32 $r11, $r29, 0xbd5901ae, $r11;
	add.f32 $r29, $r12, $r10;
	mov.u32 s[$ofs2+0x026c], $r19;
	mad.f32 $r8, $r29, 0xbd5901ae, $r8;
	mov.u32 s[$ofs2+0x038c], $r11;
	add.f32 $r29, $r18, $r19;
	mov.u32 s[$ofs2+0x04ac], $r8;
	mad.f32 $r13, $r29, 0x3f620676, $r13;
	mov.u32 s[$ofs2+0x05cc], $r9;
	add.f32 $r29, $r19, $r11;
	mov.u32 s[$ofs2+0x00bc], $r16;
	mad.f32 $r14, $r29, 0x3f620676, $r14;
	add.f32 $r29, $r11, $r8;
	mov.u32 s[$ofs2+0x01dc], $r13;
	mad.f32 $r12, $r29, 0x3f620676, $r12;
	add.f32 $r29, $r8, $r9;
	mov.u32 s[$ofs2+0x02fc], $r14;
	mad.f32 $r10, $r29, 0x3f620676, $r10;
	mov.u32 s[$ofs2+0x041c], $r12;
	add.f32 $r16, $r16, $r13;
	mov.u32 s[$ofs2+0x053c], $r10;
	mad.f32 $r18, $r16, 0x3ee31355, $r18;
	mov.u32 s[$ofs2+0x065c], $r20;
	add.f32 $r13, $r13, $r14;
	mov.u32 s[$ofs2+0x014c], $r18;
	add.f32 $r14, $r14, $r12;
	mad.f32 $r19, $r13, 0x3ee31355, $r19;
	mad.f32 $r11, $r14, 0x3ee31355, $r11;
	mov.u32 s[$ofs2+0x026c], $r19;
	add.f32 $r12, $r12, $r10;
	mov.u32 s[$ofs2+0x038c], $r11;
	add.f32 $r10, $r10, $r20;
	mad.f32 $r8, $r12, 0x3ee31355, $r8;
	mad.f32 $r9, $r10, 0x3ee31355, $r9;
	mov.u32 s[$ofs2+0x04ac], $r8;
	mov.u32 s[$ofs2+0x05cc], $r9;
	mul.f32 $r8, $r19, 0x3f5019c3;
	set.ne.s32.s32 $p3/$r9, $r21, $r24;
	cvt.s32.s32 $p2|$o127, $r9;
	@$p3.neu shl.u32 $r9, $r21, 0x00000002;
	@$p3.neu add.u32 $r9, s[0x0018], $r9;
	@$p3.neu add.u32 $r21, $r21, $r15;
	@$p3.neu st.global.u32 [$r9], $r8;
	@$p3.neu set.ne.s32.s32 $p2/$o127, $r21, $r24;
	add.u32 $ofs1, $ofs2, 0x000002fc;
	mul.f32 $r8, s[$ofs1+0x0000], 0x3f9d7658;
	@$p2.neu shl.u32 $r9, $r21, 0x00000002;
	@$p2.neu add.u32 $r9, s[0x0018], $r9;
	@$p2.neu add.u32 $r21, $r21, $r23;
	@$p2.neu st.global.u32 [$r9], $r8;
	@$p2.neu set.ne.s32.s32 $p2/$o127, $r21, $r24;
	add.u32 $ofs1, $ofs2, 0x0000038c;
	mul.f32 $r8, s[$ofs1+0x0000], 0x3f5019c3;
	@$p2.neu shl.u32 $r9, $r21, 0x00000002;
	@$p2.neu add.u32 $r9, s[0x0018], $r9;
	@$p2.neu add.u32 $r21, $r21, $r15;
	@$p2.neu st.global.u32 [$r9], $r8;
	@$p2.neu set.ne.s32.s32 $p2/$o127, $r21, $r24;
	add.u32 $ofs1, $ofs2, 0x0000041c;
	mul.f32 $r8, s[$ofs1+0x0000], 0x3f9d7658;
	@$p2.neu shl.u32 $r9, $r21, 0x00000002;
	@$p2.neu add.u32 $r9, s[0x0018], $r9;
	@$p2.neu add.u32 $r21, $r21, $r23;
	@$p2.neu st.global.u32 [$r9], $r8;
	@$p2.neu set.ne.s32.s32 $p2/$o127, $r21, $r24;
	add.u32 $ofs1, $ofs2, 0x000004ac;
	mul.f32 $r8, s[$ofs1+0x0000], 0x3f5019c3;
	@$p2.neu shl.u32 $r9, $r21, 0x00000002;
	@$p2.neu add.u32 $r9, s[0x0018], $r9;
	@$p2.neu add.u32 $r21, $r21, $r15;
	@$p2.neu st.global.u32 [$r9], $r8;
	@$p2.neu set.ne.s32.s32 $p2/$o127, $r21, $r24;
	add.u32 $ofs1, $ofs2, 0x0000053c;
	mul.f32 $r8, s[$ofs1+0x0000], 0x3f9d7658;
	@$p2.neu shl.u32 $r9, $r21, 0x00000002;
	@$p2.neu add.u32 $r9, s[0x0018], $r9;
	@$p2.neu st.global.u32 [$r9], $r8;
	@$p2.neu add.u32 $r21, $r21, $r23;
	mov.u32 s[$ofs2+0x002c], $r1;
	mov.u32 s[$ofs2+0x00bc], $r2;
	mov.u32 s[$ofs2+0x014c], $r3;
	mov.u32 s[$ofs2+0x01dc], $r4;
	mov.u32 s[$ofs2+0x026c], $r5;
	mov.u32 s[$ofs2+0x02fc], $r6;
	mov.u32 s[$ofs2+0x038c], $r7;
	bar.sync 0x00000000;
	add.u32 $r27, $r27, 0x00000001;
	set.ne.s32.s32 $p2/$o127, s[0x0028], $r27;
	@$p2.ne bra l0x00003170;
	retp;
	l0x00003c80: cvt.u32.u16 $r2, %ctaid.y;
	set.eq.u32.u32 $p3/$o127, $r2, $r124;
	@$p3.eq bra l0x00003e68;
	ssy 0x00003ce8;
	@$p2.eq bra l0x00003cc8;
	shl.u32 $r0, s[0x0020], 0x00000001;
	add.u32 $r0, $r0, -$r9;
	add.u32 $r2, $r0, 0xfffffffe;
	bra l0x00003ce8;
	l0x00003cc8: add.u32 $r2, -$r9, 0x00000000;
	set.lt.s32.s32 $p3/$o127, $r9, $r124;
	@$p3 mov.u32 $r0, $p3;
	@$p3.equ mov.u32 $r2, $r9;
	l0x00003ce8: mov.u32 $r0, s[0x0020];
	mul.wide.u16 $r1, $r0.lo, $r7.hi;
	mad.wide.u16 $r1, $r0.hi, $r7.lo, $r1;
	shl.u32 $r1, $r1, 0x00000010;
	mad.wide.u16 $r0, $r0.lo, $r7.lo, $r1;
	add.half.u32 $r0, $r0, $r2;
	add.half.u32 $r2, s[0x0020], $r0;
	shl.u32 $r0, $r0, 0x00000002;
	shl.u32 $r10, $r2, 0x00000002;
	add.u32 $r0, s[0x0010], $r0;
	ld.global.u32 $r1, [$r0];
	add.u32 $r0, s[0x0010], $r10;
	ld.global.u32 $r0, [$r0];
	add.half.u32 $r2, s[0x0020], $r2;
	add.half.u32 $r10, s[0x0020], $r2;
	mov.u32 s[$ofs3+0x026c], $r1;
	add.u32 $r11, s[0x0020], $r10;
	shl.u32 $r1, $r2, 0x00000002;
	mov.u32 s[$ofs3+0x02fc], $r0;
	shl.u32 $r10, $r10, 0x00000002;
	shl.u32 $r11, $r11, 0x00000002;
	add.u32 $r1, s[0x0010], $r1;
	ld.global.u32 $r2, [$r1];
	mov.u32 s[$ofs3+0x01dc], $r0;
	add.u32 $r0, s[0x0010], $r10;
	ld.global.u32 $r1, [$r0];
	add.u32 $r0, s[0x0010], $r11;
	ld.global.u32 $r0, [$r0];
	mov.u32 s[$ofs3+0x038c], $r2;
	mov.u32 s[$ofs3+0x014c], $r2;
	mov.u32 s[$ofs3+0x00bc], $r1;
	mov.u32 s[$ofs3+0x002c], $r0;
	ssy 0x00003e20;
	@$p2.eq bra l0x00003e08;
	shl.u32 $r0, s[0x0020], 0x00000001;
	add.u32 $r0, $r0, -$r9;
	add.u32 $r2, $r0, 0xfffffffe;
	bra l0x00003e20;
	l0x00003e08: add.u32 $r2, -$r9, 0x00000000;
	set.lt.s32.s32 $p2/$o127, $r9, $r124;
	@$p2.equ mov.u32 $r2, $r9;
	l0x00003e20: nop;
	add.u32 $r1, $r7, 0x00000003;
	mov.u32 $r0, s[0x0020];
	mul.wide.u16 $r9, $r0.lo, $r1.hi;
	mad.wide.u16 $r9, $r0.hi, $r1.lo, $r9;
	shl.u32 $r9, $r9, 0x00000010;
	mad.wide.u16 $r0, $r0.lo, $r1.lo, $r9;
	add.half.u32 $r0, $r0, $r2;
	add.half.u32 $r9, -s[0x0020], $r0;
	bra l0x00003ff0;
	l0x00003e68: ssy 0x00003eb0;
	@$p2.eq bra l0x00003e98;
	shl.u32 $r0, s[0x0020], 0x00000001;
	add.u32 $r0, $r0, -$r9;
	add.u32 $r2, $r0, 0xfffffffe;
	bra l0x00003eb0;
	l0x00003e98: add.u32 $r2, -$r9, 0x00000000;
	set.lt.s32.s32 $p2/$o127, $r9, $r124;
	@$p2.equ mov.u32 $r2, $r9;
	l0x00003eb0: mov.u32 $r0, s[0x0020];
	add.u32 $r1, $r7, 0xfffffffc;
	mul.wide.u16 $r9, $r1.lo, $r0.hi;
	mad.wide.u16 $r9, $r1.hi, $r0.lo, $r9;
	shl.u32 $r9, $r9, 0x00000010;
	mad.wide.u16 $r0, $r1.lo, $r0.lo, $r9;
	add.half.u32 $r0, $r0, $r2;
	add.half.u32 $r1, s[0x0020], $r0;
	add.u32 $r9, s[0x0020], $r1;
	shl.u32 $r0, $r0, 0x00000002;
	shl.u32 $r1, $r1, 0x00000002;
	shl.u32 $r10, $r9, 0x00000002;
	add.u32 $r0, s[0x0010], $r0;
	ld.global.u32 $r2, [$r0];
	add.u32 $r0, s[0x0010], $r1;
	ld.global.u32 $r1, [$r0];
	add.u32 $r0, s[0x0010], $r10;
	ld.global.u32 $r0, [$r0];
	add.u32 $r10, s[0x0020], $r9;
	mov.u32 s[$ofs3+0x002c], $r2;
	add.u32 $r2, s[0x0020], $r10;
	mov.u32 s[$ofs3+0x00bc], $r1;
	add.u32 $r11, s[0x0020], $r2;
	mov.u32 s[$ofs3+0x014c], $r0;
	add.u32 $r9, s[0x0020], $r11;
	shl.u32 $r0, $r10, 0x00000002;
	shl.u32 $r1, $r2, 0x00000002;
	shl.u32 $r11, $r11, 0x00000002;
	shl.u32 $r12, $r9, 0x00000002;
	add.u32 $r0, s[0x0010], $r0;
	ld.global.u32 $r10, [$r0];
	add.u32 $r0, s[0x0010], $r1;
	ld.global.u32 $r2, [$r0];
	add.u32 $r0, s[0x0010], $r11;
	ld.global.u32 $r1, [$r0];
	add.u32 $r0, s[0x0010], $r12;
	ld.global.u32 $r0, [$r0];
	mov.u32 s[$ofs3+0x01dc], $r10;
	mov.u32 s[$ofs3+0x026c], $r2;
	mov.u32 s[$ofs3+0x02fc], $r1;
	mov.u32 s[$ofs3+0x038c], $r0;
	l0x00003ff0: ssy 0x00004440;
	@$p0.eq bra l0x00004420;
	add.u32 $r0, $r17, 0xfffffff9;
	set.le.u32.u32 $p2/$o127, $r17, constant1_ZN8dwt_cuda12fdwt97KernelILi64ELi6EEEvPKfPfiii[0x0014];
	@$p2.ne add.u32 $r0, $r17, constant1_ZN8dwt_cuda12fdwt97KernelILi64ELi6EEEvPKfPfiii[0x0018];
	add.u32 $r1, $r0, 0x00000004;
	mov.u32 $r10, 0x000001d8;
	and.b32 $r2, $r1, constant1_ZN8dwt_cuda12fdwt97KernelILi64ELi6EEEvPKfPfiii[0x0000];
	mul.wide.u16 $r12, $r2.lo, $r10.hi;
	shr.s32 $r11, $r1, 0x0000001f;
	mad.wide.u16 $r12, $r2.hi, $r10.lo, $r12;
	and.b32 $r11, $r11, constant1_ZN8dwt_cuda12fdwt97KernelILi64ELi6EEEvPKfPfiii[0x0000];
	shl.u32 $r12, $r12, 0x00000010;
	add.u32 $r1, $r1, $r11;
	mad.wide.u16 $r2, $r2.lo, $r10.lo, $r12;
	shr.s32 $r1, $r1, 0x00000001;
	add.u32 $r1, $r2, $r1;
	shl.b32 $ofs1, $r1, 0x00000002;
	mov.u32 $r24, $ofs1;
	add.u32 $r1, $r0, $r3;
	set.le.s32.s32 $p2/$o127, s[0x0020], $r1;
	cvt.u32.u16 $r2, %ctaid.y;
	set.eq.u32.u32 $p3/$o127, $r2, $r124;
	@$p3.eq bra l0x00004280;
	ssy 0x000040f8;
	@$p2.eq bra l0x000040e0;
	shl.u32 $r0, s[0x0020], 0x00000001;
	add.u32 $r0, $r0, -$r1;
	add.u32 $r2, $r0, 0xfffffffe;
	bra l0x000040f8;
	l0x000040e0: add.u32 $r2, -$r1, 0x00000000;
	set.lt.s32.s32 $p3/$o127, $r1, $r124;
	@$p3.equ mov.u32 $r2, $r1;
	l0x000040f8: mov.u32 $r0, s[0x0020];
	mul.wide.u16 $r3, $r0.lo, $r7.hi;
	mad.wide.u16 $r3, $r0.hi, $r7.lo, $r3;
	shl.u32 $r3, $r3, 0x00000010;
	mad.wide.u16 $r0, $r0.lo, $r7.lo, $r3;
	add.half.u32 $r0, $r0, $r2;
	add.half.u32 $r3, s[0x0020], $r0;
	shl.u32 $r0, $r0, 0x00000002;
	shl.u32 $r10, $r3, 0x00000002;
	add.u32 $r0, s[0x0010], $r0;
	ld.global.u32 $r2, [$r0];
	add.u32 $r0, s[0x0010], $r10;
	ld.global.u32 $r0, [$r0];
	add.half.u32 $r3, s[0x0020], $r3;
	add.half.u32 $r10, s[0x0020], $r3;
	shl.b32 $ofs1, $r24, 0x0;
	mov.u32 s[$ofs1+0x026c], $r2;
	add.u32 $r11, s[0x0020], $r10;
	shl.u32 $r2, $r3, 0x00000002;
	mov.u32 s[$ofs1+0x02fc], $r0;
	shl.u32 $r10, $r10, 0x00000002;
	shl.u32 $r11, $r11, 0x00000002;
	add.u32 $r2, s[0x0010], $r2;
	ld.global.u32 $r3, [$r2];
	mov.u32 s[$ofs1+0x01dc], $r0;
	add.u32 $r0, s[0x0010], $r10;
	ld.global.u32 $r2, [$r0];
	add.u32 $r0, s[0x0010], $r11;
	ld.global.u32 $r0, [$r0];
	mov.u32 s[$ofs1+0x038c], $r3;
	mov.u32 s[$ofs1+0x014c], $r3;
	mov.u32 s[$ofs1+0x00bc], $r2;
	mov.u32 s[$ofs1+0x002c], $r0;
	ssy 0x00004238;
	@$p2.eq bra l0x00004220;
	shl.u32 $r0, s[0x0020], 0x00000001;
	add.u32 $r0, $r0, -$r1;
	add.u32 $r2, $r0, 0xfffffffe;
	bra l0x00004238;
	l0x00004220: add.u32 $r2, -$r1, 0x00000000;
	set.lt.s32.s32 $p2/$o127, $r1, $r124;
	@$p2.equ mov.u32 $r2, $r1;
	l0x00004238: nop;
	add.u32 $r1, $r7, 0x00000003;
	mov.u32 $r0, s[0x0020];
	mul.wide.u16 $r3, $r0.lo, $r1.hi;
	mad.wide.u16 $r3, $r0.hi, $r1.lo, $r3;
	shl.u32 $r3, $r3, 0x00000010;
	mad.wide.u16 $r0, $r0.lo, $r1.lo, $r3;
	add.half.u32 $r0, $r0, $r2;
	add.half.u32 $r23, -s[0x0020], $r0;
	bra l0x00004410;
	l0x00004280: ssy 0x000042c8;
	@$p2.eq bra l0x000042b0;
	shl.u32 $r0, s[0x0020], 0x00000001;
	add.u32 $r0, $r0, -$r1;
	add.u32 $r2, $r0, 0xfffffffe;
	bra l0x000042c8;
	l0x000042b0: add.u32 $r2, -$r1, 0x00000000;
	set.lt.s32.s32 $p2/$o127, $r1, $r124;
	@$p2.equ mov.u32 $r2, $r1;
	l0x000042c8: mov.u32 $r0, s[0x0020];
	add.u32 $r1, $r7, 0xfffffffc;
	mul.wide.u16 $r3, $r1.lo, $r0.hi;
	mad.wide.u16 $r3, $r1.hi, $r0.lo, $r3;
	shl.u32 $r3, $r3, 0x00000010;
	mad.wide.u16 $r0, $r1.lo, $r0.lo, $r3;
	add.half.u32 $r0, $r0, $r2;
	add.half.u32 $r1, s[0x0020], $r0;
	add.u32 $r3, s[0x0020], $r1;
	shl.u32 $r0, $r0, 0x00000002;
	shl.u32 $r1, $r1, 0x00000002;
	shl.u32 $r10, $r3, 0x00000002;
	add.u32 $r0, s[0x0010], $r0;
	ld.global.u32 $r2, [$r0];
	add.u32 $r0, s[0x0010], $r1;
	ld.global.u32 $r1, [$r0];
	add.u32 $r0, s[0x0010], $r10;
	ld.global.u32 $r0, [$r0];
	add.u32 $r3, s[0x0020], $r3;
	shl.b32 $ofs1, $r24, 0x0;
	mov.u32 s[$ofs1+0x002c], $r2;
	add.u32 $r2, s[0x0020], $r3;
	mov.u32 s[$ofs1+0x00bc], $r1;
	add.u32 $r10, s[0x0020], $r2;
	mov.u32 s[$ofs1+0x014c], $r0;
	add.u32 $r23, s[0x0020], $r10;
	shl.u32 $r0, $r3, 0x00000002;
	shl.u32 $r1, $r2, 0x00000002;
	shl.u32 $r10, $r10, 0x00000002;
	shl.u32 $r11, $r23, 0x00000002;
	add.u32 $r0, s[0x0010], $r0;
	ld.global.u32 $r3, [$r0];
	add.u32 $r0, s[0x0010], $r1;
	ld.global.u32 $r2, [$r0];
	add.u32 $r0, s[0x0010], $r10;
	ld.global.u32 $r1, [$r0];
	add.u32 $r0, s[0x0010], $r11;
	ld.global.u32 $r0, [$r0];
	mov.u32 s[$ofs1+0x01dc], $r3;
	mov.u32 s[$ofs1+0x026c], $r2;
	mov.u32 s[$ofs1+0x02fc], $r1;
	mov.u32 s[$ofs1+0x038c], $r0;
	l0x00004410: mov.u32 $r0, s[0x0020];
	bra l0x00004440;
	l0x00004420: shl.b32 $ofs1, $r124, 0x00000002;
	mov.u32 $r24, $ofs1;
	mov.u32 $r23, $r124;
	mov.u32 $r0, $r124;
	l0x00004440: nop;
	bar.sync 0x00000000;
	shl.b32 $ofs2, $r17, 0x00000002;
	add.u32 $ofs1, $ofs2, 0x0000078c;
	mov.half.u32 $r1, s[$ofs2+0x0030];
	mov.half.u32 $r2, s[$ofs1+0x0000];
	add.f32 $r1, s[$ofs2+0x002c], $r1;
	mad.f32 $r2, $r1, 0xbfcb0673, $r2;
	mov.u32 s[$ofs2+0x078c], $r2;
	add.u32 $ofs1, $ofs2, 0x0000012c;
	mov.half.u32 $r1, s[$ofs1+0x0004];
	add.half.f32 $r2, s[$ofs1+0x0000], $r1;
	add.u32 $ofs1, $ofs2, 0x0000088c;
	mov.u32 $r1, s[$ofs1+0x0000];
	mad.f32 $r1, $r2, 0xbfcb0673, $r1;
	mov.u32 s[$ofs2+0x088c], $r1;
	add.u32 $ofs1, $ofs2, 0x0000022c;
	mov.half.u32 $r1, s[$ofs1+0x0004];
	add.half.f32 $r2, s[$ofs1+0x0000], $r1;
	add.u32 $ofs1, $ofs2, 0x0000098c;
	mov.u32 $r1, s[$ofs1+0x0000];
	mad.f32 $r1, $r2, 0xbfcb0673, $r1;
	mov.u32 s[$ofs2+0x098c], $r1;
	ssy 0x00004528;
	@$p1.eq bra l0x00004528;
	shl.b32 $ofs2, $r17, 0x00000002;
	add.u32 $ofs1, $ofs2, 0x0000032c;
	mov.half.u32 $r1, s[$ofs1+0x0004];
	add.half.f32 $r2, s[$ofs1+0x0000], $r1;
	add.u32 $ofs1, $ofs2, 0x00000a8c;
	mov.u32 $r1, s[$ofs1+0x0000];
	mad.f32 $r1, $r2, 0xbfcb0673, $r1;
	mov.u32 s[$ofs2+0x0a8c], $r1;
	l0x00004528: nop;
	bar.sync 0x00000000;
	shl.b32 $ofs2, $r17, 0x00000002;
	add.u32 $ofs1, $ofs2, 0x0000078c;
	mov.half.u32 $r1, s[$ofs1+0x0004];
	mov.half.u32 $r2, s[$ofs2+0x0030];
	add.f32 $r1, s[$ofs1+0x0000], $r1;
	mad.f32 $r2, $r1, 0xbd5901ae, $r2;
	mov.u32 s[$ofs2+0x0030], $r2;
	add.u32 $ofs1, $ofs2, 0x0000088c;
	mov.half.u32 $r1, s[$ofs1+0x0004];
	add.half.f32 $r2, s[$ofs1+0x0000], $r1;
	add.u32 $ofs1, $ofs2, 0x00000130;
	mov.u32 $r1, s[$ofs1+0x0000];
	mad.f32 $r1, $r2, 0xbd5901ae, $r1;
	mov.u32 s[$ofs2+0x0130], $r1;
	add.u32 $ofs1, $ofs2, 0x0000098c;
	mov.half.u32 $r1, s[$ofs1+0x0004];
	add.half.f32 $r2, s[$ofs1+0x0000], $r1;
	add.u32 $ofs1, $ofs2, 0x00000230;
	mov.u32 $r1, s[$ofs1+0x0000];
	mad.f32 $r1, $r2, 0xbd5901ae, $r1;
	mov.u32 s[$ofs2+0x0230], $r1;
	ssy 0x00004610;
	@$p1.eq bra l0x00004610;
	shl.b32 $ofs2, $r17, 0x00000002;
	add.u32 $ofs1, $ofs2, 0x00000a8c;
	mov.half.u32 $r1, s[$ofs1+0x0004];
	add.half.f32 $r2, s[$ofs1+0x0000], $r1;
	add.u32 $ofs1, $ofs2, 0x00000330;
	mov.u32 $r1, s[$ofs1+0x0000];
	mad.f32 $r1, $r2, 0xbd5901ae, $r1;
	mov.u32 s[$ofs2+0x0330], $r1;
	l0x00004610: nop;
	bar.sync 0x00000000;
	shl.b32 $ofs2, $r17, 0x00000002;
	add.u32 $ofs1, $ofs2, 0x0000078c;
	mov.half.u32 $r1, s[$ofs2+0x0030];
	mov.half.u32 $r2, s[$ofs1+0x0000];
	add.f32 $r1, s[$ofs2+0x002c], $r1;
	mad.f32 $r2, $r1, 0x3f620676, $r2;
	mov.u32 s[$ofs2+0x078c], $r2;
	add.u32 $ofs1, $ofs2, 0x0000012c;
	mov.half.u32 $r1, s[$ofs1+0x0004];
	add.half.f32 $r2, s[$ofs1+0x0000], $r1;
	add.u32 $ofs1, $ofs2, 0x0000088c;
	mov.u32 $r1, s[$ofs1+0x0000];
	mad.f32 $r1, $r2, 0x3f620676, $r1;
	mov.u32 s[$ofs2+0x088c], $r1;
	add.u32 $ofs1, $ofs2, 0x0000022c;
	mov.half.u32 $r1, s[$ofs1+0x0004];
	add.half.f32 $r2, s[$ofs1+0x0000], $r1;
	add.u32 $ofs1, $ofs2, 0x0000098c;
	mov.u32 $r1, s[$ofs1+0x0000];
	mad.f32 $r1, $r2, 0x3f620676, $r1;
	mov.u32 s[$ofs2+0x098c], $r1;
	ssy 0x000046f8;
	@$p1.eq bra l0x000046f8;
	shl.b32 $ofs2, $r17, 0x00000002;
	add.u32 $ofs1, $ofs2, 0x0000032c;
	mov.half.u32 $r1, s[$ofs1+0x0004];
	add.half.f32 $r2, s[$ofs1+0x0000], $r1;
	add.u32 $ofs1, $ofs2, 0x00000a8c;
	mov.u32 $r1, s[$ofs1+0x0000];
	mad.f32 $r1, $r2, 0x3f620676, $r1;
	mov.u32 s[$ofs2+0x0a8c], $r1;
	l0x000046f8: nop;
	bar.sync 0x00000000;
	shl.b32 $ofs2, $r17, 0x00000002;
	add.u32 $ofs1, $ofs2, 0x0000078c;
	mov.half.u32 $r1, s[$ofs1+0x0004];
	mov.half.u32 $r2, s[$ofs2+0x0030];
	add.f32 $r1, s[$ofs1+0x0000], $r1;
	mad.f32 $r2, $r1, 0x3ee31355, $r2;
	mov.u32 s[$ofs2+0x0030], $r2;
	add.u32 $ofs1, $ofs2, 0x0000088c;
	mov.half.u32 $r1, s[$ofs1+0x0004];
	add.half.f32 $r2, s[$ofs1+0x0000], $r1;
	add.u32 $ofs1, $ofs2, 0x00000130;
	mov.u32 $r1, s[$ofs1+0x0000];
	mad.f32 $r1, $r2, 0x3ee31355, $r1;
	mov.u32 s[$ofs2+0x0130], $r1;
	add.u32 $ofs1, $ofs2, 0x0000098c;
	mov.half.u32 $r1, s[$ofs1+0x0004];
	add.half.f32 $r2, s[$ofs1+0x0000], $r1;
	add.u32 $ofs1, $ofs2, 0x00000230;
	mov.u32 $r1, s[$ofs1+0x0000];
	mad.f32 $r1, $r2, 0x3ee31355, $r1;
	mov.u32 s[$ofs2+0x0230], $r1;
	ssy 0x000047e0;
	@$p1.eq bra l0x000047e0;
	shl.b32 $ofs2, $r17, 0x00000002;
	add.u32 $ofs1, $ofs2, 0x00000a8c;
	mov.half.u32 $r1, s[$ofs1+0x0004];
	add.half.f32 $r2, s[$ofs1+0x0000], $r1;
	add.u32 $ofs1, $ofs2, 0x00000330;
	mov.u32 $r1, s[$ofs1+0x0000];
	mad.f32 $r1, $r2, 0x3ee31355, $r1;
	mov.u32 s[$ofs2+0x0330], $r1;
	l0x000047e0: nop;
	bar.sync 0x00000000;
	shl.b32 $ofs2, $r17, 0x00000002;
	mul.f32 $r1, s[$ofs2+0x002c], 0x3f5019c3;
	mov.u32 s[$ofs2+0x002c], $r1;
	add.u32 $ofs1, $ofs2, 0x0000078c;
	mul.f32 $r1, s[$ofs1+0x0000], 0x3f9d7658;
	mov.u32 s[$ofs2+0x078c], $r1;
	add.u32 $ofs1, $ofs2, 0x0000012c;
	mul.f32 $r1, s[$ofs1+0x0000], 0x3f5019c3;
	mov.u32 s[$ofs2+0x012c], $r1;
	add.u32 $ofs1, $ofs2, 0x0000088c;
	mul.f32 $r1, s[$ofs1+0x0000], 0x3f9d7658;
	mov.u32 s[$ofs2+0x088c], $r1;
	add.u32 $ofs1, $ofs2, 0x0000022c;
	mul.f32 $r1, s[$ofs1+0x0000], 0x3f5019c3;
	mov.u32 s[$ofs2+0x022c], $r1;
	add.u32 $ofs1, $ofs2, 0x0000098c;
	mul.f32 $r1, s[$ofs1+0x0000], 0x3f9d7658;
	mov.u32 s[$ofs2+0x098c], $r1;
	ssy 0x000048d0;
	mov.pred $p2, $r6;
	@$p2.eq bra l0x000048d0;
	shl.b32 $ofs2, $r17, 0x00000002;
	add.u32 $ofs1, $ofs2, 0x0000032c;
	mul.f32 $r1, s[$ofs1+0x0000], 0x3f5019c3;
	mov.u32 s[$ofs2+0x032c], $r1;
	add.u32 $ofs1, $ofs2, 0x00000a8c;
	mul.f32 $r1, s[$ofs1+0x0000], 0x3f9d7658;
	mov.u32 s[$ofs2+0x0a8c], $r1;
	l0x000048d0: nop;
	bar.sync 0x00000000;
	ssy 0x00004b08;
	mov.pred $p3, $r8;
	@$p3.eq bra l0x00004af0;
	shr.s32 $r2, s[0x0024], 0x0000001f;
	shr.s32 $r1, $r5, 0x0000001f;
	and.b32 $r3, $r2, constant1_ZN8dwt_cuda12fdwt97KernelILi64ELi6EEEvPKfPfiii[0x0000];
	shr.s32 $r2, s[0x0020], 0x0000001f;
	and.b32 $r1, $r1, constant1_ZN8dwt_cuda12fdwt97KernelILi64ELi6EEEvPKfPfiii[0x0000];
	add.u32 $r3, s[0x0024], $r3;
	and.b32 $p2|$o127, $r5, constant1_ZN8dwt_cuda12fdwt97KernelILi64ELi6EEEvPKfPfiii[0x0000];
	and.b32 $r2, $r2, constant1_ZN8dwt_cuda12fdwt97KernelILi64ELi6EEEvPKfPfiii[0x0000];
	add.u32 $r1, $r1, $r5;
	and.b32 $r6, $r3, constant1_ZN8dwt_cuda12fdwt97KernelILi64ELi6EEEvPKfPfiii[0x002c];
	ssy 0x00004a78;
	add.u32 $r2, s[0x0020], $r2;
	shr.s32 $r5, $r1, 0x00000001;
	add.u32 $r6, s[0x0024], -$r6;
	shr.s32 $r3, $r3, 0x00000001;
	shr.s32 $r1, $r2, 0x00000001;
	set.ne.s32.s32 $p1/$o127, $r6, $r124;
	@$p2.eq bra l0x00004a38;
	shr.s32 $r2, s[0x0020], 0x0000001f;
	and.b32 $r2, $r2, constant1_ZN8dwt_cuda12fdwt97KernelILi64ELi6EEEvPKfPfiii[0x0000];
	add.u32 $r2, s[0x0020], $r2;
	and.b32 $r6, $r2, constant1_ZN8dwt_cuda12fdwt97KernelILi64ELi6EEEvPKfPfiii[0x002c];
	mov.u32 $r2, $r1;
	add.u32 $p2|$o127, s[0x0020], -$r6;
	@$p2.neu add.u32 $r1, $r1, constant1_ZN8dwt_cuda12fdwt97KernelILi64ELi6EEEvPKfPfiii[0x0000];
	@$p1.neu add.u32 $r3, $r3, constant1_ZN8dwt_cuda12fdwt97KernelILi64ELi6EEEvPKfPfiii[0x0000];
	mov.half.u32 $r6, s[0x0020];
	mov.half.u32 $r8, s[0x0024];
	mul.wide.u16 $r10, $r6.lo, $r8.hi;
	mad.wide.u16 $r10, $r6.hi, $r8.lo, $r10;
	shl.u32 $r11, $r10, 0x00000010;
	mul.wide.u16 $r10, $r1.lo, $r3.hi;
	mad.wide.u16 $r8, $r6.lo, $r8.lo, $r11;
	mad.wide.u16 $r6, $r1.hi, $r3.lo, $r10;
	shr.s32 $r10, $r8, 0x0000001f;
	shl.u32 $r6, $r6, 0x00000010;
	and.b32 $r10, $r10, constant1_ZN8dwt_cuda12fdwt97KernelILi64ELi6EEEvPKfPfiii[0x0000];
	mad.wide.u16 $r1, $r1.lo, $r3.lo, $r6;
	add.half.u32 $r3, $r10, $r8;
	add.half.u32 $r5, $r1, $r5;
	shr.s32 $r15, $r3, 0x00000001;
	bra l0x00004a78;
	l0x00004a38: and.b32 $r2, s[0x0020], constant1_ZN8dwt_cuda12fdwt97KernelILi64ELi6EEEvPKfPfiii[0x0000];
	add.u32 $r2, $r1, $r2;
	@$p1.neu add.u32 $r3, $r3, constant1_ZN8dwt_cuda12fdwt97KernelILi64ELi6EEEvPKfPfiii[0x0000];
	mov.u32 $r1, s[0x0020];
	mul.wide.u16 $r6, $r3.lo, $r1.hi;
	mad.wide.u16 $r6, $r3.hi, $r1.lo, $r6;
	shl.u32 $r6, $r6, 0x00000010;
	mad.wide.u16 $r15, $r3.lo, $r1.lo, $r6;
	l0x00004a78: shr.s32 $r1, $r7, 0x0000001f;
	and.b32 $r1, $r1, constant1_ZN8dwt_cuda12fdwt97KernelILi64ELi6EEEvPKfPfiii[0x0000];
	add.u32 $r1, $r1, $r7;
	and.b32 $r3, $r7, constant1_ZN8dwt_cuda12fdwt97KernelILi64ELi6EEEvPKfPfiii[0x0000];
	shr.s32 $r1, $r1, 0x00000001;
	mul.half.lo.u16 $r6, $r2.lo, $r1.hi;
	mul.half.lo.u16 $r7, $r15.lo, $r3.hi;
	mad.wide.u16 $r6, $r2.hi, $r1.lo, $r6;
	mad.wide.u16 $r7, $r15.hi, $r3.lo, $r7;
	shl.u32 $r6, $r6, 0x00000010;
	shl.u32 $r7, $r7, 0x00000010;
	mad.wide.u16 $r1, $r2.lo, $r1.lo, $r6;
	mad.wide.u16 $r3, $r15.lo, $r3.lo, $r7;
	add.half.u32 $r1, $r1, $r3;
	add.half.u32 $r1, $r5, $r1;
	add.u32 $r25, $r2, -$r15;
	bra l0x00004b08;
	l0x00004af0: mov.u32 $r1, $r124;
	mov.u32 $r25, $r124;
	mov.u32 $r15, $r124;
	l0x00004b08: set.gt.s32.s32 $p1/$o127, s[0x0028], $r124;
	@$p1.eq retp;
	add.u32 $r2, $r4, 0x00000004;
	mov.u32 $r5, 0x000001d8;
	and.b32 $r4, $r2, constant1_ZN8dwt_cuda12fdwt97KernelILi64ELi6EEEvPKfPfiii[0x0000];
	mul.wide.u16 $r6, $r4.lo, $r5.hi;
	shr.s32 $r3, $r2, 0x0000001f;
	mad.wide.u16 $r6, $r4.hi, $r5.lo, $r6;
	and.b32 $r3, $r3, constant1_ZN8dwt_cuda12fdwt97KernelILi64ELi6EEEvPKfPfiii[0x0000];
	shl.u32 $r6, $r6, 0x00000010;
	add.u32 $r2, $r2, $r3;
	mad.wide.u16 $r3, $r4.lo, $r5.lo, $r6;
	shr.s32 $r2, $r2, 0x00000001;
	add.u32 $r2, $r3, $r2;
	shl.b32 $ofs2, $r2, 0x00000002;
	set.lt.u32.u32 $p1/$o127, $r17, constant1_ZN8dwt_cuda12fdwt97KernelILi64ELi6EEEvPKfPfiii[0x0030];
	shl.u32 $r3, $r9, 0x00000002;
	set.lt.u32.u32 $p2/$o127, $r17, constant1_ZN8dwt_cuda12fdwt97KernelILi64ELi6EEEvPKfPfiii[0x0034];
	mov.u32 $r2, $r124;
	st.local.u32 [0x0004], $r2;
	add.u32 $r2, s[0x0010], $r3;
	st.local.u32 [0x0000], $r2;
	l0x00004bb8: ld.local.u32 $r2, [0x0000];
	shl.u32 $r3, s[0x0020], 0x00000002;
	add.u32 $r2, $r2, $r3;
	ld.global.u32 $r5, [$r2];
	add.u32 $r2, $r2, $r3;
	ld.global.u32 $r4, [$r2];
	add.u32 $r6, $r2, $r3;
	ld.global.u32 $r2, [$r6];
	mov.u32 s[$ofs3+0x041c], $r5;
	add.u32 $r6, $r6, $r3;
	ld.global.u32 $r5, [$r6];
	mov.u32 s[$ofs3+0x04ac], $r4;
	add.u32 $r6, $r6, $r3;
	ld.global.u32 $r4, [$r6];
	mov.u32 s[$ofs3+0x053c], $r2;
	add.u32 $r2, $r6, $r3;
	ld.global.u32 $r3, [$r2];
	st.local.u32 [0x0000], $r2;
	mov.u32 s[$ofs3+0x05cc], $r5;
	mov.u32 s[$ofs3+0x065c], $r4;
	mov.u32 s[$ofs3+0x06ec], $r3;
	ssy 0x00004d58;
	@$p0.eq bra l0x00004d58;
	add.half.u32 $r2, $r23, $r0;
	add.half.u32 $r3, $r2, $r0;
	add.u32 $r5, $r0, $r3;
	shl.u32 $r4, $r2, 0x00000002;
	shl.u32 $r3, $r3, 0x00000002;
	shl.u32 $r2, $r5, 0x00000002;
	add.u32 $r4, s[0x0010], $r4;
	ld.global.u32 $r4, [$r4];
	add.u32 $r3, s[0x0010], $r3;
	ld.global.u32 $r3, [$r3];
	add.u32 $r2, s[0x0010], $r2;
	ld.global.u32 $r2, [$r2];
	add.half.u32 $r5, $r0, $r5;
	add.half.u32 $r6, $r0, $r5;
	shl.b32 $ofs1, $r24, 0x0;
	mov.u32 s[$ofs1+0x041c], $r4;
	add.u32 $r23, $r0, $r6;
	shl.u32 $r4, $r5, 0x00000002;
	mov.u32 s[$ofs1+0x04ac], $r3;
	shl.u32 $r3, $r6, 0x00000002;
	shl.u32 $r5, $r23, 0x00000002;
	add.u32 $r4, s[0x0010], $r4;
	ld.global.u32 $r4, [$r4];
	mov.u32 s[$ofs1+0x053c], $r2;
	add.u32 $r2, s[0x0010], $r3;
	ld.global.u32 $r3, [$r2];
	add.u32 $r2, s[0x0010], $r5;
	ld.global.u32 $r2, [$r2];
	mov.u32 s[$ofs1+0x05cc], $r4;
	mov.u32 s[$ofs1+0x065c], $r3;
	mov.u32 s[$ofs1+0x06ec], $r2;
	l0x00004d58: nop;
	bar.sync 0x00000000;
	shl.b32 $ofs4, $r17, 0x00000002;
	add.u32 $ofs1, $ofs4, 0x00000b7c;
	mov.u32 $r3, s[$ofs1+0x0000];
	add.u32 $ofs1, $ofs4, 0x0000041c;
	mov.half.u32 $r2, s[$ofs1+0x0004];
	add.half.f32 $r2, s[$ofs1+0x0000], $r2;
	mad.f32 $r3, $r2, 0xbfcb0673, $r3;
	mov.u32 s[$ofs4+0x0b7c], $r3;
	add.u32 $ofs1, $ofs4, 0x00000c7c;
	mov.u32 $r3, s[$ofs1+0x0000];
	add.u32 $ofs1, $ofs4, 0x0000051c;
	mov.half.u32 $r2, s[$ofs1+0x0004];
	add.half.f32 $r2, s[$ofs1+0x0000], $r2;
	mad.f32 $r3, $r2, 0xbfcb0673, $r3;
	mov.u32 s[$ofs4+0x0c7c], $r3;
	add.u32 $ofs1, $ofs4, 0x00000d7c;
	mov.u32 $r3, s[$ofs1+0x0000];
	add.u32 $ofs1, $ofs4, 0x0000061c;
	mov.half.u32 $r2, s[$ofs1+0x0004];
	add.half.f32 $r2, s[$ofs1+0x0000], $r2;
	mad.f32 $r3, $r2, 0xbfcb0673, $r3;
	mov.u32 s[$ofs4+0x0d7c], $r3;
	ssy 0x00004e48;
	@$p1.eq bra l0x00004e48;
	shl.b32 $ofs4, $r17, 0x00000002;
	add.u32 $ofs1, $ofs4, 0x0000071c;
	mov.half.u32 $r2, s[$ofs1+0x0004];
	add.half.f32 $r3, s[$ofs1+0x0000], $r2;
	add.u32 $ofs1, $ofs4, 0x00000e7c;
	mov.u32 $r2, s[$ofs1+0x0000];
	mad.f32 $r2, $r3, 0xbfcb0673, $r2;
	mov.u32 s[$ofs4+0x0e7c], $r2;
	l0x00004e48: nop;
	bar.sync 0x00000000;
	shl.b32 $ofs4, $r17, 0x00000002;
	add.u32 $ofs1, $ofs4, 0x00000420;
	mov.u32 $r3, s[$ofs1+0x0000];
	add.u32 $ofs1, $ofs4, 0x00000b7c;
	mov.half.u32 $r2, s[$ofs1+0x0004];
	add.half.f32 $r2, s[$ofs1+0x0000], $r2;
	mad.f32 $r3, $r2, 0xbd5901ae, $r3;
	mov.u32 s[$ofs4+0x0420], $r3;
	add.u32 $ofs1, $ofs4, 0x00000520;
	mov.u32 $r3, s[$ofs1+0x0000];
	add.u32 $ofs1, $ofs4, 0x00000c7c;
	mov.half.u32 $r2, s[$ofs1+0x0004];
	add.half.f32 $r2, s[$ofs1+0x0000], $r2;
	mad.f32 $r3, $r2, 0xbd5901ae, $r3;
	mov.u32 s[$ofs4+0x0520], $r3;
	add.u32 $ofs1, $ofs4, 0x00000620;
	mov.u32 $r3, s[$ofs1+0x0000];
	add.u32 $ofs1, $ofs4, 0x00000d7c;
	mov.half.u32 $r2, s[$ofs1+0x0004];
	add.half.f32 $r2, s[$ofs1+0x0000], $r2;
	mad.f32 $r3, $r2, 0xbd5901ae, $r3;
	mov.u32 s[$ofs4+0x0620], $r3;
	ssy 0x00004f38;
	@$p1.eq bra l0x00004f38;
	shl.b32 $ofs4, $r17, 0x00000002;
	add.u32 $ofs1, $ofs4, 0x00000e7c;
	mov.half.u32 $r2, s[$ofs1+0x0004];
	add.half.f32 $r3, s[$ofs1+0x0000], $r2;
	add.u32 $ofs1, $ofs4, 0x00000720;
	mov.u32 $r2, s[$ofs1+0x0000];
	mad.f32 $r2, $r3, 0xbd5901ae, $r2;
	mov.u32 s[$ofs4+0x0720], $r2;
	l0x00004f38: nop;
	bar.sync 0x00000000;
	shl.b32 $ofs4, $r17, 0x00000002;
	add.u32 $ofs1, $ofs4, 0x00000b7c;
	mov.u32 $r3, s[$ofs1+0x0000];
	add.u32 $ofs1, $ofs4, 0x0000041c;
	mov.half.u32 $r2, s[$ofs1+0x0004];
	add.half.f32 $r2, s[$ofs1+0x0000], $r2;
	mad.f32 $r3, $r2, 0x3f620676, $r3;
	mov.u32 s[$ofs4+0x0b7c], $r3;
	add.u32 $ofs1, $ofs4, 0x00000c7c;
	mov.u32 $r3, s[$ofs1+0x0000];
	add.u32 $ofs1, $ofs4, 0x0000051c;
	mov.half.u32 $r2, s[$ofs1+0x0004];
	add.half.f32 $r2, s[$ofs1+0x0000], $r2;
	mad.f32 $r3, $r2, 0x3f620676, $r3;
	mov.u32 s[$ofs4+0x0c7c], $r3;
	add.u32 $ofs1, $ofs4, 0x00000d7c;
	mov.u32 $r3, s[$ofs1+0x0000];
	add.u32 $ofs1, $ofs4, 0x0000061c;
	mov.half.u32 $r2, s[$ofs1+0x0004];
	add.half.f32 $r2, s[$ofs1+0x0000], $r2;
	mad.f32 $r3, $r2, 0x3f620676, $r3;
	mov.u32 s[$ofs4+0x0d7c], $r3;
	ssy 0x00005028;
	@$p1.eq bra l0x00005028;
	shl.b32 $ofs4, $r17, 0x00000002;
	add.u32 $ofs1, $ofs4, 0x0000071c;
	mov.half.u32 $r2, s[$ofs1+0x0004];
	add.half.f32 $r3, s[$ofs1+0x0000], $r2;
	add.u32 $ofs1, $ofs4, 0x00000e7c;
	mov.u32 $r2, s[$ofs1+0x0000];
	mad.f32 $r2, $r3, 0x3f620676, $r2;
	mov.u32 s[$ofs4+0x0e7c], $r2;
	l0x00005028: nop;
	bar.sync 0x00000000;
	shl.b32 $ofs4, $r17, 0x00000002;
	add.u32 $ofs1, $ofs4, 0x00000420;
	mov.u32 $r3, s[$ofs1+0x0000];
	add.u32 $ofs1, $ofs4, 0x00000b7c;
	mov.half.u32 $r2, s[$ofs1+0x0004];
	add.half.f32 $r2, s[$ofs1+0x0000], $r2;
	mad.f32 $r3, $r2, 0x3ee31355, $r3;
	mov.u32 s[$ofs4+0x0420], $r3;
	add.u32 $ofs1, $ofs4, 0x00000520;
	mov.u32 $r3, s[$ofs1+0x0000];
	add.u32 $ofs1, $ofs4, 0x00000c7c;
	mov.half.u32 $r2, s[$ofs1+0x0004];
	add.half.f32 $r2, s[$ofs1+0x0000], $r2;
	mad.f32 $r3, $r2, 0x3ee31355, $r3;
	mov.u32 s[$ofs4+0x0520], $r3;
	add.u32 $ofs1, $ofs4, 0x00000620;
	mov.u32 $r3, s[$ofs1+0x0000];
	add.u32 $ofs1, $ofs4, 0x00000d7c;
	mov.half.u32 $r2, s[$ofs1+0x0004];
	add.half.f32 $r2, s[$ofs1+0x0000], $r2;
	mad.f32 $r3, $r2, 0x3ee31355, $r3;
	mov.u32 s[$ofs4+0x0620], $r3;
	ssy 0x00005118;
	@$p1.eq bra l0x00005118;
	shl.b32 $ofs4, $r17, 0x00000002;
	add.u32 $ofs1, $ofs4, 0x00000e7c;
	mov.half.u32 $r2, s[$ofs1+0x0004];
	add.half.f32 $r3, s[$ofs1+0x0000], $r2;
	add.u32 $ofs1, $ofs4, 0x00000720;
	mov.u32 $r2, s[$ofs1+0x0000];
	mad.f32 $r2, $r3, 0x3ee31355, $r2;
	mov.u32 s[$ofs4+0x0720], $r2;
	l0x00005118: nop;
	bar.sync 0x00000000;
	shl.b32 $ofs4, $r17, 0x00000002;
	add.u32 $ofs1, $ofs4, 0x0000041c;
	mul.f32 $r2, s[$ofs1+0x0000], 0x3f5019c3;
	mov.u32 s[$ofs4+0x041c], $r2;
	add.u32 $ofs1, $ofs4, 0x00000b7c;
	mul.f32 $r2, s[$ofs1+0x0000], 0x3f9d7658;
	mov.u32 s[$ofs4+0x0b7c], $r2;
	add.u32 $ofs1, $ofs4, 0x0000051c;
	mul.f32 $r2, s[$ofs1+0x0000], 0x3f5019c3;
	mov.u32 s[$ofs4+0x051c], $r2;
	add.u32 $ofs1, $ofs4, 0x00000c7c;
	mul.f32 $r2, s[$ofs1+0x0000], 0x3f9d7658;
	mov.u32 s[$ofs4+0x0c7c], $r2;
	add.u32 $ofs1, $ofs4, 0x0000061c;
	mul.f32 $r2, s[$ofs1+0x0000], 0x3f5019c3;
	mov.u32 s[$ofs4+0x061c], $r2;
	add.u32 $ofs1, $ofs4, 0x00000d7c;
	mul.f32 $r2, s[$ofs1+0x0000], 0x3f9d7658;
	mov.u32 s[$ofs4+0x0d7c], $r2;
	ssy 0x00005208;
	@$p2.eq bra l0x00005208;
	shl.b32 $ofs4, $r17, 0x00000002;
	add.u32 $ofs1, $ofs4, 0x0000071c;
	mul.f32 $r2, s[$ofs1+0x0000], 0x3f5019c3;
	mov.u32 s[$ofs4+0x071c], $r2;
	add.u32 $ofs1, $ofs4, 0x00000e7c;
	mul.f32 $r2, s[$ofs1+0x0000], 0x3f9d7658;
	mov.u32 s[$ofs4+0x0e7c], $r2;
	l0x00005208: nop;
	bar.sync 0x00000000;
	add.u32 $ofs1, $ofs2, 0x000000bc;
	mov.u32 $r4, s[$ofs1+0x0000];
	add.u32 $ofs1, $ofs2, 0x0000014c;
	mov.half.u32 $r3, s[$ofs1+0x0000];
	mov.half.u32 $r2, s[$ofs1+0x0000];
	mov.u32 $r21, s[$ofs1+0x0000];
	add.u32 $ofs1, $ofs2, 0x000005cc;
	mov.half.u32 $r5, s[$ofs1+0x0000];
	mov.half.u32 $r6, s[$ofs1+0x0000];
	mov.half.u32 $r11, s[$ofs1+0x0000];
	mov.half.u32 $r8, s[$ofs1+0x0000];
	add.u32 $ofs1, $ofs2, 0x0000065c;
	mov.half.u32 $r20, s[$ofs1+0x0000];
	mov.half.u32 $r14, s[$ofs1+0x0000];
	add.u32 $ofs1, $ofs2, 0x0000053c;
	mov.u32 $r26, $ofs1;
	add.u32 $ofs1, $ofs2, 0x000004ac;
	mov.u32 $r28, $ofs1;
	add.u32 $ofs4, $ofs2, 0x000006ec;
	shl.b32 $ofs1, $r26, 0x0;
	mov.u32 $r9, s[$ofs1+0x0000];
	shl.b32 $ofs1, $r28, 0x0;
	add.f32 $r5, s[$ofs1+0x0000], $r5;
	add.f32 $r6, s[$ofs4+0x0000], $r6;
	mad.f32 $r9, $r5, 0xbfcb0673, $r9;
	mad.f32 $r20, $r6, 0xbfcb0673, $r20;
	add.f32 $r5, $r9, $r20;
	mad.f32 $r11, $r5, 0xbd5901ae, $r11;
	mov.u32 $r10, s[$ofs4+0x0000];
	add.f32 $r29, s[$ofs4+0x0000], $r11;
	add.f32 $r3, s[$ofs2+0x002c], $r3;
	mad.f32 $r3, $r3, constant1_ZN8dwt_cuda12fdwt97KernelILi64ELi6EEEvPKfPfiii[0x001c], $r4;
	add.u32 $ofs1, $ofs2, 0x0000041c;
	mov.u32 $r27, $ofs1;
	add.u32 $ofs4, $ofs2, 0x0000038c;
	mov.u32 $r4, s[$ofs2+0x002c];
	shl.b32 $ofs1, $r28, 0x0;
	mov.u32 $r7, s[$ofs1+0x0000];
	shl.b32 $ofs1, $r27, 0x0;
	mov.u32 $r22, s[$ofs1+0x0000];
	mov.u32 $r19, s[$ofs4+0x0000];
	mov.u32 $r18, s[$ofs4+0x0000];
	shl.b32 $ofs1, $r28, 0x0;
	mov.u32 $r16, s[$ofs1+0x0000];
	mov.u32 $r5, s[$ofs4+0x0000];
	shl.b32 $ofs1, $r27, 0x0;
	mov.u32 $r12, s[$ofs1+0x0000];
	shl.b32 $ofs1, $r28, 0x0;
	mov.u32 $r6, s[$ofs1+0x0000];
	shl.b32 $ofs1, $r26, 0x0;
	mov.u32 $r13, s[$ofs1+0x0000];
	add.f32 $r7, s[$ofs4+0x0000], $r7;
	add.u32 $ofs1, $ofs2, 0x0000026c;
	mov.u32 $r30, $ofs1;
	mov.u32 s[$ofs2+0x00bc], $r3;
	mad.f32 $r7, $r7, constant1_ZN8dwt_cuda12fdwt97KernelILi64ELi6EEEvPKfPfiii[0x001c], $r22;
	mov.u32 $r22, s[$ofs1+0x0000];
	add.u32 $ofs1, $ofs2, 0x000001dc;
	mov.u32 $r31, $ofs1;
	add.half.f32 $r22, $r2, $r22;
	mov.half.u32 $r2, s[$ofs1+0x0000];
	mad.f32 $r2, $r22, 0xbfcb0673, $r2;
	shl.b32 $ofs1, $r30, 0x0;
	add.half.f32 $r30, s[$ofs1+0x0000], $r19;
	mov.half.u32 $r22, s[$ofs1+0x0000];
	add.u32 $ofs1, $ofs2, 0x000002fc;
	mov.u32 $r19, $ofs1;
	mov.u32 s[$ofs2+0x01dc], $r2;
	mov.u32 $r19, s[$ofs1+0x0000];
	mad.f32 $r19, $r30, 0xbfcb0673, $r19;
	mov.u32 s[$ofs2+0x02fc], $r19;
	mov.u32 s[$ofs2+0x041c], $r7;
	mov.u32 s[$ofs2+0x053c], $r9;
	mov.u32 s[$ofs2+0x065c], $r20;
	mad.f32 $r20, $r29, 0x3f620676, $r20;
	add.f32 $r29, $r3, $r2;
	mad.f32 $r21, $r29, 0xbd5901ae, $r21;
	add.f32 $r29, $r2, $r19;
	mad.f32 $r22, $r29, 0xbd5901ae, $r22;
	add.f32 $r29, $r19, $r7;
	mov.u32 s[$ofs2+0x014c], $r21;
	mad.f32 $r18, $r29, 0xbd5901ae, $r18;
	add.f32 $r29, $r7, $r9;
	mov.u32 s[$ofs2+0x026c], $r22;
	mad.f32 $r16, $r29, 0xbd5901ae, $r16;
	mov.u32 s[$ofs2+0x038c], $r18;
	add.f32 $r4, $r4, $r21;
	mov.u32 s[$ofs2+0x04ac], $r16;
	add.f32 $r29, $r21, $r22;
	mad.f32 $r3, $r4, 0x3f620676, $r3;
	mov.u32 s[$ofs2+0x05cc], $r11;
	mad.f32 $r2, $r29, 0x3f620676, $r2;
	add.f32 $r4, $r22, $r18;
	mov.u32 s[$ofs2+0x00bc], $r3;
	add.f32 $r29, $r18, $r16;
	mad.f32 $r19, $r4, 0x3f620676, $r19;
	mov.u32 s[$ofs2+0x01dc], $r2;
	mad.f32 $r7, $r29, 0x3f620676, $r7;
	add.f32 $r4, $r16, $r11;
	mov.u32 s[$ofs2+0x02fc], $r19;
	mad.f32 $r9, $r4, 0x3f620676, $r9;
	mov.u32 s[$ofs2+0x041c], $r7;
	add.f32 $r3, $r3, $r2;
	mov.u32 s[$ofs2+0x053c], $r9;
	mad.f32 $r21, $r3, 0x3ee31355, $r21;
	mov.u32 s[$ofs2+0x065c], $r20;
	add.f32 $r2, $r2, $r19;
	mov.u32 s[$ofs2+0x014c], $r21;
	add.f32 $r3, $r19, $r7;
	mad.f32 $r22, $r2, 0x3ee31355, $r22;
	mad.f32 $r18, $r3, 0x3ee31355, $r18;
	mov.u32 s[$ofs2+0x026c], $r22;
	add.f32 $r2, $r7, $r9;
	mov.u32 s[$ofs2+0x038c], $r18;
	add.f32 $r3, $r9, $r20;
	mad.f32 $r16, $r2, 0x3ee31355, $r16;
	mad.f32 $r11, $r3, 0x3ee31355, $r11;
	mov.u32 s[$ofs2+0x04ac], $r16;
	mov.u32 s[$ofs2+0x05cc], $r11;
	mul.f32 $r9, s[$ofs1+0x0000], 0x3f9d7658;
	mul.f32 $r3, s[$ofs4+0x0000], constant1_ZN8dwt_cuda12fdwt97KernelILi64ELi6EEEvPKfPfiii[0x003c];
	shl.b32 $ofs1, $r27, 0x0;
	mul.f32 $r2, s[$ofs1+0x0000], 0x3f9d7658;
	shl.b32 $ofs1, $r28, 0x0;
	mul.f32 $r4, s[$ofs1+0x0000], 0x3f5019c3;
	shl.u32 $r11, $r1, 0x00000002;
	shl.b32 $ofs1, $r26, 0x0;
	mul.f32 $r7, s[$ofs1+0x0000], 0x3f9d7658;
	add.u32 $r1, $r15, $r1;
	mov.u32 s[$ofs2+0x002c], $r5;
	add.u32 $r5, s[0x0018], $r11;
	shl.u32 $r16, $r1, 0x00000002;
	mul.f32 $r11, $r22, 0x3f5019c3;
	add.u32 $r1, $r25, $r1;
	mov.u32 s[$ofs2+0x00bc], $r12;
	st.global.u32 [$r5], $r11;
	add.u32 $r5, s[0x0018], $r16;
	shl.u32 $r11, $r1, 0x00000002;
	add.u32 $r1, $r15, $r1;
	mov.u32 s[$ofs2+0x014c], $r6;
	st.global.u32 [$r5], $r9;
	add.u32 $r5, s[0x0018], $r11;
	shl.u32 $r6, $r1, 0x00000002;
	add.u32 $r1, $r25, $r1;
	mov.u32 s[$ofs2+0x01dc], $r13;
	st.global.u32 [$r5], $r3;
	add.u32 $r3, s[0x0018], $r6;
	shl.u32 $r5, $r1, 0x00000002;
	add.u32 $r1, $r15, $r1;
	mov.u32 s[$ofs2+0x026c], $r8;
	st.global.u32 [$r3], $r2;
	add.u32 $r2, s[0x0018], $r5;
	shl.u32 $r3, $r1, 0x00000002;
	mov.u32 s[$ofs2+0x02fc], $r14;
	st.global.u32 [$r2], $r4;
	add.u32 $r2, s[0x0018], $r3;
	mov.u32 s[$ofs2+0x038c], $r10;
	st.global.u32 [$r2], $r7;
	add.u32 $r1, $r25, $r1;
	bar.sync 0x00000000;
	ld.local.u32 $r2, [0x0004];
	add.u32 $r2, $r2, 0x00000001;
	st.local.u32 [0x0004], $r2;
	set.ne.s32.s32 $p3/$o127, s[0x0028], $r2;
	@$p3.ne bra l0x00004bb8;
	nop;

	l_exit: exit;
}

.entry  _ZN8dwt_cuda12fdwt97KernelILi128ELi6EEEvPKfPfiii (
	.param  .u64 __cudaparm__ZN8dwt_cuda12fdwt97KernelILi128ELi6EEEvPKfPfiii_input ,
	.param  .u64 __cudaparm__ZN8dwt_cuda12fdwt97KernelILi128ELi6EEEvPKfPfiii_output ,
	.param  .s32 __cudaparm__ZN8dwt_cuda12fdwt97KernelILi128ELi6EEEvPKfPfiii_sx ,
	.param  .s32 __cudaparm__ZN8dwt_cuda12fdwt97KernelILi128ELi6EEEvPKfPfiii_sy ,
	.param  .s32 __cudaparm__ZN8dwt_cuda12fdwt97KernelILi128ELi6EEEvPKfPfiii_steps )
{
	.reg .u32 $r<32>;
	.reg .u32 $ofs<5>;
	.reg .pred $p<4>;

	.reg .u32 $r124;

	.reg .u32 $o127;

	
	cvt.u32.u16 $r17, $r0.lo;
	add.u32 $r3, $r17, 0x00000004;
	mov.u32 $r5, 0x00000378;
	and.b32 $r4, $r3, constant1_ZN8dwt_cuda12fdwt97KernelILi128ELi6EEEvPKfPfiii[0x0000];
	mul.wide.u16 $r0, $r4.lo, $r5.hi;
	mad.wide.u16 $r6, $r4.hi, $r5.lo, $r0;
	cvt.u32.u16 $r2, %ctaid.y;
	shr.s32 $r7, $r3, 0x0000001f;
	mov.u32 $r1, 0x00000006;
	mov.u32 $r0, s[0x0028];
	and.b32 $r7, $r7, constant1_ZN8dwt_cuda12fdwt97KernelILi128ELi6EEEvPKfPfiii[0x0000];
	mad24.lo.u32 $r1, $r2, constant1_ZN8dwt_cuda12fdwt97KernelILi128ELi6EEEvPKfPfiii[0x0004], $r1;
	shl.u32 $r6, $r6, 0x00000010;
	add.u32 $r7, $r3, $r7;
	mul.wide.u16 $r8, $r0.lo, $r1.hi;
	mad.wide.u16 $r3, $r4.lo, $r5.lo, $r6;
	shr.s32 $r4, $r7, 0x00000001;
	mul.wide.u16 $r5, $r0.hi, $r2.lo;
	mad.wide.u16 $r6, $r0.hi, $r1.lo, $r8;
	add.u32 $r3, $r3, $r4;
	shl.u32 $r5, $r5, 0x00000010;
	shl.u32 $r7, $r6, 0x00000010;
	shr.u32 $r6, $r17, 0x00000006;
	shl.u32 $r4, $r17, 0x00000001;
	mad.wide.u16 $r2, $r0.lo, $r2.lo, $r5;
	mad.wide.u16 $r1, $r0.lo, $r1.lo, $r7;
	shl.b32 $ofs3, $r3, 0x00000002;
	@$p2 mad24.lo.u32 $r4, $r6, constant1_ZN8dwt_cuda12fdwt97KernelILi128ELi6EEEvPKfPfiii[0x0010], $r4;
	shl.u32 $r0, $r2, 0x00000002;
	add.u32 $r5, $r1, 0x00000003;
	shl.u32 $r1, $r2, 0x00000001;
	mul.wide.u16 $r3, %ctaid.x, 0x00000080;
	set.gt.s32.s32 $p3/$o127, s[0x0024], $r5;
	@$p3 mov.u32 $r2, $p3;
	add.half.u32 $r7, $r0, $r1;
	add.half.u32 $r9, $r17, $r3;
	add.u32 $r5, $r3, $r4;
	set.le.u32.u32 $p0/$o127, $r17, constant1_ZN8dwt_cuda12fdwt97KernelILi128ELi6EEEvPKfPfiii[0x0004];
	set.lt.u32.u32 $p1/$o127, $r17, constant1_ZN8dwt_cuda12fdwt97KernelILi128ELi6EEEvPKfPfiii[0x0008];
	set.lt.u32.u32 $p2/$o127, $r17, constant1_ZN8dwt_cuda12fdwt97KernelILi128ELi6EEEvPKfPfiii[0x000c];
	@$p2 mov.u32 $r6, $p2;
	set.le.s32.s32 $p2/$o127, s[0x0020], $r9;
	set.gt.s32.s32 $p3/$o127, s[0x0020], $r5;
	@$p3 mov.u32 $r8, $p3;
	mov.pred $p3, $r2;
	@$p3.ne bra l0x000021c0;
	mov.half.u32 $r1, s[0x0020];
	mov.half.u32 $r0, s[0x0024];
	mul.wide.u16 $r2, $r1.lo, $r0.hi;
	mad.wide.u16 $r2, $r1.hi, $r0.lo, $r2;
	shl.u32 $r2, $r2, 0x00000010;
	mad.wide.u16 $r11, $r1.lo, $r0.lo, $r2;
	cvt.u32.u16 $r2, %ctaid.y;
	set.eq.u32.u32 $p3/$o127, $r2, $r124;
	@$p3.eq bra l0x00000450;
	ssy 0x000001f8;
	@$p2.eq bra l0x000001d8;
	shl.u32 $r0, s[0x0020], 0x00000001;
	add.u32 $r0, $r0, -$r9;
	add.u32 $r10, $r0, 0xfffffffe;
	bra l0x000001f8;
	l0x000001d8: add.u32 $r10, -$r9, 0x00000000;
	set.lt.s32.s32 $p3/$o127, $r9, $r124;
	@$p3 mov.u32 $r0, $p3;
	@$p3.equ mov.u32 $r10, $r9;
	l0x000001f8: mov.u32 $r0, s[0x0020];
	mul.wide.u16 $r1, $r0.lo, $r7.hi;
	mad.wide.u16 $r1, $r0.hi, $r7.lo, $r1;
	shl.u32 $r1, $r1, 0x00000010;
	mad.wide.u16 $r2, $r0.lo, $r7.lo, $r1;
	mov.half.u32 $r0, s[0x0020];
	add.half.u32 $r1, $r2, $r10;
	set.ne.s32.s32 $p3/$o127, $r2, $r11;
	@$p3 mov.u32 $r2, $p3;
	@$p3.equ shl.u32 $r0, s[0x0020], 0x00000001;
	@$p3.equ add.u32 $r1, $r1, -$r0;
	@$p3.equ add.u32 $r0, -s[0x0020], constant1_ZN8dwt_cuda12fdwt97KernelILi128ELi6EEEvPKfPfiii[0x0038];
	shl.u32 $r2, $r1, 0x00000002;
	add.u32 $r2, s[0x0010], $r2;
	ld.global.u32 $r12, [$r2];
	add.half.u32 $r2, $r11, $r10;
	add.half.u32 $r1, $r0, $r1;
	mov.u32 s[$ofs3+0x046c], $r12;
	set.ne.s32.s32 $p3/$o127, $r2, $r1;
	@$p3 mov.u32 $r10, $p3;
	@$p3.equ shl.u32 $r10, $r0, 0x00000001;
	@$p3.equ add.u32 $r1, $r1, -$r10;
	@$p3.equ add.u32 $r0, -$r0, constant1_ZN8dwt_cuda12fdwt97KernelILi128ELi6EEEvPKfPfiii[0x0038];
	shl.u32 $r10, $r1, 0x00000002;
	add.u32 $r10, s[0x0010], $r10;
	ld.global.u32 $r10, [$r10];
	mov.u32 s[$ofs3+0x057c], $r10;
	add.u32 $r1, $r0, $r1;
	mov.u32 s[$ofs3+0x035c], $r10;
	set.ne.s32.s32 $p3/$o127, $r2, $r1;
	@$p3 mov.u32 $r10, $p3;
	@$p3.equ shl.u32 $r10, $r0, 0x00000001;
	@$p3.equ add.u32 $r1, $r1, -$r10;
	@$p3.equ add.u32 $r0, -$r0, constant1_ZN8dwt_cuda12fdwt97KernelILi128ELi6EEEvPKfPfiii[0x0038];
	shl.u32 $r10, $r1, 0x00000002;
	add.u32 $r10, s[0x0010], $r10;
	ld.global.u32 $r10, [$r10];
	mov.u32 s[$ofs3+0x068c], $r10;
	add.u32 $r1, $r0, $r1;
	mov.u32 s[$ofs3+0x024c], $r10;
	set.ne.s32.s32 $p3/$o127, $r2, $r1;
	@$p3 mov.u32 $r10, $p3;
	@$p3.equ shl.u32 $r10, $r0, 0x00000001;
	@$p3.equ add.u32 $r1, $r1, -$r10;
	@$p3.equ add.u32 $r0, -$r0, constant1_ZN8dwt_cuda12fdwt97KernelILi128ELi6EEEvPKfPfiii[0x0038];
	shl.u32 $r10, $r1, 0x00000002;
	add.u32 $r10, s[0x0010], $r10;
	ld.global.u32 $r10, [$r10];
	add.u32 $r1, $r0, $r1;
	mov.u32 s[$ofs3+0x013c], $r10;
	set.ne.s32.s32 $p3/$o127, $r2, $r1;
	@$p3 mov.u32 $r2, $p3;
	@$p3.equ shl.u32 $r0, $r0, 0x00000001;
	@$p3.equ add.u32 $r1, $r1, -$r0;
	shl.u32 $r0, $r1, 0x00000002;
	add.u32 $r0, s[0x0010], $r0;
	ld.global.u32 $r0, [$r0];
	mov.u32 s[$ofs3+0x002c], $r0;
	ssy 0x00000400;
	@$p2.eq bra l0x000003e8;
	shl.u32 $r0, s[0x0020], 0x00000001;
	add.u32 $r0, $r0, -$r9;
	add.u32 $r10, $r0, 0xfffffffe;
	bra l0x00000400;
	l0x000003e8: add.u32 $r10, -$r9, 0x00000000;
	set.lt.s32.s32 $p2/$o127, $r9, $r124;
	@$p2.equ mov.u32 $r10, $r9;
	l0x00000400: nop;
	add.u32 $r1, $r7, 0x00000003;
	mov.u32 $r0, s[0x0020];
	mul.wide.u16 $r2, $r0.lo, $r1.hi;
	mad.wide.u16 $r2, $r0.hi, $r1.lo, $r2;
	shl.u32 $r2, $r2, 0x00000010;
	mad.wide.u16 $r0, $r0.lo, $r1.lo, $r2;
	add.half.u32 $r2, $r10, $r0;
	add.half.u32 $r0, $r11, $r10;
	mov.half.u32 $r1, s[0x0020];
	add.half.u32 $r21, -s[0x0020], $r2;
	bra l0x000006c8;
	l0x00000450: ssy 0x00000498;
	@$p2.eq bra l0x00000480;
	shl.u32 $r0, s[0x0020], 0x00000001;
	add.u32 $r0, $r0, -$r9;
	add.u32 $r10, $r0, 0xfffffffe;
	bra l0x00000498;
	l0x00000480: add.u32 $r10, -$r9, 0x00000000;
	set.lt.s32.s32 $p2/$o127, $r9, $r124;
	@$p2.equ mov.u32 $r10, $r9;
	l0x00000498: mov.u32 $r1, s[0x0020];
	add.u32 $r2, $r7, 0xfffffffc;
	mul.wide.u16 $r0, $r2.lo, $r1.hi;
	mad.wide.u16 $r0, $r2.hi, $r1.lo, $r0;
	shl.u32 $r9, $r0, 0x00000010;
	add.u32 $r0, $r11, $r10;
	mad.wide.u16 $r9, $r2.lo, $r1.lo, $r9;
	mov.half.u32 $r1, s[0x0020];
	add.half.u32 $r2, $r10, $r9;
	set.ne.s32.s32 $p2/$o127, $r9, $r11;
	@$p2.equ shl.u32 $r1, s[0x0020], 0x00000001;
	@$p2.equ add.u32 $r2, $r2, -$r1;
	@$p2.equ add.u32 $r1, -s[0x0020], constant1_ZN8dwt_cuda12fdwt97KernelILi128ELi6EEEvPKfPfiii[0x0038];
	shl.u32 $r9, $r2, 0x00000002;
	add.u32 $r9, s[0x0010], $r9;
	ld.global.u32 $r9, [$r9];
	add.u32 $r2, $r2, $r1;
	mov.u32 s[$ofs3+0x002c], $r9;
	set.ne.s32.s32 $p2/$o127, $r0, $r2;
	@$p2.equ shl.u32 $r9, $r1, 0x00000001;
	@$p2.equ add.u32 $r2, $r2, -$r9;
	@$p2.equ add.u32 $r1, -$r1, constant1_ZN8dwt_cuda12fdwt97KernelILi128ELi6EEEvPKfPfiii[0x0038];
	shl.u32 $r9, $r2, 0x00000002;
	add.u32 $r9, s[0x0010], $r9;
	ld.global.u32 $r9, [$r9];
	add.u32 $r2, $r2, $r1;
	mov.u32 s[$ofs3+0x013c], $r9;
	set.ne.s32.s32 $p2/$o127, $r0, $r2;
	@$p2.equ shl.u32 $r9, $r1, 0x00000001;
	@$p2.equ add.u32 $r2, $r2, -$r9;
	@$p2.equ add.u32 $r1, -$r1, constant1_ZN8dwt_cuda12fdwt97KernelILi128ELi6EEEvPKfPfiii[0x0038];
	shl.u32 $r9, $r2, 0x00000002;
	add.u32 $r9, s[0x0010], $r9;
	ld.global.u32 $r9, [$r9];
	add.u32 $r2, $r2, $r1;
	mov.u32 s[$ofs3+0x024c], $r9;
	set.ne.s32.s32 $p2/$o127, $r0, $r2;
	@$p2.equ shl.u32 $r9, $r1, 0x00000001;
	@$p2.equ add.u32 $r2, $r2, -$r9;
	@$p2.equ add.u32 $r1, -$r1, constant1_ZN8dwt_cuda12fdwt97KernelILi128ELi6EEEvPKfPfiii[0x0038];
	shl.u32 $r9, $r2, 0x00000002;
	add.u32 $r9, s[0x0010], $r9;
	ld.global.u32 $r9, [$r9];
	add.u32 $r2, $r2, $r1;
	mov.u32 s[$ofs3+0x035c], $r9;
	set.ne.s32.s32 $p2/$o127, $r0, $r2;
	@$p2.equ shl.u32 $r9, $r1, 0x00000001;
	@$p2.equ add.u32 $r2, $r2, -$r9;
	@$p2.equ add.u32 $r1, -$r1, constant1_ZN8dwt_cuda12fdwt97KernelILi128ELi6EEEvPKfPfiii[0x0038];
	shl.u32 $r9, $r2, 0x00000002;
	add.u32 $r9, s[0x0010], $r9;
	ld.global.u32 $r9, [$r9];
	add.u32 $r2, $r2, $r1;
	mov.u32 s[$ofs3+0x046c], $r9;
	set.ne.s32.s32 $p2/$o127, $r0, $r2;
	@$p2.equ shl.u32 $r9, $r1, 0x00000001;
	@$p2.equ add.u32 $r2, $r2, -$r9;
	@$p2.equ add.u32 $r1, -$r1, constant1_ZN8dwt_cuda12fdwt97KernelILi128ELi6EEEvPKfPfiii[0x0038];
	shl.u32 $r9, $r2, 0x00000002;
	add.u32 $r9, s[0x0010], $r9;
	ld.global.u32 $r9, [$r9];
	add.u32 $r21, $r2, $r1;
	mov.u32 s[$ofs3+0x057c], $r9;
	set.ne.s32.s32 $p2/$o127, $r0, $r21;
	@$p2.equ shl.u32 $r2, $r1, 0x00000001;
	@$p2.equ add.u32 $r21, $r21, -$r2;
	@$p2.equ add.u32 $r1, -$r1, constant1_ZN8dwt_cuda12fdwt97KernelILi128ELi6EEEvPKfPfiii[0x0038];
	shl.u32 $r2, $r21, 0x00000002;
	add.u32 $r2, s[0x0010], $r2;
	ld.global.u32 $r2, [$r2];
	mov.u32 s[$ofs3+0x068c], $r2;
	l0x000006c8: ssy 0x00000cb8;
	@$p0.eq bra l0x00000c90;
	add.u32 $r10, $r17, 0xfffffff9;
	set.le.u32.u32 $p2/$o127, $r17, constant1_ZN8dwt_cuda12fdwt97KernelILi128ELi6EEEvPKfPfiii[0x0014];
	@$p2.ne add.u32 $r10, $r17, constant1_ZN8dwt_cuda12fdwt97KernelILi128ELi6EEEvPKfPfiii[0x0018];
	add.u32 $r12, $r10, 0x00000004;
	mov.u32 $r9, 0x00000378;
	and.b32 $r2, $r12, constant1_ZN8dwt_cuda12fdwt97KernelILi128ELi6EEEvPKfPfiii[0x0000];
	mul.wide.u16 $r14, $r2.lo, $r9.hi;
	shr.s32 $r13, $r12, 0x0000001f;
	mad.wide.u16 $r14, $r2.hi, $r9.lo, $r14;
	and.b32 $r13, $r13, constant1_ZN8dwt_cuda12fdwt97KernelILi128ELi6EEEvPKfPfiii[0x0000];
	shl.u32 $r14, $r14, 0x00000010;
	add.u32 $r12, $r12, $r13;
	mad.wide.u16 $r9, $r2.lo, $r9.lo, $r14;
	shr.s32 $r2, $r12, 0x00000001;
	add.u32 $r2, $r9, $r2;
	shl.b32 $ofs1, $r2, 0x00000002;
	mov.u32 $r23, $ofs1;
	add.u32 $r9, $r10, $r3;
	set.le.s32.s32 $p2/$o127, s[0x0020], $r9;
	cvt.u32.u16 $r2, %ctaid.y;
	set.eq.u32.u32 $p3/$o127, $r2, $r124;
	@$p3.eq bra l0x00000a08;
	ssy 0x000007d0;
	@$p2.eq bra l0x000007b8;
	shl.u32 $r2, s[0x0020], 0x00000001;
	add.u32 $r2, $r2, -$r9;
	add.u32 $r10, $r2, 0xfffffffe;
	bra l0x000007d0;
	l0x000007b8: add.u32 $r10, -$r9, 0x00000000;
	set.lt.s32.s32 $p3/$o127, $r9, $r124;
	@$p3.equ mov.u32 $r10, $r9;
	l0x000007d0: mov.u32 $r2, s[0x0020];
	mul.wide.u16 $r3, $r2.lo, $r7.hi;
	mad.wide.u16 $r3, $r2.hi, $r7.lo, $r3;
	shl.u32 $r3, $r3, 0x00000010;
	mad.wide.u16 $r12, $r2.lo, $r7.lo, $r3;
	mov.half.u32 $r2, s[0x0020];
	add.half.u32 $r3, $r12, $r10;
	set.ne.s32.s32 $p3/$o127, $r12, $r11;
	@$p3.equ shl.u32 $r2, s[0x0020], 0x00000001;
	@$p3.equ add.u32 $r3, $r3, -$r2;
	@$p3.equ add.u32 $r2, -s[0x0020], constant1_ZN8dwt_cuda12fdwt97KernelILi128ELi6EEEvPKfPfiii[0x0038];
	shl.u32 $r12, $r3, 0x00000002;
	add.u32 $r12, s[0x0010], $r12;
	ld.global.u32 $r12, [$r12];
	add.half.u32 $r10, $r11, $r10;
	add.half.u32 $r3, $r2, $r3;
	shl.b32 $ofs1, $r23, 0x0;
	mov.u32 s[$ofs1+0x046c], $r12;
	set.ne.s32.s32 $p3/$o127, $r10, $r3;
	@$p3.equ shl.u32 $r12, $r2, 0x00000001;
	@$p3.equ add.u32 $r3, $r3, -$r12;
	@$p3.equ add.u32 $r2, -$r2, constant1_ZN8dwt_cuda12fdwt97KernelILi128ELi6EEEvPKfPfiii[0x0038];
	shl.u32 $r12, $r3, 0x00000002;
	add.u32 $r12, s[0x0010], $r12;
	ld.global.u32 $r12, [$r12];
	mov.u32 s[$ofs1+0x057c], $r12;
	add.u32 $r3, $r2, $r3;
	mov.u32 s[$ofs1+0x035c], $r12;
	set.ne.s32.s32 $p3/$o127, $r10, $r3;
	@$p3.equ shl.u32 $r12, $r2, 0x00000001;
	@$p3.equ add.u32 $r3, $r3, -$r12;
	@$p3.equ add.u32 $r2, -$r2, constant1_ZN8dwt_cuda12fdwt97KernelILi128ELi6EEEvPKfPfiii[0x0038];
	shl.u32 $r12, $r3, 0x00000002;
	add.u32 $r12, s[0x0010], $r12;
	ld.global.u32 $r12, [$r12];
	mov.u32 s[$ofs1+0x068c], $r12;
	add.u32 $r3, $r2, $r3;
	mov.u32 s[$ofs1+0x024c], $r12;
	set.ne.s32.s32 $p3/$o127, $r10, $r3;
	@$p3.equ shl.u32 $r12, $r2, 0x00000001;
	@$p3.equ add.u32 $r3, $r3, -$r12;
	@$p3.equ add.u32 $r2, -$r2, constant1_ZN8dwt_cuda12fdwt97KernelILi128ELi6EEEvPKfPfiii[0x0038];
	shl.u32 $r12, $r3, 0x00000002;
	add.u32 $r12, s[0x0010], $r12;
	ld.global.u32 $r12, [$r12];
	add.u32 $r3, $r2, $r3;
	mov.u32 s[$ofs1+0x013c], $r12;
	set.ne.s32.s32 $p3/$o127, $r10, $r3;
	@$p3.equ shl.u32 $r2, $r2, 0x00000001;
	@$p3.equ add.u32 $r3, $r3, -$r2;
	shl.u32 $r2, $r3, 0x00000002;
	add.u32 $r2, s[0x0010], $r2;
	ld.global.u32 $r2, [$r2];
	mov.u32 s[$ofs1+0x002c], $r2;
	ssy 0x000009b8;
	@$p2.eq bra l0x000009a0;
	shl.u32 $r2, s[0x0020], 0x00000001;
	add.u32 $r2, $r2, -$r9;
	add.u32 $r10, $r2, 0xfffffffe;
	bra l0x000009b8;
	l0x000009a0: add.u32 $r10, -$r9, 0x00000000;
	set.lt.s32.s32 $p2/$o127, $r9, $r124;
	@$p2.equ mov.u32 $r10, $r9;
	l0x000009b8: nop;
	add.u32 $r3, $r7, 0x00000003;
	mov.u32 $r2, s[0x0020];
	mul.wide.u16 $r9, $r2.lo, $r3.hi;
	mad.wide.u16 $r9, $r2.hi, $r3.lo, $r9;
	shl.u32 $r9, $r9, 0x00000010;
	mad.wide.u16 $r2, $r2.lo, $r3.lo, $r9;
	add.half.u32 $r9, $r10, $r2;
	add.half.u32 $r2, $r11, $r10;
	mov.half.u32 $r3, s[0x0020];
	add.half.u32 $r22, -s[0x0020], $r9;
	bra l0x00000cb8;
	l0x00000a08: ssy 0x00000a50;
	@$p2.eq bra l0x00000a38;
	shl.u32 $r2, s[0x0020], 0x00000001;
	add.u32 $r2, $r2, -$r9;
	add.u32 $r10, $r2, 0xfffffffe;
	bra l0x00000a50;
	l0x00000a38: add.u32 $r10, -$r9, 0x00000000;
	set.lt.s32.s32 $p2/$o127, $r9, $r124;
	@$p2.equ mov.u32 $r10, $r9;
	l0x00000a50: mov.u32 $r3, s[0x0020];
	add.u32 $r9, $r7, 0xfffffffc;
	mul.wide.u16 $r2, $r9.lo, $r3.hi;
	mad.wide.u16 $r2, $r9.hi, $r3.lo, $r2;
	shl.u32 $r12, $r2, 0x00000010;
	add.u32 $r2, $r11, $r10;
	mad.wide.u16 $r12, $r9.lo, $r3.lo, $r12;
	mov.half.u32 $r3, s[0x0020];
	add.half.u32 $r9, $r10, $r12;
	set.ne.s32.s32 $p2/$o127, $r12, $r11;
	@$p2.equ shl.u32 $r3, s[0x0020], 0x00000001;
	@$p2.equ add.u32 $r9, $r9, -$r3;
	@$p2.equ add.u32 $r3, -s[0x0020], constant1_ZN8dwt_cuda12fdwt97KernelILi128ELi6EEEvPKfPfiii[0x0038];
	shl.u32 $r10, $r9, 0x00000002;
	add.u32 $r10, s[0x0010], $r10;
	ld.global.u32 $r10, [$r10];
	add.u32 $r9, $r9, $r3;
	shl.b32 $ofs1, $r23, 0x0;
	mov.u32 s[$ofs1+0x002c], $r10;
	set.ne.s32.s32 $p2/$o127, $r2, $r9;
	@$p2.equ shl.u32 $r10, $r3, 0x00000001;
	@$p2.equ add.u32 $r9, $r9, -$r10;
	@$p2.equ add.u32 $r3, -$r3, constant1_ZN8dwt_cuda12fdwt97KernelILi128ELi6EEEvPKfPfiii[0x0038];
	shl.u32 $r10, $r9, 0x00000002;
	add.u32 $r10, s[0x0010], $r10;
	ld.global.u32 $r10, [$r10];
	add.u32 $r9, $r9, $r3;
	mov.u32 s[$ofs1+0x013c], $r10;
	set.ne.s32.s32 $p2/$o127, $r2, $r9;
	@$p2.equ shl.u32 $r10, $r3, 0x00000001;
	@$p2.equ add.u32 $r9, $r9, -$r10;
	@$p2.equ add.u32 $r3, -$r3, constant1_ZN8dwt_cuda12fdwt97KernelILi128ELi6EEEvPKfPfiii[0x0038];
	shl.u32 $r10, $r9, 0x00000002;
	add.u32 $r10, s[0x0010], $r10;
	ld.global.u32 $r10, [$r10];
	add.u32 $r9, $r9, $r3;
	mov.u32 s[$ofs1+0x024c], $r10;
	set.ne.s32.s32 $p2/$o127, $r2, $r9;
	@$p2.equ shl.u32 $r10, $r3, 0x00000001;
	@$p2.equ add.u32 $r9, $r9, -$r10;
	@$p2.equ add.u32 $r3, -$r3, constant1_ZN8dwt_cuda12fdwt97KernelILi128ELi6EEEvPKfPfiii[0x0038];
	shl.u32 $r10, $r9, 0x00000002;
	add.u32 $r10, s[0x0010], $r10;
	ld.global.u32 $r10, [$r10];
	add.u32 $r9, $r9, $r3;
	mov.u32 s[$ofs1+0x035c], $r10;
	set.ne.s32.s32 $p2/$o127, $r2, $r9;
	@$p2.equ shl.u32 $r10, $r3, 0x00000001;
	@$p2.equ add.u32 $r9, $r9, -$r10;
	@$p2.equ add.u32 $r3, -$r3, constant1_ZN8dwt_cuda12fdwt97KernelILi128ELi6EEEvPKfPfiii[0x0038];
	shl.u32 $r10, $r9, 0x00000002;
	add.u32 $r10, s[0x0010], $r10;
	ld.global.u32 $r10, [$r10];
	add.u32 $r9, $r9, $r3;
	mov.u32 s[$ofs1+0x046c], $r10;
	set.ne.s32.s32 $p2/$o127, $r2, $r9;
	@$p2.equ shl.u32 $r10, $r3, 0x00000001;
	@$p2.equ add.u32 $r9, $r9, -$r10;
	@$p2.equ add.u32 $r3, -$r3, constant1_ZN8dwt_cuda12fdwt97KernelILi128ELi6EEEvPKfPfiii[0x0038];
	shl.u32 $r10, $r9, 0x00000002;
	add.u32 $r10, s[0x0010], $r10;
	ld.global.u32 $r10, [$r10];
	add.u32 $r22, $r9, $r3;
	mov.u32 s[$ofs1+0x057c], $r10;
	set.ne.s32.s32 $p2/$o127, $r2, $r22;
	@$p2.equ shl.u32 $r9, $r3, 0x00000001;
	@$p2.equ add.u32 $r22, $r22, -$r9;
	@$p2.equ add.u32 $r3, -$r3, constant1_ZN8dwt_cuda12fdwt97KernelILi128ELi6EEEvPKfPfiii[0x0038];
	shl.u32 $r9, $r22, 0x00000002;
	add.u32 $r9, s[0x0010], $r9;
	ld.global.u32 $r9, [$r9];
	mov.u32 s[$ofs1+0x068c], $r9;
	bra l0x00000cb8;
	l0x00000c90: shl.b32 $ofs1, $r124, 0x00000002;
	mov.u32 $r23, $ofs1;
	mov.u32 $r22, $r124;
	mov.u32 $r3, $r124;
	mov.u32 $r2, $r124;
	l0x00000cb8: nop;
	bar.sync 0x00000000;
	shl.b32 $ofs2, $r17, 0x00000002;
	add.u32 $ofs1, $ofs2, 0x00000e0c;
	mov.half.u32 $r9, s[$ofs2+0x0030];
	mov.half.u32 $r10, s[$ofs1+0x0000];
	add.f32 $r9, s[$ofs2+0x002c], $r9;
	mad.f32 $r10, $r9, 0xbfcb0673, $r10;
	mov.u32 s[$ofs2+0x0e0c], $r10;
	add.u32 $ofs1, $ofs2, 0x0000022c;
	mov.half.u32 $r9, s[$ofs1+0x0004];
	add.half.f32 $r10, s[$ofs1+0x0000], $r9;
	add.u32 $ofs1, $ofs2, 0x0000100c;
	mov.u32 $r9, s[$ofs1+0x0000];
	mad.f32 $r9, $r10, 0xbfcb0673, $r9;
	mov.u32 s[$ofs2+0x100c], $r9;
	add.u32 $ofs1, $ofs2, 0x0000042c;
	mov.half.u32 $r9, s[$ofs1+0x0004];
	add.half.f32 $r10, s[$ofs1+0x0000], $r9;
	add.u32 $ofs1, $ofs2, 0x0000120c;
	mov.u32 $r9, s[$ofs1+0x0000];
	mad.f32 $r9, $r10, 0xbfcb0673, $r9;
	mov.u32 s[$ofs2+0x120c], $r9;
	ssy 0x00000da0;
	@$p1.eq bra l0x00000da0;
	shl.b32 $ofs2, $r17, 0x00000002;
	add.u32 $ofs1, $ofs2, 0x0000062c;
	mov.half.u32 $r9, s[$ofs1+0x0004];
	add.half.f32 $r10, s[$ofs1+0x0000], $r9;
	add.u32 $ofs1, $ofs2, 0x0000140c;
	mov.u32 $r9, s[$ofs1+0x0000];
	mad.f32 $r9, $r10, 0xbfcb0673, $r9;
	mov.u32 s[$ofs2+0x140c], $r9;
	l0x00000da0: nop;
	bar.sync 0x00000000;
	shl.b32 $ofs2, $r17, 0x00000002;
	add.u32 $ofs1, $ofs2, 0x00000e0c;
	mov.half.u32 $r9, s[$ofs1+0x0004];
	mov.half.u32 $r10, s[$ofs2+0x0030];
	add.f32 $r9, s[$ofs1+0x0000], $r9;
	mad.f32 $r10, $r9, 0xbd5901ae, $r10;
	mov.u32 s[$ofs2+0x0030], $r10;
	add.u32 $ofs1, $ofs2, 0x0000100c;
	mov.half.u32 $r9, s[$ofs1+0x0004];
	add.half.f32 $r10, s[$ofs1+0x0000], $r9;
	add.u32 $ofs1, $ofs2, 0x00000230;
	mov.u32 $r9, s[$ofs1+0x0000];
	mad.f32 $r9, $r10, 0xbd5901ae, $r9;
	mov.u32 s[$ofs2+0x0230], $r9;
	add.u32 $ofs1, $ofs2, 0x0000120c;
	mov.half.u32 $r9, s[$ofs1+0x0004];
	add.half.f32 $r10, s[$ofs1+0x0000], $r9;
	add.u32 $ofs1, $ofs2, 0x00000430;
	mov.u32 $r9, s[$ofs1+0x0000];
	mad.f32 $r9, $r10, 0xbd5901ae, $r9;
	mov.u32 s[$ofs2+0x0430], $r9;
	ssy 0x00000e88;
	@$p1.eq bra l0x00000e88;
	shl.b32 $ofs2, $r17, 0x00000002;
	add.u32 $ofs1, $ofs2, 0x0000140c;
	mov.half.u32 $r9, s[$ofs1+0x0004];
	add.half.f32 $r10, s[$ofs1+0x0000], $r9;
	add.u32 $ofs1, $ofs2, 0x00000630;
	mov.u32 $r9, s[$ofs1+0x0000];
	mad.f32 $r9, $r10, 0xbd5901ae, $r9;
	mov.u32 s[$ofs2+0x0630], $r9;
	l0x00000e88: nop;
	bar.sync 0x00000000;
	shl.b32 $ofs2, $r17, 0x00000002;
	add.u32 $ofs1, $ofs2, 0x00000e0c;
	mov.half.u32 $r9, s[$ofs2+0x0030];
	mov.half.u32 $r10, s[$ofs1+0x0000];
	add.f32 $r9, s[$ofs2+0x002c], $r9;
	mad.f32 $r10, $r9, 0x3f620676, $r10;
	mov.u32 s[$ofs2+0x0e0c], $r10;
	add.u32 $ofs1, $ofs2, 0x0000022c;
	mov.half.u32 $r9, s[$ofs1+0x0004];
	add.half.f32 $r10, s[$ofs1+0x0000], $r9;
	add.u32 $ofs1, $ofs2, 0x0000100c;
	mov.u32 $r9, s[$ofs1+0x0000];
	mad.f32 $r9, $r10, 0x3f620676, $r9;
	mov.u32 s[$ofs2+0x100c], $r9;
	add.u32 $ofs1, $ofs2, 0x0000042c;
	mov.half.u32 $r9, s[$ofs1+0x0004];
	add.half.f32 $r10, s[$ofs1+0x0000], $r9;
	add.u32 $ofs1, $ofs2, 0x0000120c;
	mov.u32 $r9, s[$ofs1+0x0000];
	mad.f32 $r9, $r10, 0x3f620676, $r9;
	mov.u32 s[$ofs2+0x120c], $r9;
	ssy 0x00000f70;
	@$p1.eq bra l0x00000f70;
	shl.b32 $ofs2, $r17, 0x00000002;
	add.u32 $ofs1, $ofs2, 0x0000062c;
	mov.half.u32 $r9, s[$ofs1+0x0004];
	add.half.f32 $r10, s[$ofs1+0x0000], $r9;
	add.u32 $ofs1, $ofs2, 0x0000140c;
	mov.u32 $r9, s[$ofs1+0x0000];
	mad.f32 $r9, $r10, 0x3f620676, $r9;
	mov.u32 s[$ofs2+0x140c], $r9;
	l0x00000f70: nop;
	bar.sync 0x00000000;
	shl.b32 $ofs2, $r17, 0x00000002;
	add.u32 $ofs1, $ofs2, 0x00000e0c;
	mov.half.u32 $r9, s[$ofs1+0x0004];
	mov.half.u32 $r10, s[$ofs2+0x0030];
	add.f32 $r9, s[$ofs1+0x0000], $r9;
	mad.f32 $r10, $r9, 0x3ee31355, $r10;
	mov.u32 s[$ofs2+0x0030], $r10;
	add.u32 $ofs1, $ofs2, 0x0000100c;
	mov.half.u32 $r9, s[$ofs1+0x0004];
	add.half.f32 $r10, s[$ofs1+0x0000], $r9;
	add.u32 $ofs1, $ofs2, 0x00000230;
	mov.u32 $r9, s[$ofs1+0x0000];
	mad.f32 $r9, $r10, 0x3ee31355, $r9;
	mov.u32 s[$ofs2+0x0230], $r9;
	add.u32 $ofs1, $ofs2, 0x0000120c;
	mov.half.u32 $r9, s[$ofs1+0x0004];
	add.half.f32 $r10, s[$ofs1+0x0000], $r9;
	add.u32 $ofs1, $ofs2, 0x00000430;
	mov.u32 $r9, s[$ofs1+0x0000];
	mad.f32 $r9, $r10, 0x3ee31355, $r9;
	mov.u32 s[$ofs2+0x0430], $r9;
	ssy 0x00001058;
	@$p1.eq bra l0x00001058;
	shl.b32 $ofs2, $r17, 0x00000002;
	add.u32 $ofs1, $ofs2, 0x0000140c;
	mov.half.u32 $r9, s[$ofs1+0x0004];
	add.half.f32 $r10, s[$ofs1+0x0000], $r9;
	add.u32 $ofs1, $ofs2, 0x00000630;
	mov.u32 $r9, s[$ofs1+0x0000];
	mad.f32 $r9, $r10, 0x3ee31355, $r9;
	mov.u32 s[$ofs2+0x0630], $r9;
	l0x00001058: nop;
	bar.sync 0x00000000;
	shl.b32 $ofs2, $r17, 0x00000002;
	mul.f32 $r9, s[$ofs2+0x002c], 0x3f5019c3;
	mov.u32 s[$ofs2+0x002c], $r9;
	add.u32 $ofs1, $ofs2, 0x00000e0c;
	mul.f32 $r9, s[$ofs1+0x0000], 0x3f9d7658;
	mov.u32 s[$ofs2+0x0e0c], $r9;
	add.u32 $ofs1, $ofs2, 0x0000022c;
	mul.f32 $r9, s[$ofs1+0x0000], 0x3f5019c3;
	mov.u32 s[$ofs2+0x022c], $r9;
	add.u32 $ofs1, $ofs2, 0x0000100c;
	mul.f32 $r9, s[$ofs1+0x0000], 0x3f9d7658;
	mov.u32 s[$ofs2+0x100c], $r9;
	add.u32 $ofs1, $ofs2, 0x0000042c;
	mul.f32 $r9, s[$ofs1+0x0000], 0x3f5019c3;
	mov.u32 s[$ofs2+0x042c], $r9;
	add.u32 $ofs1, $ofs2, 0x0000120c;
	mul.f32 $r9, s[$ofs1+0x0000], 0x3f9d7658;
	mov.u32 s[$ofs2+0x120c], $r9;
	ssy 0x00001148;
	mov.pred $p2, $r6;
	@$p2.eq bra l0x00001148;
	shl.b32 $ofs2, $r17, 0x00000002;
	add.u32 $ofs1, $ofs2, 0x0000062c;
	mul.f32 $r6, s[$ofs1+0x0000], 0x3f5019c3;
	mov.u32 s[$ofs2+0x062c], $r6;
	add.u32 $ofs1, $ofs2, 0x0000140c;
	mul.f32 $r6, s[$ofs1+0x0000], 0x3f9d7658;
	mov.u32 s[$ofs2+0x140c], $r6;
	l0x00001148: nop;
	bar.sync 0x00000000;
	ssy 0x000013b8;
	mov.pred $p3, $r8;
	@$p3.eq bra l0x00001398;
	shr.s32 $r8, s[0x0024], 0x0000001f;
	shr.s32 $r6, $r5, 0x0000001f;
	and.b32 $r9, $r8, constant1_ZN8dwt_cuda12fdwt97KernelILi128ELi6EEEvPKfPfiii[0x0000];
	shr.s32 $r8, s[0x0020], 0x0000001f;
	and.b32 $r6, $r6, constant1_ZN8dwt_cuda12fdwt97KernelILi128ELi6EEEvPKfPfiii[0x0000];
	add.u32 $r10, s[0x0024], $r9;
	and.b32 $p2|$o127, $r5, constant1_ZN8dwt_cuda12fdwt97KernelILi128ELi6EEEvPKfPfiii[0x0000];
	and.b32 $r8, $r8, constant1_ZN8dwt_cuda12fdwt97KernelILi128ELi6EEEvPKfPfiii[0x0000];
	add.u32 $r5, $r6, $r5;
	and.b32 $r6, $r10, constant1_ZN8dwt_cuda12fdwt97KernelILi128ELi6EEEvPKfPfiii[0x002c];
	ssy 0x000012d8;
	add.u32 $r9, s[0x0020], $r8;
	shr.s32 $r8, $r5, 0x00000001;
	add.u32 $r5, s[0x0024], -$r6;
	shr.s32 $r6, $r10, 0x00000001;
	shr.s32 $r9, $r9, 0x00000001;
	set.ne.s32.s32 $p1/$o127, $r5, $r124;
	@$p2.eq bra l0x00001290;
	shr.s32 $r5, s[0x0020], 0x0000001f;
	and.b32 $r5, $r5, constant1_ZN8dwt_cuda12fdwt97KernelILi128ELi6EEEvPKfPfiii[0x0000];
	add.u32 $r5, s[0x0020], $r5;
	and.b32 $r10, $r5, constant1_ZN8dwt_cuda12fdwt97KernelILi128ELi6EEEvPKfPfiii[0x002c];
	mov.u32 $r5, $r9;
	add.u32 $p2|$o127, s[0x0020], -$r10;
	@$p2.neu add.u32 $r9, $r9, constant1_ZN8dwt_cuda12fdwt97KernelILi128ELi6EEEvPKfPfiii[0x0000];
	@$p1.neu add.u32 $r10, $r6, constant1_ZN8dwt_cuda12fdwt97KernelILi128ELi6EEEvPKfPfiii[0x0000];
	@$p1.eq mov.u32 $r10, $r6;
	mul.wide.u16 $r12, $r9.lo, $r10.hi;
	mad.wide.u16 $r12, $r9.hi, $r10.lo, $r12;
	shr.s32 $r13, $r11, 0x0000001f;
	shl.u32 $r12, $r12, 0x00000010;
	and.b32 $r13, $r13, constant1_ZN8dwt_cuda12fdwt97KernelILi128ELi6EEEvPKfPfiii[0x0000];
	mad.wide.u16 $r9, $r9.lo, $r10.lo, $r12;
	add.half.u32 $r10, $r13, $r11;
	add.half.u32 $r8, $r9, $r8;
	shr.s32 $r16, $r10, 0x00000001;
	bra l0x000012d8;
	l0x00001290: and.b32 $r5, s[0x0020], constant1_ZN8dwt_cuda12fdwt97KernelILi128ELi6EEEvPKfPfiii[0x0000];
	add.u32 $r5, $r9, $r5;
	@$p1.neu add.u32 $r9, $r6, constant1_ZN8dwt_cuda12fdwt97KernelILi128ELi6EEEvPKfPfiii[0x0000];
	@$p1.eq mov.u32 $r9, $r6;
	mov.u32 $r10, s[0x0020];
	mul.wide.u16 $r11, $r9.lo, $r10.hi;
	mad.wide.u16 $r11, $r9.hi, $r10.lo, $r11;
	shl.u32 $r11, $r11, 0x00000010;
	mad.wide.u16 $r16, $r9.lo, $r10.lo, $r11;
	l0x000012d8: shr.s32 $r9, $r7, 0x0000001f;
	and.b32 $r9, $r9, constant1_ZN8dwt_cuda12fdwt97KernelILi128ELi6EEEvPKfPfiii[0x0000];
	add.u32 $r11, $r9, $r7;
	and.b32 $r9, s[0x0024], constant1_ZN8dwt_cuda12fdwt97KernelILi128ELi6EEEvPKfPfiii[0x0000];
	and.b32 $r10, $r7, constant1_ZN8dwt_cuda12fdwt97KernelILi128ELi6EEEvPKfPfiii[0x0000];
	shr.s32 $r7, $r11, 0x00000001;
	mul.half.lo.u16 $r11, $r6.lo, $r5.hi;
	mul.half.lo.u16 $r12, $r16.lo, $r9.hi;
	mul.half.lo.u16 $r13, $r5.lo, $r7.hi;
	mul.half.lo.u16 $r14, $r16.lo, $r10.hi;
	mad.wide.u16 $r11, $r6.hi, $r5.lo, $r11;
	mad.wide.u16 $r12, $r16.hi, $r9.lo, $r12;
	mad.wide.u16 $r13, $r5.hi, $r7.lo, $r13;
	mad.wide.u16 $r14, $r16.hi, $r10.lo, $r14;
	shl.u32 $r11, $r11, 0x00000010;
	shl.u32 $r12, $r12, 0x00000010;
	shl.u32 $r13, $r13, 0x00000010;
	shl.u32 $r14, $r14, 0x00000010;
	mad.wide.u16 $r6, $r6.lo, $r5.lo, $r11;
	mad.wide.u16 $r9, $r16.lo, $r9.lo, $r12;
	mad.wide.u16 $r7, $r5.lo, $r7.lo, $r13;
	mad.wide.u16 $r10, $r16.lo, $r10.lo, $r14;
	add.half.u32 $r6, $r6, $r9;
	add.half.u32 $r7, $r7, $r10;
	add.half.u32 $r24, $r8, $r6;
	add.half.u32 $r25, $r8, $r7;
	add.u32 $r26, $r5, -$r16;
	bra l0x000013b8;
	l0x00001398: mov.u32 $r25, $r124;
	mov.u32 $r26, $r124;
	mov.u32 $r24, $r124;
	mov.u32 $r16, $r124;
	l0x000013b8: set.gt.s32.s32 $p1/$o127, s[0x0028], $r124;
	@$p1.eq retp;
	add.u32 $r6, $r4, 0x00000004;
	mov.u32 $r5, 0x00000378;
	and.b32 $r4, $r6, constant1_ZN8dwt_cuda12fdwt97KernelILi128ELi6EEEvPKfPfiii[0x0000];
	mul.wide.u16 $r8, $r4.lo, $r5.hi;
	shr.s32 $r7, $r6, 0x0000001f;
	mad.wide.u16 $r8, $r4.hi, $r5.lo, $r8;
	and.b32 $r7, $r7, constant1_ZN8dwt_cuda12fdwt97KernelILi128ELi6EEEvPKfPfiii[0x0000];
	shl.u32 $r8, $r8, 0x00000010;
	add.u32 $r6, $r6, $r7;
	mad.wide.u16 $r5, $r4.lo, $r5.lo, $r8;
	shr.s32 $r4, $r6, 0x00000001;
	add.u32 $r4, $r5, $r4;
	shl.b32 $ofs2, $r4, 0x00000002;
	set.lt.u32.u32 $p1/$o127, $r17, constant1_ZN8dwt_cuda12fdwt97KernelILi128ELi6EEEvPKfPfiii[0x0030];
	set.lt.u32.u32 $p2/$o127, $r17, constant1_ZN8dwt_cuda12fdwt97KernelILi128ELi6EEEvPKfPfiii[0x0034];
	@$p2 mov.u32 $r28, $p2;
	mov.u32 $r27, $r124;
	l0x00001450: add.u32 $r4, $r1, $r21;
	set.ne.s32.s32 $p2/$o127, $r0, $r4;
	@$p2.equ shl.u32 $r5, $r1, 0x00000001;
	@$p2.equ add.u32 $r4, $r4, -$r5;
	@$p2.equ add.u32 $r1, -$r1, constant1_ZN8dwt_cuda12fdwt97KernelILi128ELi6EEEvPKfPfiii[0x0038];
	shl.u32 $r5, $r4, 0x00000002;
	add.u32 $r5, s[0x0010], $r5;
	ld.global.u32 $r5, [$r5];
	add.u32 $r4, $r4, $r1;
	mov.u32 s[$ofs3+0x079c], $r5;
	set.ne.s32.s32 $p2/$o127, $r0, $r4;
	@$p2.equ shl.u32 $r5, $r1, 0x00000001;
	@$p2.equ add.u32 $r4, $r4, -$r5;
	@$p2.equ add.u32 $r1, -$r1, constant1_ZN8dwt_cuda12fdwt97KernelILi128ELi6EEEvPKfPfiii[0x0038];
	shl.u32 $r5, $r4, 0x00000002;
	add.u32 $r5, s[0x0010], $r5;
	ld.global.u32 $r5, [$r5];
	add.u32 $r4, $r4, $r1;
	mov.u32 s[$ofs3+0x08ac], $r5;
	set.ne.s32.s32 $p2/$o127, $r0, $r4;
	@$p2.equ shl.u32 $r5, $r1, 0x00000001;
	@$p2.equ add.u32 $r4, $r4, -$r5;
	@$p2.equ add.u32 $r1, -$r1, constant1_ZN8dwt_cuda12fdwt97KernelILi128ELi6EEEvPKfPfiii[0x0038];
	shl.u32 $r5, $r4, 0x00000002;
	add.u32 $r5, s[0x0010], $r5;
	ld.global.u32 $r5, [$r5];
	add.u32 $r4, $r4, $r1;
	mov.u32 s[$ofs3+0x09bc], $r5;
	set.ne.s32.s32 $p2/$o127, $r0, $r4;
	@$p2.equ shl.u32 $r5, $r1, 0x00000001;
	@$p2.equ add.u32 $r4, $r4, -$r5;
	@$p2.equ add.u32 $r1, -$r1, constant1_ZN8dwt_cuda12fdwt97KernelILi128ELi6EEEvPKfPfiii[0x0038];
	shl.u32 $r5, $r4, 0x00000002;
	add.u32 $r5, s[0x0010], $r5;
	ld.global.u32 $r5, [$r5];
	add.u32 $r4, $r4, $r1;
	mov.u32 s[$ofs3+0x0acc], $r5;
	set.ne.s32.s32 $p2/$o127, $r0, $r4;
	@$p2.equ shl.u32 $r5, $r1, 0x00000001;
	@$p2.equ add.u32 $r4, $r4, -$r5;
	@$p2.equ add.u32 $r1, -$r1, constant1_ZN8dwt_cuda12fdwt97KernelILi128ELi6EEEvPKfPfiii[0x0038];
	shl.u32 $r5, $r4, 0x00000002;
	add.u32 $r5, s[0x0010], $r5;
	ld.global.u32 $r5, [$r5];
	add.u32 $r21, $r4, $r1;
	mov.u32 s[$ofs3+0x0bdc], $r5;
	set.ne.s32.s32 $p2/$o127, $r0, $r21;
	@$p2.equ shl.u32 $r4, $r1, 0x00000001;
	@$p2.equ add.u32 $r21, $r21, -$r4;
	@$p2.equ add.u32 $r1, -$r1, constant1_ZN8dwt_cuda12fdwt97KernelILi128ELi6EEEvPKfPfiii[0x0038];
	shl.u32 $r4, $r21, 0x00000002;
	add.u32 $r4, s[0x0010], $r4;
	ld.global.u32 $r4, [$r4];
	mov.u32 s[$ofs3+0x0cec], $r4;
	ssy 0x000017f0;
	@$p0.eq bra l0x000017f0;
	add.u32 $r4, $r22, $r3;
	set.ne.s32.s32 $p2/$o127, $r4, $r2;
	@$p2.equ shl.u32 $r5, $r3, 0x00000001;
	@$p2.equ add.u32 $r4, $r4, -$r5;
	@$p2.equ add.u32 $r3, -$r3, constant1_ZN8dwt_cuda12fdwt97KernelILi128ELi6EEEvPKfPfiii[0x0038];
	shl.u32 $r5, $r4, 0x00000002;
	add.u32 $r5, s[0x0010], $r5;
	ld.global.u32 $r5, [$r5];
	add.u32 $r4, $r4, $r3;
	shl.b32 $ofs1, $r23, 0x0;
	mov.u32 s[$ofs1+0x079c], $r5;
	set.ne.s32.s32 $p2/$o127, $r4, $r2;
	@$p2.equ shl.u32 $r5, $r3, 0x00000001;
	@$p2.equ add.u32 $r4, $r4, -$r5;
	@$p2.equ add.u32 $r3, -$r3, constant1_ZN8dwt_cuda12fdwt97KernelILi128ELi6EEEvPKfPfiii[0x0038];
	shl.u32 $r5, $r4, 0x00000002;
	add.u32 $r5, s[0x0010], $r5;
	ld.global.u32 $r5, [$r5];
	add.u32 $r4, $r4, $r3;
	shl.b32 $ofs1, $r23, 0x0;
	mov.u32 s[$ofs1+0x08ac], $r5;
	set.ne.s32.s32 $p2/$o127, $r4, $r2;
	@$p2.equ shl.u32 $r5, $r3, 0x00000001;
	@$p2.equ add.u32 $r4, $r4, -$r5;
	@$p2.equ add.u32 $r3, -$r3, constant1_ZN8dwt_cuda12fdwt97KernelILi128ELi6EEEvPKfPfiii[0x0038];
	shl.u32 $r5, $r4, 0x00000002;
	add.u32 $r5, s[0x0010], $r5;
	ld.global.u32 $r5, [$r5];
	add.u32 $r4, $r4, $r3;
	shl.b32 $ofs1, $r23, 0x0;
	mov.u32 s[$ofs1+0x09bc], $r5;
	set.ne.s32.s32 $p2/$o127, $r4, $r2;
	@$p2.equ shl.u32 $r5, $r3, 0x00000001;
	@$p2.equ add.u32 $r4, $r4, -$r5;
	@$p2.equ add.u32 $r3, -$r3, constant1_ZN8dwt_cuda12fdwt97KernelILi128ELi6EEEvPKfPfiii[0x0038];
	shl.u32 $r5, $r4, 0x00000002;
	add.u32 $r5, s[0x0010], $r5;
	ld.global.u32 $r5, [$r5];
	add.u32 $r4, $r4, $r3;
	shl.b32 $ofs1, $r23, 0x0;
	mov.u32 s[$ofs1+0x0acc], $r5;
	set.ne.s32.s32 $p2/$o127, $r4, $r2;
	@$p2.equ shl.u32 $r5, $r3, 0x00000001;
	@$p2.equ add.u32 $r4, $r4, -$r5;
	@$p2.equ add.u32 $r3, -$r3, constant1_ZN8dwt_cuda12fdwt97KernelILi128ELi6EEEvPKfPfiii[0x0038];
	shl.u32 $r5, $r4, 0x00000002;
	add.u32 $r5, s[0x0010], $r5;
	ld.global.u32 $r5, [$r5];
	add.u32 $r22, $r4, $r3;
	shl.b32 $ofs1, $r23, 0x0;
	mov.u32 s[$ofs1+0x0bdc], $r5;
	set.ne.s32.s32 $p2/$o127, $r22, $r2;
	@$p2.equ shl.u32 $r4, $r3, 0x00000001;
	@$p2.equ add.u32 $r22, $r22, -$r4;
	@$p2.equ add.u32 $r3, -$r3, constant1_ZN8dwt_cuda12fdwt97KernelILi128ELi6EEEvPKfPfiii[0x0038];
	shl.u32 $r4, $r22, 0x00000002;
	add.u32 $r4, s[0x0010], $r4;
	ld.global.u32 $r4, [$r4];
	shl.b32 $ofs1, $r23, 0x0;
	mov.u32 s[$ofs1+0x0cec], $r4;
	l0x000017f0: nop;
	bar.sync 0x00000000;
	shl.b32 $ofs4, $r17, 0x00000002;
	add.u32 $ofs1, $ofs4, 0x0000157c;
	mov.u32 $r5, s[$ofs1+0x0000];
	add.u32 $ofs1, $ofs4, 0x0000079c;
	mov.half.u32 $r4, s[$ofs1+0x0004];
	add.half.f32 $r4, s[$ofs1+0x0000], $r4;
	mad.f32 $r5, $r4, 0xbfcb0673, $r5;
	mov.u32 s[$ofs4+0x157c], $r5;
	add.u32 $ofs1, $ofs4, 0x0000177c;
	mov.u32 $r5, s[$ofs1+0x0000];
	add.u32 $ofs1, $ofs4, 0x0000099c;
	mov.half.u32 $r4, s[$ofs1+0x0004];
	add.half.f32 $r4, s[$ofs1+0x0000], $r4;
	mad.f32 $r5, $r4, 0xbfcb0673, $r5;
	mov.u32 s[$ofs4+0x177c], $r5;
	add.u32 $ofs1, $ofs4, 0x0000197c;
	mov.u32 $r5, s[$ofs1+0x0000];
	add.u32 $ofs1, $ofs4, 0x00000b9c;
	mov.half.u32 $r4, s[$ofs1+0x0004];
	add.half.f32 $r4, s[$ofs1+0x0000], $r4;
	mad.f32 $r5, $r4, 0xbfcb0673, $r5;
	mov.u32 s[$ofs4+0x197c], $r5;
	ssy 0x000018e0;
	@$p1.eq bra l0x000018e0;
	shl.b32 $ofs4, $r17, 0x00000002;
	add.u32 $ofs1, $ofs4, 0x00000d9c;
	mov.half.u32 $r4, s[$ofs1+0x0004];
	add.half.f32 $r5, s[$ofs1+0x0000], $r4;
	add.u32 $ofs1, $ofs4, 0x00001b7c;
	mov.u32 $r4, s[$ofs1+0x0000];
	mad.f32 $r4, $r5, 0xbfcb0673, $r4;
	mov.u32 s[$ofs4+0x1b7c], $r4;
	l0x000018e0: nop;
	bar.sync 0x00000000;
	shl.b32 $ofs4, $r17, 0x00000002;
	add.u32 $ofs1, $ofs4, 0x000007a0;
	mov.u32 $r5, s[$ofs1+0x0000];
	add.u32 $ofs1, $ofs4, 0x0000157c;
	mov.half.u32 $r4, s[$ofs1+0x0004];
	add.half.f32 $r4, s[$ofs1+0x0000], $r4;
	mad.f32 $r5, $r4, 0xbd5901ae, $r5;
	mov.u32 s[$ofs4+0x07a0], $r5;
	add.u32 $ofs1, $ofs4, 0x000009a0;
	mov.u32 $r5, s[$ofs1+0x0000];
	add.u32 $ofs1, $ofs4, 0x0000177c;
	mov.half.u32 $r4, s[$ofs1+0x0004];
	add.half.f32 $r4, s[$ofs1+0x0000], $r4;
	mad.f32 $r5, $r4, 0xbd5901ae, $r5;
	mov.u32 s[$ofs4+0x09a0], $r5;
	add.u32 $ofs1, $ofs4, 0x00000ba0;
	mov.u32 $r5, s[$ofs1+0x0000];
	add.u32 $ofs1, $ofs4, 0x0000197c;
	mov.half.u32 $r4, s[$ofs1+0x0004];
	add.half.f32 $r4, s[$ofs1+0x0000], $r4;
	mad.f32 $r5, $r4, 0xbd5901ae, $r5;
	mov.u32 s[$ofs4+0x0ba0], $r5;
	ssy 0x000019d0;
	@$p1.eq bra l0x000019d0;
	shl.b32 $ofs4, $r17, 0x00000002;
	add.u32 $ofs1, $ofs4, 0x00001b7c;
	mov.half.u32 $r4, s[$ofs1+0x0004];
	add.half.f32 $r5, s[$ofs1+0x0000], $r4;
	add.u32 $ofs1, $ofs4, 0x00000da0;
	mov.u32 $r4, s[$ofs1+0x0000];
	mad.f32 $r4, $r5, 0xbd5901ae, $r4;
	mov.u32 s[$ofs4+0x0da0], $r4;
	l0x000019d0: nop;
	bar.sync 0x00000000;
	shl.b32 $ofs4, $r17, 0x00000002;
	add.u32 $ofs1, $ofs4, 0x0000157c;
	mov.u32 $r5, s[$ofs1+0x0000];
	add.u32 $ofs1, $ofs4, 0x0000079c;
	mov.half.u32 $r4, s[$ofs1+0x0004];
	add.half.f32 $r4, s[$ofs1+0x0000], $r4;
	mad.f32 $r5, $r4, 0x3f620676, $r5;
	mov.u32 s[$ofs4+0x157c], $r5;
	add.u32 $ofs1, $ofs4, 0x0000177c;
	mov.u32 $r5, s[$ofs1+0x0000];
	add.u32 $ofs1, $ofs4, 0x0000099c;
	mov.half.u32 $r4, s[$ofs1+0x0004];
	add.half.f32 $r4, s[$ofs1+0x0000], $r4;
	mad.f32 $r5, $r4, 0x3f620676, $r5;
	mov.u32 s[$ofs4+0x177c], $r5;
	add.u32 $ofs1, $ofs4, 0x0000197c;
	mov.u32 $r5, s[$ofs1+0x0000];
	add.u32 $ofs1, $ofs4, 0x00000b9c;
	mov.half.u32 $r4, s[$ofs1+0x0004];
	add.half.f32 $r4, s[$ofs1+0x0000], $r4;
	mad.f32 $r5, $r4, 0x3f620676, $r5;
	mov.u32 s[$ofs4+0x197c], $r5;
	ssy 0x00001ac0;
	@$p1.eq bra l0x00001ac0;
	shl.b32 $ofs4, $r17, 0x00000002;
	add.u32 $ofs1, $ofs4, 0x00000d9c;
	mov.half.u32 $r4, s[$ofs1+0x0004];
	add.half.f32 $r5, s[$ofs1+0x0000], $r4;
	add.u32 $ofs1, $ofs4, 0x00001b7c;
	mov.u32 $r4, s[$ofs1+0x0000];
	mad.f32 $r4, $r5, 0x3f620676, $r4;
	mov.u32 s[$ofs4+0x1b7c], $r4;
	l0x00001ac0: nop;
	bar.sync 0x00000000;
	shl.b32 $ofs4, $r17, 0x00000002;
	add.u32 $ofs1, $ofs4, 0x000007a0;
	mov.u32 $r5, s[$ofs1+0x0000];
	add.u32 $ofs1, $ofs4, 0x0000157c;
	mov.half.u32 $r4, s[$ofs1+0x0004];
	add.half.f32 $r4, s[$ofs1+0x0000], $r4;
	mad.f32 $r5, $r4, 0x3ee31355, $r5;
	mov.u32 s[$ofs4+0x07a0], $r5;
	add.u32 $ofs1, $ofs4, 0x000009a0;
	mov.u32 $r5, s[$ofs1+0x0000];
	add.u32 $ofs1, $ofs4, 0x0000177c;
	mov.half.u32 $r4, s[$ofs1+0x0004];
	add.half.f32 $r4, s[$ofs1+0x0000], $r4;
	mad.f32 $r5, $r4, 0x3ee31355, $r5;
	mov.u32 s[$ofs4+0x09a0], $r5;
	add.u32 $ofs1, $ofs4, 0x00000ba0;
	mov.u32 $r5, s[$ofs1+0x0000];
	add.u32 $ofs1, $ofs4, 0x0000197c;
	mov.half.u32 $r4, s[$ofs1+0x0004];
	add.half.f32 $r4, s[$ofs1+0x0000], $r4;
	mad.f32 $r5, $r4, 0x3ee31355, $r5;
	mov.u32 s[$ofs4+0x0ba0], $r5;
	ssy 0x00001bb0;
	@$p1.eq bra l0x00001bb0;
	shl.b32 $ofs4, $r17, 0x00000002;
	add.u32 $ofs1, $ofs4, 0x00001b7c;
	mov.half.u32 $r4, s[$ofs1+0x0004];
	add.half.f32 $r5, s[$ofs1+0x0000], $r4;
	add.u32 $ofs1, $ofs4, 0x00000da0;
	mov.u32 $r4, s[$ofs1+0x0000];
	mad.f32 $r4, $r5, 0x3ee31355, $r4;
	mov.u32 s[$ofs4+0x0da0], $r4;
	l0x00001bb0: nop;
	bar.sync 0x00000000;
	shl.b32 $ofs4, $r17, 0x00000002;
	add.u32 $ofs1, $ofs4, 0x0000079c;
	mul.f32 $r4, s[$ofs1+0x0000], 0x3f5019c3;
	mov.u32 s[$ofs4+0x079c], $r4;
	add.u32 $ofs1, $ofs4, 0x0000157c;
	mul.f32 $r4, s[$ofs1+0x0000], 0x3f9d7658;
	mov.u32 s[$ofs4+0x157c], $r4;
	add.u32 $ofs1, $ofs4, 0x0000099c;
	mul.f32 $r4, s[$ofs1+0x0000], 0x3f5019c3;
	mov.u32 s[$ofs4+0x099c], $r4;
	add.u32 $ofs1, $ofs4, 0x0000177c;
	mul.f32 $r4, s[$ofs1+0x0000], 0x3f9d7658;
	mov.u32 s[$ofs4+0x177c], $r4;
	add.u32 $ofs1, $ofs4, 0x00000b9c;
	mul.f32 $r4, s[$ofs1+0x0000], 0x3f5019c3;
	mov.u32 s[$ofs4+0x0b9c], $r4;
	add.u32 $ofs1, $ofs4, 0x0000197c;
	mul.f32 $r4, s[$ofs1+0x0000], 0x3f9d7658;
	mov.u32 s[$ofs4+0x197c], $r4;
	ssy 0x00001ca8;
	mov.pred $p2, $r28;
	@$p2.eq bra l0x00001ca8;
	shl.b32 $ofs4, $r17, 0x00000002;
	add.u32 $ofs1, $ofs4, 0x00000d9c;
	mul.f32 $r4, s[$ofs1+0x0000], 0x3f5019c3;
	mov.u32 s[$ofs4+0x0d9c], $r4;
	add.u32 $ofs1, $ofs4, 0x00001b7c;
	mul.f32 $r4, s[$ofs1+0x0000], 0x3f9d7658;
	mov.u32 s[$ofs4+0x1b7c], $r4;
	l0x00001ca8: nop;
	bar.sync 0x00000000;
	add.u32 $ofs1, $ofs2, 0x0000013c;
	mov.u32 $r12, s[$ofs1+0x0000];
	add.u32 $ofs1, $ofs2, 0x0000079c;
	mov.u32 $r5, s[$ofs1+0x0000];
	st.local.u32 [0x0010], $r5;
	mov.u32 $r11, s[$ofs1+0x0000];
	add.u32 $ofs1, $ofs2, 0x000009bc;
	mov.u32 $r7, s[$ofs1+0x0000];
	st.local.u32 [0x000c], $r7;
	mov.u32 $r9, s[$ofs1+0x0000];
	add.u32 $ofs1, $ofs2, 0x00000bdc;
	mov.u32 $r13, s[$ofs1+0x0000];
	st.local.u32 [0x0008], $r13;
	mov.u32 $r20, s[$ofs1+0x0000];
	add.u32 $ofs1, $ofs2, 0x0000024c;
	mov.half.u32 $r13, s[$ofs1+0x0000];
	mov.half.u32 $r18, s[$ofs1+0x0000];
	mov.u32 $r14, s[$ofs1+0x0000];
	add.u32 $ofs1, $ofs2, 0x000008ac;
	add.u32 $ofs4, $ofs2, 0x0000068c;
	mov.u32 $r4, s[$ofs1+0x0000];
	mov.u32 $r8, s[$ofs4+0x0000];
	mov.u32 $r19, s[$ofs4+0x0000];
	mov.u32 $r7, s[$ofs4+0x0000];
	add.f32 $r10, s[$ofs4+0x0000], $r4;
	add.u32 $ofs4, $ofs2, 0x00000acc;
	mov.u32 $r4, s[$ofs4+0x0000];
	mov.half.u32 $r6, s[$ofs1+0x0000];
	mov.half.u32 $r5, s[$ofs1+0x0000];
	add.half.f32 $r15, s[$ofs1+0x0000], $r4;
	add.half.f32 $r4, s[$ofs2+0x002c], $r13;
	add.u32 $ofs1, $ofs2, 0x00000cec;
	mad.f32 $r12, $r4, 0xbfcb0673, $r12;
	mov.u32 $r4, s[$ofs1+0x0000];
	add.f32 $r4, s[$ofs4+0x0000], $r4;
	mad.f32 $r9, $r15, 0xbfcb0673, $r9;
	mad.f32 $r20, $r4, 0xbfcb0673, $r20;
	mov.u32 $r4, s[$ofs4+0x0000];
	mov.u32 $r13, s[$ofs4+0x0000];
	mad.f32 $r11, $r10, 0xbfcb0673, $r11;
	add.f32 $r10, $r9, $r20;
	mad.f32 $r13, $r10, 0xbd5901ae, $r13;
	mov.half.u32 $r15, s[$ofs2+0x002c];
	mov.half.u32 $r10, s[$ofs1+0x0000];
	add.f32 $r30, s[$ofs1+0x0000], $r13;
	add.u32 $ofs4, $ofs2, 0x0000046c;
	mov.u32 s[$ofs2+0x013c], $r12;
	mov.u32 $r29, s[$ofs4+0x0000];
	add.f32 $r29, $r18, $r29;
	add.u32 $ofs1, $ofs2, 0x0000035c;
	mov.u32 $r18, s[$ofs1+0x0000];
	mad.f32 $r18, $r29, 0xbfcb0673, $r18;
	mov.u32 $r29, s[$ofs4+0x0000];
	add.f32 $r31, $r19, $r29;
	mov.u32 $r29, s[$ofs4+0x0000];
	add.u32 $ofs1, $ofs2, 0x0000057c;
	mov.u32 s[$ofs2+0x035c], $r18;
	mov.u32 $r19, s[$ofs1+0x0000];
	mad.f32 $r19, $r31, 0xbfcb0673, $r19;
	mov.u32 s[$ofs2+0x057c], $r19;
	mov.u32 s[$ofs2+0x079c], $r11;
	mov.u32 s[$ofs2+0x09bc], $r9;
	mov.u32 s[$ofs2+0x0bdc], $r20;
	mad.f32 $r20, $r30, 0x3f620676, $r20;
	add.f32 $r30, $r12, $r18;
	mad.f32 $r14, $r30, 0xbd5901ae, $r14;
	add.f32 $r15, $r15, $r14;
	mad.f32 $r15, $r15, constant1_ZN8dwt_cuda12fdwt97KernelILi128ELi6EEEvPKfPfiii[0x0024], $r12;
	add.f32 $r12, $r18, $r19;
	mad.f32 $r12, $r12, constant1_ZN8dwt_cuda12fdwt97KernelILi128ELi6EEEvPKfPfiii[0x0020], $r29;
	add.f32 $r29, $r19, $r11;
	mad.f32 $r7, $r29, 0xbd5901ae, $r7;
	add.f32 $r29, $r11, $r9;
	mad.f32 $r5, $r29, 0xbd5901ae, $r5;
	add.f32 $r29, $r14, $r12;
	mad.f32 $r18, $r29, 0x3f620676, $r18;
	mov.u32 s[$ofs2+0x024c], $r14;
	mov.u32 s[$ofs2+0x046c], $r12;
	mov.u32 s[$ofs2+0x068c], $r7;
	mov.u32 s[$ofs2+0x08ac], $r5;
	mov.u32 s[$ofs2+0x0acc], $r13;
	mov.u32 s[$ofs2+0x013c], $r15;
	add.f32 $r15, $r15, $r18;
	mad.f32 $r14, $r15, 0x3ee31355, $r14;
	add.f32 $r15, $r12, $r7;
	mad.f32 $r19, $r15, 0x3f620676, $r19;
	add.f32 $r15, $r7, $r5;
	mad.f32 $r11, $r15, 0x3f620676, $r11;
	add.f32 $r15, $r5, $r13;
	mad.f32 $r9, $r15, 0x3f620676, $r9;
	mov.u32 s[$ofs2+0x035c], $r18;
	mov.u32 s[$ofs2+0x057c], $r19;
	mov.u32 s[$ofs2+0x079c], $r11;
	mov.u32 s[$ofs2+0x09bc], $r9;
	mov.u32 s[$ofs2+0x0bdc], $r20;
	add.f32 $r15, $r18, $r19;
	mov.u32 s[$ofs2+0x024c], $r14;
	add.f32 $r14, $r19, $r11;
	mad.f32 $r12, $r15, 0x3ee31355, $r12;
	mad.f32 $r7, $r14, 0x3ee31355, $r7;
	mov.u32 s[$ofs2+0x046c], $r12;
	add.f32 $r11, $r11, $r9;
	mov.u32 s[$ofs2+0x068c], $r7;
	add.f32 $r7, $r9, $r20;
	mad.f32 $r5, $r11, 0x3ee31355, $r5;
	mad.f32 $r13, $r7, 0x3ee31355, $r13;
	mov.u32 s[$ofs2+0x08ac], $r5;
	mov.u32 s[$ofs2+0x0acc], $r13;
	mul.f32 $r5, $r12, 0x3f5019c3;
	set.ne.s32.s32 $p3/$r7, $r25, $r24;
	cvt.s32.s32 $p2|$o127, $r7;
	@$p3.neu shl.u32 $r7, $r25, 0x00000002;
	@$p3.neu add.u32 $r7, s[0x0018], $r7;
	@$p3.neu add.u32 $r25, $r25, $r16;
	@$p3.neu st.global.u32 [$r7], $r5;
	@$p3.neu set.ne.s32.s32 $p2/$o127, $r25, $r24;
	add.u32 $ofs1, $ofs2, 0x0000057c;
	mul.f32 $r5, s[$ofs1+0x0000], 0x3f9d7658;
	@$p2.neu shl.u32 $r7, $r25, 0x00000002;
	@$p2.neu add.u32 $r7, s[0x0018], $r7;
	@$p2.neu add.u32 $r25, $r25, $r26;
	@$p2.neu st.global.u32 [$r7], $r5;
	@$p2.neu set.ne.s32.s32 $p2/$o127, $r25, $r24;
	add.u32 $ofs1, $ofs2, 0x0000068c;
	mul.f32 $r5, s[$ofs1+0x0000], 0x3f5019c3;
	@$p2.neu shl.u32 $r7, $r25, 0x00000002;
	@$p2.neu add.u32 $r7, s[0x0018], $r7;
	@$p2.neu add.u32 $r25, $r25, $r16;
	@$p2.neu st.global.u32 [$r7], $r5;
	@$p2.neu set.ne.s32.s32 $p2/$o127, $r25, $r24;
	add.u32 $ofs1, $ofs2, 0x0000079c;
	mul.f32 $r5, s[$ofs1+0x0000], 0x3f9d7658;
	@$p2.neu shl.u32 $r7, $r25, 0x00000002;
	@$p2.neu add.u32 $r7, s[0x0018], $r7;
	@$p2.neu add.u32 $r25, $r25, $r26;
	@$p2.neu st.global.u32 [$r7], $r5;
	@$p2.neu set.ne.s32.s32 $p2/$o127, $r25, $r24;
	add.u32 $ofs1, $ofs2, 0x000008ac;
	mul.f32 $r5, s[$ofs1+0x0000], 0x3f5019c3;
	@$p2.neu shl.u32 $r7, $r25, 0x00000002;
	@$p2.neu add.u32 $r7, s[0x0018], $r7;
	@$p2.neu add.u32 $r25, $r25, $r16;
	@$p2.neu st.global.u32 [$r7], $r5;
	@$p2.neu set.ne.s32.s32 $p2/$o127, $r25, $r24;
	add.u32 $ofs1, $ofs2, 0x000009bc;
	mul.f32 $r5, s[$ofs1+0x0000], 0x3f9d7658;
	@$p2.neu shl.u32 $r7, $r25, 0x00000002;
	@$p2.neu add.u32 $r7, s[0x0018], $r7;
	@$p2.neu st.global.u32 [$r7], $r5;
	@$p2.neu add.u32 $r25, $r25, $r26;
	ld.local.u32 $r5, [0x0010];
	ld.local.u32 $r7, [0x000c];
	ld.local.u32 $r13, [0x0008];
	mov.u32 s[$ofs2+0x002c], $r8;
	mov.u32 s[$ofs2+0x013c], $r5;
	mov.u32 s[$ofs2+0x024c], $r6;
	mov.u32 s[$ofs2+0x035c], $r7;
	mov.u32 s[$ofs2+0x046c], $r4;
	mov.u32 s[$ofs2+0x057c], $r13;
	mov.u32 s[$ofs2+0x068c], $r10;
	bar.sync 0x00000000;
	add.u32 $r27, $r27, 0x00000001;
	set.ne.s32.s32 $p2/$o127, s[0x0028], $r27;
	@$p2.ne bra l0x00001450;
	retp;
	l0x000021c0: mul.wide.u16 $r0, %ctaid.x, 0x00000080;
	add.u32 $r0, $r0, 0x00000083;
	set.gt.s32.s32 $p3/$o127, s[0x0020], $r0;
	@$p3.ne bra l0x00003c80;
	cvt.u32.u16 $r2, %ctaid.y;
	set.eq.u32.u32 $p3/$o127, $r2, $r124;
	@$p3.eq bra l0x000023c8;
	ssy 0x00002248;
	@$p2.eq bra l0x00002228;
	shl.u32 $r0, s[0x0020], 0x00000001;
	add.u32 $r0, $r0, -$r9;
	add.u32 $r2, $r0, 0xfffffffe;
	bra l0x00002248;
	l0x00002228: add.u32 $r2, -$r9, 0x00000000;
	set.lt.s32.s32 $p3/$o127, $r9, $r124;
	@$p3 mov.u32 $r0, $p3;
	@$p3.equ mov.u32 $r2, $r9;
	l0x00002248: mov.u32 $r0, s[0x0020];
	mul.wide.u16 $r1, $r0.lo, $r7.hi;
	mad.wide.u16 $r1, $r0.hi, $r7.lo, $r1;
	shl.u32 $r1, $r1, 0x00000010;
	mad.wide.u16 $r0, $r0.lo, $r7.lo, $r1;
	add.half.u32 $r0, $r0, $r2;
	add.half.u32 $r2, s[0x0020], $r0;
	shl.u32 $r0, $r0, 0x00000002;
	shl.u32 $r10, $r2, 0x00000002;
	add.u32 $r0, s[0x0010], $r0;
	ld.global.u32 $r1, [$r0];
	add.u32 $r0, s[0x0010], $r10;
	ld.global.u32 $r0, [$r0];
	add.half.u32 $r2, s[0x0020], $r2;
	add.half.u32 $r10, s[0x0020], $r2;
	mov.u32 s[$ofs3+0x046c], $r1;
	add.u32 $r11, s[0x0020], $r10;
	shl.u32 $r1, $r2, 0x00000002;
	mov.u32 s[$ofs3+0x057c], $r0;
	shl.u32 $r10, $r10, 0x00000002;
	shl.u32 $r11, $r11, 0x00000002;
	add.u32 $r1, s[0x0010], $r1;
	ld.global.u32 $r2, [$r1];
	mov.u32 s[$ofs3+0x035c], $r0;
	add.u32 $r0, s[0x0010], $r10;
	ld.global.u32 $r1, [$r0];
	add.u32 $r0, s[0x0010], $r11;
	ld.global.u32 $r0, [$r0];
	mov.u32 s[$ofs3+0x068c], $r2;
	mov.u32 s[$ofs3+0x024c], $r2;
	mov.u32 s[$ofs3+0x013c], $r1;
	mov.u32 s[$ofs3+0x002c], $r0;
	ssy 0x00002380;
	@$p2.eq bra l0x00002368;
	shl.u32 $r0, s[0x0020], 0x00000001;
	add.u32 $r0, $r0, -$r9;
	add.u32 $r2, $r0, 0xfffffffe;
	bra l0x00002380;
	l0x00002368: add.u32 $r2, -$r9, 0x00000000;
	set.lt.s32.s32 $p2/$o127, $r9, $r124;
	@$p2.equ mov.u32 $r2, $r9;
	l0x00002380: nop;
	add.u32 $r1, $r7, 0x00000003;
	mov.u32 $r0, s[0x0020];
	mul.wide.u16 $r9, $r0.lo, $r1.hi;
	mad.wide.u16 $r9, $r0.hi, $r1.lo, $r9;
	shl.u32 $r9, $r9, 0x00000010;
	mad.wide.u16 $r0, $r0.lo, $r1.lo, $r9;
	add.half.u32 $r0, $r0, $r2;
	add.half.u32 $r9, -s[0x0020], $r0;
	bra l0x00002550;
	l0x000023c8: ssy 0x00002410;
	@$p2.eq bra l0x000023f8;
	shl.u32 $r0, s[0x0020], 0x00000001;
	add.u32 $r0, $r0, -$r9;
	add.u32 $r2, $r0, 0xfffffffe;
	bra l0x00002410;
	l0x000023f8: add.u32 $r2, -$r9, 0x00000000;
	set.lt.s32.s32 $p2/$o127, $r9, $r124;
	@$p2.equ mov.u32 $r2, $r9;
	l0x00002410: mov.u32 $r0, s[0x0020];
	add.u32 $r1, $r7, 0xfffffffc;
	mul.wide.u16 $r9, $r1.lo, $r0.hi;
	mad.wide.u16 $r9, $r1.hi, $r0.lo, $r9;
	shl.u32 $r9, $r9, 0x00000010;
	mad.wide.u16 $r0, $r1.lo, $r0.lo, $r9;
	add.half.u32 $r0, $r0, $r2;
	add.half.u32 $r1, s[0x0020], $r0;
	add.u32 $r9, s[0x0020], $r1;
	shl.u32 $r0, $r0, 0x00000002;
	shl.u32 $r1, $r1, 0x00000002;
	shl.u32 $r10, $r9, 0x00000002;
	add.u32 $r0, s[0x0010], $r0;
	ld.global.u32 $r2, [$r0];
	add.u32 $r0, s[0x0010], $r1;
	ld.global.u32 $r1, [$r0];
	add.u32 $r0, s[0x0010], $r10;
	ld.global.u32 $r0, [$r0];
	add.u32 $r10, s[0x0020], $r9;
	mov.u32 s[$ofs3+0x002c], $r2;
	add.u32 $r2, s[0x0020], $r10;
	mov.u32 s[$ofs3+0x013c], $r1;
	add.u32 $r11, s[0x0020], $r2;
	mov.u32 s[$ofs3+0x024c], $r0;
	add.u32 $r9, s[0x0020], $r11;
	shl.u32 $r0, $r10, 0x00000002;
	shl.u32 $r1, $r2, 0x00000002;
	shl.u32 $r11, $r11, 0x00000002;
	shl.u32 $r12, $r9, 0x00000002;
	add.u32 $r0, s[0x0010], $r0;
	ld.global.u32 $r10, [$r0];
	add.u32 $r0, s[0x0010], $r1;
	ld.global.u32 $r2, [$r0];
	add.u32 $r0, s[0x0010], $r11;
	ld.global.u32 $r1, [$r0];
	add.u32 $r0, s[0x0010], $r12;
	ld.global.u32 $r0, [$r0];
	mov.u32 s[$ofs3+0x035c], $r10;
	mov.u32 s[$ofs3+0x046c], $r2;
	mov.u32 s[$ofs3+0x057c], $r1;
	mov.u32 s[$ofs3+0x068c], $r0;
	l0x00002550: ssy 0x000029a0;
	@$p0.eq bra l0x00002980;
	add.u32 $r0, $r17, 0xfffffff9;
	set.le.u32.u32 $p2/$o127, $r17, constant1_ZN8dwt_cuda12fdwt97KernelILi128ELi6EEEvPKfPfiii[0x0014];
	@$p2.ne add.u32 $r0, $r17, constant1_ZN8dwt_cuda12fdwt97KernelILi128ELi6EEEvPKfPfiii[0x0018];
	add.u32 $r1, $r0, 0x00000004;
	mov.u32 $r10, 0x00000378;
	and.b32 $r2, $r1, constant1_ZN8dwt_cuda12fdwt97KernelILi128ELi6EEEvPKfPfiii[0x0000];
	mul.wide.u16 $r12, $r2.lo, $r10.hi;
	shr.s32 $r11, $r1, 0x0000001f;
	mad.wide.u16 $r12, $r2.hi, $r10.lo, $r12;
	and.b32 $r11, $r11, constant1_ZN8dwt_cuda12fdwt97KernelILi128ELi6EEEvPKfPfiii[0x0000];
	shl.u32 $r12, $r12, 0x00000010;
	add.u32 $r1, $r1, $r11;
	mad.wide.u16 $r2, $r2.lo, $r10.lo, $r12;
	shr.s32 $r1, $r1, 0x00000001;
	add.u32 $r1, $r2, $r1;
	shl.b32 $ofs1, $r1, 0x00000002;
	mov.u32 $r25, $ofs1;
	add.u32 $r1, $r0, $r3;
	set.le.s32.s32 $p2/$o127, s[0x0020], $r1;
	cvt.u32.u16 $r2, %ctaid.y;
	set.eq.u32.u32 $p3/$o127, $r2, $r124;
	@$p3.eq bra l0x000027e0;
	ssy 0x00002658;
	@$p2.eq bra l0x00002640;
	shl.u32 $r0, s[0x0020], 0x00000001;
	add.u32 $r0, $r0, -$r1;
	add.u32 $r2, $r0, 0xfffffffe;
	bra l0x00002658;
	l0x00002640: add.u32 $r2, -$r1, 0x00000000;
	set.lt.s32.s32 $p3/$o127, $r1, $r124;
	@$p3.equ mov.u32 $r2, $r1;
	l0x00002658: mov.u32 $r0, s[0x0020];
	mul.wide.u16 $r3, $r0.lo, $r7.hi;
	mad.wide.u16 $r3, $r0.hi, $r7.lo, $r3;
	shl.u32 $r3, $r3, 0x00000010;
	mad.wide.u16 $r0, $r0.lo, $r7.lo, $r3;
	add.half.u32 $r0, $r0, $r2;
	add.half.u32 $r3, s[0x0020], $r0;
	shl.u32 $r0, $r0, 0x00000002;
	shl.u32 $r10, $r3, 0x00000002;
	add.u32 $r0, s[0x0010], $r0;
	ld.global.u32 $r2, [$r0];
	add.u32 $r0, s[0x0010], $r10;
	ld.global.u32 $r0, [$r0];
	add.half.u32 $r3, s[0x0020], $r3;
	add.half.u32 $r10, s[0x0020], $r3;
	shl.b32 $ofs1, $r25, 0x0;
	mov.u32 s[$ofs1+0x046c], $r2;
	add.u32 $r11, s[0x0020], $r10;
	shl.u32 $r2, $r3, 0x00000002;
	mov.u32 s[$ofs1+0x057c], $r0;
	shl.u32 $r10, $r10, 0x00000002;
	shl.u32 $r11, $r11, 0x00000002;
	add.u32 $r2, s[0x0010], $r2;
	ld.global.u32 $r3, [$r2];
	mov.u32 s[$ofs1+0x035c], $r0;
	add.u32 $r0, s[0x0010], $r10;
	ld.global.u32 $r2, [$r0];
	add.u32 $r0, s[0x0010], $r11;
	ld.global.u32 $r0, [$r0];
	mov.u32 s[$ofs1+0x068c], $r3;
	mov.u32 s[$ofs1+0x024c], $r3;
	mov.u32 s[$ofs1+0x013c], $r2;
	mov.u32 s[$ofs1+0x002c], $r0;
	ssy 0x00002798;
	@$p2.eq bra l0x00002780;
	shl.u32 $r0, s[0x0020], 0x00000001;
	add.u32 $r0, $r0, -$r1;
	add.u32 $r2, $r0, 0xfffffffe;
	bra l0x00002798;
	l0x00002780: add.u32 $r2, -$r1, 0x00000000;
	set.lt.s32.s32 $p2/$o127, $r1, $r124;
	@$p2.equ mov.u32 $r2, $r1;
	l0x00002798: nop;
	add.u32 $r1, $r7, 0x00000003;
	mov.u32 $r0, s[0x0020];
	mul.wide.u16 $r3, $r0.lo, $r1.hi;
	mad.wide.u16 $r3, $r0.hi, $r1.lo, $r3;
	shl.u32 $r3, $r3, 0x00000010;
	mad.wide.u16 $r0, $r0.lo, $r1.lo, $r3;
	add.half.u32 $r0, $r0, $r2;
	add.half.u32 $r22, -s[0x0020], $r0;
	bra l0x00002970;
	l0x000027e0: ssy 0x00002828;
	@$p2.eq bra l0x00002810;
	shl.u32 $r0, s[0x0020], 0x00000001;
	add.u32 $r0, $r0, -$r1;
	add.u32 $r2, $r0, 0xfffffffe;
	bra l0x00002828;
	l0x00002810: add.u32 $r2, -$r1, 0x00000000;
	set.lt.s32.s32 $p2/$o127, $r1, $r124;
	@$p2.equ mov.u32 $r2, $r1;
	l0x00002828: mov.u32 $r0, s[0x0020];
	add.u32 $r1, $r7, 0xfffffffc;
	mul.wide.u16 $r3, $r1.lo, $r0.hi;
	mad.wide.u16 $r3, $r1.hi, $r0.lo, $r3;
	shl.u32 $r3, $r3, 0x00000010;
	mad.wide.u16 $r0, $r1.lo, $r0.lo, $r3;
	add.half.u32 $r0, $r0, $r2;
	add.half.u32 $r1, s[0x0020], $r0;
	add.u32 $r3, s[0x0020], $r1;
	shl.u32 $r0, $r0, 0x00000002;
	shl.u32 $r1, $r1, 0x00000002;
	shl.u32 $r10, $r3, 0x00000002;
	add.u32 $r0, s[0x0010], $r0;
	ld.global.u32 $r2, [$r0];
	add.u32 $r0, s[0x0010], $r1;
	ld.global.u32 $r1, [$r0];
	add.u32 $r0, s[0x0010], $r10;
	ld.global.u32 $r0, [$r0];
	add.u32 $r3, s[0x0020], $r3;
	shl.b32 $ofs1, $r25, 0x0;
	mov.u32 s[$ofs1+0x002c], $r2;
	add.u32 $r2, s[0x0020], $r3;
	mov.u32 s[$ofs1+0x013c], $r1;
	add.u32 $r10, s[0x0020], $r2;
	mov.u32 s[$ofs1+0x024c], $r0;
	add.u32 $r22, s[0x0020], $r10;
	shl.u32 $r0, $r3, 0x00000002;
	shl.u32 $r1, $r2, 0x00000002;
	shl.u32 $r10, $r10, 0x00000002;
	shl.u32 $r11, $r22, 0x00000002;
	add.u32 $r0, s[0x0010], $r0;
	ld.global.u32 $r3, [$r0];
	add.u32 $r0, s[0x0010], $r1;
	ld.global.u32 $r2, [$r0];
	add.u32 $r0, s[0x0010], $r10;
	ld.global.u32 $r1, [$r0];
	add.u32 $r0, s[0x0010], $r11;
	ld.global.u32 $r0, [$r0];
	mov.u32 s[$ofs1+0x035c], $r3;
	mov.u32 s[$ofs1+0x046c], $r2;
	mov.u32 s[$ofs1+0x057c], $r1;
	mov.u32 s[$ofs1+0x068c], $r0;
	l0x00002970: mov.u32 $r0, s[0x0020];
	bra l0x000029a0;
	l0x00002980: shl.b32 $ofs1, $r124, 0x00000002;
	mov.u32 $r25, $ofs1;
	mov.u32 $r22, $r124;
	mov.u32 $r0, $r124;
	l0x000029a0: nop;
	bar.sync 0x00000000;
	shl.b32 $ofs2, $r17, 0x00000002;
	add.u32 $ofs1, $ofs2, 0x00000e0c;
	mov.half.u32 $r1, s[$ofs2+0x0030];
	mov.half.u32 $r2, s[$ofs1+0x0000];
	add.f32 $r1, s[$ofs2+0x002c], $r1;
	mad.f32 $r2, $r1, 0xbfcb0673, $r2;
	mov.u32 s[$ofs2+0x0e0c], $r2;
	add.u32 $ofs1, $ofs2, 0x0000022c;
	mov.half.u32 $r1, s[$ofs1+0x0004];
	add.half.f32 $r2, s[$ofs1+0x0000], $r1;
	add.u32 $ofs1, $ofs2, 0x0000100c;
	mov.u32 $r1, s[$ofs1+0x0000];
	mad.f32 $r1, $r2, 0xbfcb0673, $r1;
	mov.u32 s[$ofs2+0x100c], $r1;
	add.u32 $ofs1, $ofs2, 0x0000042c;
	mov.half.u32 $r1, s[$ofs1+0x0004];
	add.half.f32 $r2, s[$ofs1+0x0000], $r1;
	add.u32 $ofs1, $ofs2, 0x0000120c;
	mov.u32 $r1, s[$ofs1+0x0000];
	mad.f32 $r1, $r2, 0xbfcb0673, $r1;
	mov.u32 s[$ofs2+0x120c], $r1;
	ssy 0x00002a88;
	@$p1.eq bra l0x00002a88;
	shl.b32 $ofs2, $r17, 0x00000002;
	add.u32 $ofs1, $ofs2, 0x0000062c;
	mov.half.u32 $r1, s[$ofs1+0x0004];
	add.half.f32 $r2, s[$ofs1+0x0000], $r1;
	add.u32 $ofs1, $ofs2, 0x0000140c;
	mov.u32 $r1, s[$ofs1+0x0000];
	mad.f32 $r1, $r2, 0xbfcb0673, $r1;
	mov.u32 s[$ofs2+0x140c], $r1;
	l0x00002a88: nop;
	bar.sync 0x00000000;
	shl.b32 $ofs2, $r17, 0x00000002;
	add.u32 $ofs1, $ofs2, 0x00000e0c;
	mov.half.u32 $r1, s[$ofs1+0x0004];
	mov.half.u32 $r2, s[$ofs2+0x0030];
	add.f32 $r1, s[$ofs1+0x0000], $r1;
	mad.f32 $r2, $r1, 0xbd5901ae, $r2;
	mov.u32 s[$ofs2+0x0030], $r2;
	add.u32 $ofs1, $ofs2, 0x0000100c;
	mov.half.u32 $r1, s[$ofs1+0x0004];
	add.half.f32 $r2, s[$ofs1+0x0000], $r1;
	add.u32 $ofs1, $ofs2, 0x00000230;
	mov.u32 $r1, s[$ofs1+0x0000];
	mad.f32 $r1, $r2, 0xbd5901ae, $r1;
	mov.u32 s[$ofs2+0x0230], $r1;
	add.u32 $ofs1, $ofs2, 0x0000120c;
	mov.half.u32 $r1, s[$ofs1+0x0004];
	add.half.f32 $r2, s[$ofs1+0x0000], $r1;
	add.u32 $ofs1, $ofs2, 0x00000430;
	mov.u32 $r1, s[$ofs1+0x0000];
	mad.f32 $r1, $r2, 0xbd5901ae, $r1;
	mov.u32 s[$ofs2+0x0430], $r1;
	ssy 0x00002b70;
	@$p1.eq bra l0x00002b70;
	shl.b32 $ofs2, $r17, 0x00000002;
	add.u32 $ofs1, $ofs2, 0x0000140c;
	mov.half.u32 $r1, s[$ofs1+0x0004];
	add.half.f32 $r2, s[$ofs1+0x0000], $r1;
	add.u32 $ofs1, $ofs2, 0x00000630;
	mov.u32 $r1, s[$ofs1+0x0000];
	mad.f32 $r1, $r2, 0xbd5901ae, $r1;
	mov.u32 s[$ofs2+0x0630], $r1;
	l0x00002b70: nop;
	bar.sync 0x00000000;
	shl.b32 $ofs2, $r17, 0x00000002;
	add.u32 $ofs1, $ofs2, 0x00000e0c;
	mov.half.u32 $r1, s[$ofs2+0x0030];
	mov.half.u32 $r2, s[$ofs1+0x0000];
	add.f32 $r1, s[$ofs2+0x002c], $r1;
	mad.f32 $r2, $r1, 0x3f620676, $r2;
	mov.u32 s[$ofs2+0x0e0c], $r2;
	add.u32 $ofs1, $ofs2, 0x0000022c;
	mov.half.u32 $r1, s[$ofs1+0x0004];
	add.half.f32 $r2, s[$ofs1+0x0000], $r1;
	add.u32 $ofs1, $ofs2, 0x0000100c;
	mov.u32 $r1, s[$ofs1+0x0000];
	mad.f32 $r1, $r2, 0x3f620676, $r1;
	mov.u32 s[$ofs2+0x100c], $r1;
	add.u32 $ofs1, $ofs2, 0x0000042c;
	mov.half.u32 $r1, s[$ofs1+0x0004];
	add.half.f32 $r2, s[$ofs1+0x0000], $r1;
	add.u32 $ofs1, $ofs2, 0x0000120c;
	mov.u32 $r1, s[$ofs1+0x0000];
	mad.f32 $r1, $r2, 0x3f620676, $r1;
	mov.u32 s[$ofs2+0x120c], $r1;
	ssy 0x00002c58;
	@$p1.eq bra l0x00002c58;
	shl.b32 $ofs2, $r17, 0x00000002;
	add.u32 $ofs1, $ofs2, 0x0000062c;
	mov.half.u32 $r1, s[$ofs1+0x0004];
	add.half.f32 $r2, s[$ofs1+0x0000], $r1;
	add.u32 $ofs1, $ofs2, 0x0000140c;
	mov.u32 $r1, s[$ofs1+0x0000];
	mad.f32 $r1, $r2, 0x3f620676, $r1;
	mov.u32 s[$ofs2+0x140c], $r1;
	l0x00002c58: nop;
	bar.sync 0x00000000;
	shl.b32 $ofs2, $r17, 0x00000002;
	add.u32 $ofs1, $ofs2, 0x00000e0c;
	mov.half.u32 $r1, s[$ofs1+0x0004];
	mov.half.u32 $r2, s[$ofs2+0x0030];
	add.f32 $r1, s[$ofs1+0x0000], $r1;
	mad.f32 $r2, $r1, 0x3ee31355, $r2;
	mov.u32 s[$ofs2+0x0030], $r2;
	add.u32 $ofs1, $ofs2, 0x0000100c;
	mov.half.u32 $r1, s[$ofs1+0x0004];
	add.half.f32 $r2, s[$ofs1+0x0000], $r1;
	add.u32 $ofs1, $ofs2, 0x00000230;
	mov.u32 $r1, s[$ofs1+0x0000];
	mad.f32 $r1, $r2, 0x3ee31355, $r1;
	mov.u32 s[$ofs2+0x0230], $r1;
	add.u32 $ofs1, $ofs2, 0x0000120c;
	mov.half.u32 $r1, s[$ofs1+0x0004];
	add.half.f32 $r2, s[$ofs1+0x0000], $r1;
	add.u32 $ofs1, $ofs2, 0x00000430;
	mov.u32 $r1, s[$ofs1+0x0000];
	mad.f32 $r1, $r2, 0x3ee31355, $r1;
	mov.u32 s[$ofs2+0x0430], $r1;
	ssy 0x00002d40;
	@$p1.eq bra l0x00002d40;
	shl.b32 $ofs2, $r17, 0x00000002;
	add.u32 $ofs1, $ofs2, 0x0000140c;
	mov.half.u32 $r1, s[$ofs1+0x0004];
	add.half.f32 $r2, s[$ofs1+0x0000], $r1;
	add.u32 $ofs1, $ofs2, 0x00000630;
	mov.u32 $r1, s[$ofs1+0x0000];
	mad.f32 $r1, $r2, 0x3ee31355, $r1;
	mov.u32 s[$ofs2+0x0630], $r1;
	l0x00002d40: nop;
	bar.sync 0x00000000;
	shl.b32 $ofs2, $r17, 0x00000002;
	mul.f32 $r1, s[$ofs2+0x002c], 0x3f5019c3;
	mov.u32 s[$ofs2+0x002c], $r1;
	add.u32 $ofs1, $ofs2, 0x00000e0c;
	mul.f32 $r1, s[$ofs1+0x0000], 0x3f9d7658;
	mov.u32 s[$ofs2+0x0e0c], $r1;
	add.u32 $ofs1, $ofs2, 0x0000022c;
	mul.f32 $r1, s[$ofs1+0x0000], 0x3f5019c3;
	mov.u32 s[$ofs2+0x022c], $r1;
	add.u32 $ofs1, $ofs2, 0x0000100c;
	mul.f32 $r1, s[$ofs1+0x0000], 0x3f9d7658;
	mov.u32 s[$ofs2+0x100c], $r1;
	add.u32 $ofs1, $ofs2, 0x0000042c;
	mul.f32 $r1, s[$ofs1+0x0000], 0x3f5019c3;
	mov.u32 s[$ofs2+0x042c], $r1;
	add.u32 $ofs1, $ofs2, 0x0000120c;
	mul.f32 $r1, s[$ofs1+0x0000], 0x3f9d7658;
	mov.u32 s[$ofs2+0x120c], $r1;
	ssy 0x00002e30;
	mov.pred $p2, $r6;
	@$p2.eq bra l0x00002e30;
	shl.b32 $ofs2, $r17, 0x00000002;
	add.u32 $ofs1, $ofs2, 0x0000062c;
	mul.f32 $r1, s[$ofs1+0x0000], 0x3f5019c3;
	mov.u32 s[$ofs2+0x062c], $r1;
	add.u32 $ofs1, $ofs2, 0x0000140c;
	mul.f32 $r1, s[$ofs1+0x0000], 0x3f9d7658;
	mov.u32 s[$ofs2+0x140c], $r1;
	l0x00002e30: nop;
	bar.sync 0x00000000;
	ssy 0x000030c8;
	mov.pred $p3, $r8;
	@$p3.eq bra l0x000030a8;
	shr.s32 $r2, s[0x0024], 0x0000001f;
	shr.s32 $r1, $r5, 0x0000001f;
	and.b32 $r3, $r2, constant1_ZN8dwt_cuda12fdwt97KernelILi128ELi6EEEvPKfPfiii[0x0000];
	shr.s32 $r2, s[0x0020], 0x0000001f;
	and.b32 $r1, $r1, constant1_ZN8dwt_cuda12fdwt97KernelILi128ELi6EEEvPKfPfiii[0x0000];
	add.u32 $r6, s[0x0024], $r3;
	and.b32 $p2|$o127, $r5, constant1_ZN8dwt_cuda12fdwt97KernelILi128ELi6EEEvPKfPfiii[0x0000];
	and.b32 $r2, $r2, constant1_ZN8dwt_cuda12fdwt97KernelILi128ELi6EEEvPKfPfiii[0x0000];
	add.u32 $r1, $r1, $r5;
	and.b32 $r8, $r6, constant1_ZN8dwt_cuda12fdwt97KernelILi128ELi6EEEvPKfPfiii[0x002c];
	ssy 0x00002fe8;
	add.u32 $r5, s[0x0020], $r2;
	shr.s32 $r3, $r1, 0x00000001;
	add.u32 $r1, s[0x0024], -$r8;
	shr.s32 $r2, $r6, 0x00000001;
	shr.s32 $r5, $r5, 0x00000001;
	set.ne.s32.s32 $p1/$o127, $r1, $r124;
	@$p2.eq bra l0x00002fa0;
	shr.s32 $r1, s[0x0020], 0x0000001f;
	and.b32 $r1, $r1, constant1_ZN8dwt_cuda12fdwt97KernelILi128ELi6EEEvPKfPfiii[0x0000];
	add.u32 $r1, s[0x0020], $r1;
	and.b32 $r6, $r1, constant1_ZN8dwt_cuda12fdwt97KernelILi128ELi6EEEvPKfPfiii[0x002c];
	mov.u32 $r1, $r5;
	add.u32 $p2|$o127, s[0x0020], -$r6;
	@$p2.neu add.u32 $r5, $r5, constant1_ZN8dwt_cuda12fdwt97KernelILi128ELi6EEEvPKfPfiii[0x0000];
	@$p1.neu add.u32 $r6, $r2, constant1_ZN8dwt_cuda12fdwt97KernelILi128ELi6EEEvPKfPfiii[0x0000];
	@$p1.eq mov.u32 $r6, $r2;
	mov.half.u32 $r8, s[0x0020];
	mov.half.u32 $r10, s[0x0024];
	mul.wide.u16 $r11, $r8.lo, $r10.hi;
	mad.wide.u16 $r11, $r8.hi, $r10.lo, $r11;
	shl.u32 $r12, $r11, 0x00000010;
	mul.wide.u16 $r11, $r5.lo, $r6.hi;
	mad.wide.u16 $r10, $r8.lo, $r10.lo, $r12;
	mad.wide.u16 $r8, $r5.hi, $r6.lo, $r11;
	shr.s32 $r11, $r10, 0x0000001f;
	shl.u32 $r8, $r8, 0x00000010;
	and.b32 $r11, $r11, constant1_ZN8dwt_cuda12fdwt97KernelILi128ELi6EEEvPKfPfiii[0x0000];
	mad.wide.u16 $r5, $r5.lo, $r6.lo, $r8;
	add.half.u32 $r6, $r11, $r10;
	add.half.u32 $r3, $r5, $r3;
	shr.s32 $r15, $r6, 0x00000001;
	bra l0x00002fe8;
	l0x00002fa0: and.b32 $r1, s[0x0020], constant1_ZN8dwt_cuda12fdwt97KernelILi128ELi6EEEvPKfPfiii[0x0000];
	add.u32 $r1, $r5, $r1;
	@$p1.neu add.u32 $r5, $r2, constant1_ZN8dwt_cuda12fdwt97KernelILi128ELi6EEEvPKfPfiii[0x0000];
	@$p1.eq mov.u32 $r5, $r2;
	mov.u32 $r6, s[0x0020];
	mul.wide.u16 $r8, $r5.lo, $r6.hi;
	mad.wide.u16 $r8, $r5.hi, $r6.lo, $r8;
	shl.u32 $r8, $r8, 0x00000010;
	mad.wide.u16 $r15, $r5.lo, $r6.lo, $r8;
	l0x00002fe8: shr.s32 $r5, $r7, 0x0000001f;
	and.b32 $r5, $r5, constant1_ZN8dwt_cuda12fdwt97KernelILi128ELi6EEEvPKfPfiii[0x0000];
	add.u32 $r6, $r5, $r7;
	and.b32 $r5, s[0x0024], constant1_ZN8dwt_cuda12fdwt97KernelILi128ELi6EEEvPKfPfiii[0x0000];
	and.b32 $r7, $r7, constant1_ZN8dwt_cuda12fdwt97KernelILi128ELi6EEEvPKfPfiii[0x0000];
	shr.s32 $r6, $r6, 0x00000001;
	mul.half.lo.u16 $r8, $r2.lo, $r1.hi;
	mul.half.lo.u16 $r10, $r15.lo, $r5.hi;
	mul.half.lo.u16 $r11, $r1.lo, $r6.hi;
	mul.half.lo.u16 $r12, $r15.lo, $r7.hi;
	mad.wide.u16 $r8, $r2.hi, $r1.lo, $r8;
	mad.wide.u16 $r10, $r15.hi, $r5.lo, $r10;
	mad.wide.u16 $r11, $r1.hi, $r6.lo, $r11;
	mad.wide.u16 $r12, $r15.hi, $r7.lo, $r12;
	shl.u32 $r8, $r8, 0x00000010;
	shl.u32 $r10, $r10, 0x00000010;
	shl.u32 $r11, $r11, 0x00000010;
	shl.u32 $r12, $r12, 0x00000010;
	mad.wide.u16 $r2, $r2.lo, $r1.lo, $r8;
	mad.wide.u16 $r5, $r15.lo, $r5.lo, $r10;
	mad.wide.u16 $r6, $r1.lo, $r6.lo, $r11;
	mad.wide.u16 $r7, $r15.lo, $r7.lo, $r12;
	add.half.u32 $r2, $r2, $r5;
	add.half.u32 $r5, $r6, $r7;
	add.half.u32 $r24, $r3, $r2;
	add.half.u32 $r21, $r3, $r5;
	add.u32 $r23, $r1, -$r15;
	bra l0x000030c8;
	l0x000030a8: mov.u32 $r21, $r124;
	mov.u32 $r23, $r124;
	mov.u32 $r24, $r124;
	mov.u32 $r15, $r124;
	l0x000030c8: set.gt.s32.s32 $p1/$o127, s[0x0028], $r124;
	@$p1.eq retp;
	add.u32 $r1, $r4, 0x00000004;
	mov.u32 $r4, 0x00000378;
	and.b32 $r3, $r1, constant1_ZN8dwt_cuda12fdwt97KernelILi128ELi6EEEvPKfPfiii[0x0000];
	mul.wide.u16 $r5, $r3.lo, $r4.hi;
	shr.s32 $r2, $r1, 0x0000001f;
	mad.wide.u16 $r5, $r3.hi, $r4.lo, $r5;
	and.b32 $r2, $r2, constant1_ZN8dwt_cuda12fdwt97KernelILi128ELi6EEEvPKfPfiii[0x0000];
	shl.u32 $r5, $r5, 0x00000010;
	add.u32 $r1, $r1, $r2;
	mad.wide.u16 $r2, $r3.lo, $r4.lo, $r5;
	shr.s32 $r1, $r1, 0x00000001;
	add.u32 $r1, $r2, $r1;
	shl.b32 $ofs2, $r1, 0x00000002;
	set.lt.u32.u32 $p1/$o127, $r17, constant1_ZN8dwt_cuda12fdwt97KernelILi128ELi6EEEvPKfPfiii[0x0030];
	shl.u32 $r1, $r9, 0x00000002;
	set.lt.u32.u32 $p2/$o127, $r17, constant1_ZN8dwt_cuda12fdwt97KernelILi128ELi6EEEvPKfPfiii[0x0034];
	@$p2 mov.u32 $r28, $p2;
	mov.u32 $r27, $r124;
	add.u32 $r26, s[0x0010], $r1;
	l0x00003170: shl.u32 $r1, s[0x0020], 0x00000002;
	add.u32 $r2, $r26, $r1;
	ld.global.u32 $r3, [$r2];
	add.u32 $r4, $r2, $r1;
	ld.global.u32 $r2, [$r4];
	add.u32 $r5, $r4, $r1;
	ld.global.u32 $r4, [$r5];
	mov.u32 s[$ofs3+0x079c], $r3;
	add.u32 $r5, $r5, $r1;
	ld.global.u32 $r3, [$r5];
	mov.u32 s[$ofs3+0x08ac], $r2;
	add.u32 $r5, $r5, $r1;
	ld.global.u32 $r2, [$r5];
	mov.u32 s[$ofs3+0x09bc], $r4;
	add.u32 $r26, $r5, $r1;
	ld.global.u32 $r1, [$r26];
	mov.u32 s[$ofs3+0x0acc], $r3;
	mov.u32 s[$ofs3+0x0bdc], $r2;
	mov.u32 s[$ofs3+0x0cec], $r1;
	ssy 0x00003300;
	@$p0.eq bra l0x00003300;
	add.half.u32 $r1, $r22, $r0;
	add.half.u32 $r2, $r1, $r0;
	add.u32 $r4, $r0, $r2;
	shl.u32 $r3, $r1, 0x00000002;
	shl.u32 $r2, $r2, 0x00000002;
	shl.u32 $r1, $r4, 0x00000002;
	add.u32 $r3, s[0x0010], $r3;
	ld.global.u32 $r3, [$r3];
	add.u32 $r2, s[0x0010], $r2;
	ld.global.u32 $r2, [$r2];
	add.u32 $r1, s[0x0010], $r1;
	ld.global.u32 $r1, [$r1];
	add.half.u32 $r4, $r0, $r4;
	add.half.u32 $r5, $r0, $r4;
	shl.b32 $ofs1, $r25, 0x0;
	mov.u32 s[$ofs1+0x079c], $r3;
	add.u32 $r22, $r0, $r5;
	shl.u32 $r3, $r4, 0x00000002;
	mov.u32 s[$ofs1+0x08ac], $r2;
	shl.u32 $r2, $r5, 0x00000002;
	shl.u32 $r4, $r22, 0x00000002;
	add.u32 $r3, s[0x0010], $r3;
	ld.global.u32 $r3, [$r3];
	mov.u32 s[$ofs1+0x09bc], $r1;
	add.u32 $r1, s[0x0010], $r2;
	ld.global.u32 $r2, [$r1];
	add.u32 $r1, s[0x0010], $r4;
	ld.global.u32 $r1, [$r1];
	mov.u32 s[$ofs1+0x0acc], $r3;
	mov.u32 s[$ofs1+0x0bdc], $r2;
	mov.u32 s[$ofs1+0x0cec], $r1;
	l0x00003300: nop;
	bar.sync 0x00000000;
	shl.b32 $ofs4, $r17, 0x00000002;
	add.u32 $ofs1, $ofs4, 0x0000157c;
	mov.u32 $r2, s[$ofs1+0x0000];
	add.u32 $ofs1, $ofs4, 0x0000079c;
	mov.half.u32 $r1, s[$ofs1+0x0004];
	add.half.f32 $r1, s[$ofs1+0x0000], $r1;
	mad.f32 $r2, $r1, 0xbfcb0673, $r2;
	mov.u32 s[$ofs4+0x157c], $r2;
	add.u32 $ofs1, $ofs4, 0x0000177c;
	mov.u32 $r2, s[$ofs1+0x0000];
	add.u32 $ofs1, $ofs4, 0x0000099c;
	mov.half.u32 $r1, s[$ofs1+0x0004];
	add.half.f32 $r1, s[$ofs1+0x0000], $r1;
	mad.f32 $r2, $r1, 0xbfcb0673, $r2;
	mov.u32 s[$ofs4+0x177c], $r2;
	add.u32 $ofs1, $ofs4, 0x0000197c;
	mov.u32 $r2, s[$ofs1+0x0000];
	add.u32 $ofs1, $ofs4, 0x00000b9c;
	mov.half.u32 $r1, s[$ofs1+0x0004];
	add.half.f32 $r1, s[$ofs1+0x0000], $r1;
	mad.f32 $r2, $r1, 0xbfcb0673, $r2;
	mov.u32 s[$ofs4+0x197c], $r2;
	ssy 0x000033f0;
	@$p1.eq bra l0x000033f0;
	shl.b32 $ofs4, $r17, 0x00000002;
	add.u32 $ofs1, $ofs4, 0x00000d9c;
	mov.half.u32 $r1, s[$ofs1+0x0004];
	add.half.f32 $r2, s[$ofs1+0x0000], $r1;
	add.u32 $ofs1, $ofs4, 0x00001b7c;
	mov.u32 $r1, s[$ofs1+0x0000];
	mad.f32 $r1, $r2, 0xbfcb0673, $r1;
	mov.u32 s[$ofs4+0x1b7c], $r1;
	l0x000033f0: nop;
	bar.sync 0x00000000;
	shl.b32 $ofs4, $r17, 0x00000002;
	add.u32 $ofs1, $ofs4, 0x000007a0;
	mov.u32 $r2, s[$ofs1+0x0000];
	add.u32 $ofs1, $ofs4, 0x0000157c;
	mov.half.u32 $r1, s[$ofs1+0x0004];
	add.half.f32 $r1, s[$ofs1+0x0000], $r1;
	mad.f32 $r2, $r1, 0xbd5901ae, $r2;
	mov.u32 s[$ofs4+0x07a0], $r2;
	add.u32 $ofs1, $ofs4, 0x000009a0;
	mov.u32 $r2, s[$ofs1+0x0000];
	add.u32 $ofs1, $ofs4, 0x0000177c;
	mov.half.u32 $r1, s[$ofs1+0x0004];
	add.half.f32 $r1, s[$ofs1+0x0000], $r1;
	mad.f32 $r2, $r1, 0xbd5901ae, $r2;
	mov.u32 s[$ofs4+0x09a0], $r2;
	add.u32 $ofs1, $ofs4, 0x00000ba0;
	mov.u32 $r2, s[$ofs1+0x0000];
	add.u32 $ofs1, $ofs4, 0x0000197c;
	mov.half.u32 $r1, s[$ofs1+0x0004];
	add.half.f32 $r1, s[$ofs1+0x0000], $r1;
	mad.f32 $r2, $r1, 0xbd5901ae, $r2;
	mov.u32 s[$ofs4+0x0ba0], $r2;
	ssy 0x000034e0;
	@$p1.eq bra l0x000034e0;
	shl.b32 $ofs4, $r17, 0x00000002;
	add.u32 $ofs1, $ofs4, 0x00001b7c;
	mov.half.u32 $r1, s[$ofs1+0x0004];
	add.half.f32 $r2, s[$ofs1+0x0000], $r1;
	add.u32 $ofs1, $ofs4, 0x00000da0;
	mov.u32 $r1, s[$ofs1+0x0000];
	mad.f32 $r1, $r2, 0xbd5901ae, $r1;
	mov.u32 s[$ofs4+0x0da0], $r1;
	l0x000034e0: nop;
	bar.sync 0x00000000;
	shl.b32 $ofs4, $r17, 0x00000002;
	add.u32 $ofs1, $ofs4, 0x0000157c;
	mov.u32 $r2, s[$ofs1+0x0000];
	add.u32 $ofs1, $ofs4, 0x0000079c;
	mov.half.u32 $r1, s[$ofs1+0x0004];
	add.half.f32 $r1, s[$ofs1+0x0000], $r1;
	mad.f32 $r2, $r1, 0x3f620676, $r2;
	mov.u32 s[$ofs4+0x157c], $r2;
	add.u32 $ofs1, $ofs4, 0x0000177c;
	mov.u32 $r2, s[$ofs1+0x0000];
	add.u32 $ofs1, $ofs4, 0x0000099c;
	mov.half.u32 $r1, s[$ofs1+0x0004];
	add.half.f32 $r1, s[$ofs1+0x0000], $r1;
	mad.f32 $r2, $r1, 0x3f620676, $r2;
	mov.u32 s[$ofs4+0x177c], $r2;
	add.u32 $ofs1, $ofs4, 0x0000197c;
	mov.u32 $r2, s[$ofs1+0x0000];
	add.u32 $ofs1, $ofs4, 0x00000b9c;
	mov.half.u32 $r1, s[$ofs1+0x0004];
	add.half.f32 $r1, s[$ofs1+0x0000], $r1;
	mad.f32 $r2, $r1, 0x3f620676, $r2;
	mov.u32 s[$ofs4+0x197c], $r2;
	ssy 0x000035d0;
	@$p1.eq bra l0x000035d0;
	shl.b32 $ofs4, $r17, 0x00000002;
	add.u32 $ofs1, $ofs4, 0x00000d9c;
	mov.half.u32 $r1, s[$ofs1+0x0004];
	add.half.f32 $r2, s[$ofs1+0x0000], $r1;
	add.u32 $ofs1, $ofs4, 0x00001b7c;
	mov.u32 $r1, s[$ofs1+0x0000];
	mad.f32 $r1, $r2, 0x3f620676, $r1;
	mov.u32 s[$ofs4+0x1b7c], $r1;
	l0x000035d0: nop;
	bar.sync 0x00000000;
	shl.b32 $ofs4, $r17, 0x00000002;
	add.u32 $ofs1, $ofs4, 0x000007a0;
	mov.u32 $r2, s[$ofs1+0x0000];
	add.u32 $ofs1, $ofs4, 0x0000157c;
	mov.half.u32 $r1, s[$ofs1+0x0004];
	add.half.f32 $r1, s[$ofs1+0x0000], $r1;
	mad.f32 $r2, $r1, 0x3ee31355, $r2;
	mov.u32 s[$ofs4+0x07a0], $r2;
	add.u32 $ofs1, $ofs4, 0x000009a0;
	mov.u32 $r2, s[$ofs1+0x0000];
	add.u32 $ofs1, $ofs4, 0x0000177c;
	mov.half.u32 $r1, s[$ofs1+0x0004];
	add.half.f32 $r1, s[$ofs1+0x0000], $r1;
	mad.f32 $r2, $r1, 0x3ee31355, $r2;
	mov.u32 s[$ofs4+0x09a0], $r2;
	add.u32 $ofs1, $ofs4, 0x00000ba0;
	mov.u32 $r2, s[$ofs1+0x0000];
	add.u32 $ofs1, $ofs4, 0x0000197c;
	mov.half.u32 $r1, s[$ofs1+0x0004];
	add.half.f32 $r1, s[$ofs1+0x0000], $r1;
	mad.f32 $r2, $r1, 0x3ee31355, $r2;
	mov.u32 s[$ofs4+0x0ba0], $r2;
	ssy 0x000036c0;
	@$p1.eq bra l0x000036c0;
	shl.b32 $ofs4, $r17, 0x00000002;
	add.u32 $ofs1, $ofs4, 0x00001b7c;
	mov.half.u32 $r1, s[$ofs1+0x0004];
	add.half.f32 $r2, s[$ofs1+0x0000], $r1;
	add.u32 $ofs1, $ofs4, 0x00000da0;
	mov.u32 $r1, s[$ofs1+0x0000];
	mad.f32 $r1, $r2, 0x3ee31355, $r1;
	mov.u32 s[$ofs4+0x0da0], $r1;
	l0x000036c0: nop;
	bar.sync 0x00000000;
	shl.b32 $ofs4, $r17, 0x00000002;
	add.u32 $ofs1, $ofs4, 0x0000079c;
	mul.f32 $r1, s[$ofs1+0x0000], 0x3f5019c3;
	mov.u32 s[$ofs4+0x079c], $r1;
	add.u32 $ofs1, $ofs4, 0x0000157c;
	mul.f32 $r1, s[$ofs1+0x0000], 0x3f9d7658;
	mov.u32 s[$ofs4+0x157c], $r1;
	add.u32 $ofs1, $ofs4, 0x0000099c;
	mul.f32 $r1, s[$ofs1+0x0000], 0x3f5019c3;
	mov.u32 s[$ofs4+0x099c], $r1;
	add.u32 $ofs1, $ofs4, 0x0000177c;
	mul.f32 $r1, s[$ofs1+0x0000], 0x3f9d7658;
	mov.u32 s[$ofs4+0x177c], $r1;
	add.u32 $ofs1, $ofs4, 0x00000b9c;
	mul.f32 $r1, s[$ofs1+0x0000], 0x3f5019c3;
	mov.u32 s[$ofs4+0x0b9c], $r1;
	add.u32 $ofs1, $ofs4, 0x0000197c;
	mul.f32 $r1, s[$ofs1+0x0000], 0x3f9d7658;
	mov.u32 s[$ofs4+0x197c], $r1;
	ssy 0x000037b8;
	mov.pred $p2, $r28;
	@$p2.eq bra l0x000037b8;
	shl.b32 $ofs4, $r17, 0x00000002;
	add.u32 $ofs1, $ofs4, 0x00000d9c;
	mul.f32 $r1, s[$ofs1+0x0000], 0x3f5019c3;
	mov.u32 s[$ofs4+0x0d9c], $r1;
	add.u32 $ofs1, $ofs4, 0x00001b7c;
	mul.f32 $r1, s[$ofs1+0x0000], 0x3f9d7658;
	mov.u32 s[$ofs4+0x1b7c], $r1;
	l0x000037b8: nop;
	bar.sync 0x00000000;
	add.u32 $ofs1, $ofs2, 0x0000013c;
	mov.u32 $r16, s[$ofs1+0x0000];
	add.u32 $ofs1, $ofs2, 0x0000079c;
	mov.half.u32 $r2, s[$ofs1+0x0000];
	mov.half.u32 $r12, s[$ofs1+0x0000];
	add.u32 $ofs1, $ofs2, 0x000009bc;
	mov.half.u32 $r4, s[$ofs1+0x0000];
	mov.half.u32 $r10, s[$ofs1+0x0000];
	add.u32 $ofs1, $ofs2, 0x00000bdc;
	mov.half.u32 $r6, s[$ofs1+0x0000];
	mov.half.u32 $r20, s[$ofs1+0x0000];
	add.u32 $ofs1, $ofs2, 0x0000024c;
	mov.half.u32 $r7, s[$ofs1+0x0000];
	mov.half.u32 $r13, s[$ofs1+0x0000];
	mov.u32 $r18, s[$ofs1+0x0000];
	add.u32 $ofs4, $ofs2, 0x00000acc;
	add.u32 $ofs1, $ofs2, 0x000008ac;
	mov.u32 $r1, s[$ofs4+0x0000];
	mov.half.u32 $r19, s[$ofs1+0x0000];
	mov.half.u32 $r3, s[$ofs1+0x0000];
	mov.half.u32 $r8, s[$ofs1+0x0000];
	add.half.f32 $r11, s[$ofs1+0x0000], $r1;
	add.u32 $ofs1, $ofs2, 0x00000cec;
	mov.u32 $r1, s[$ofs1+0x0000];
	mov.u32 $r5, s[$ofs4+0x0000];
	mov.u32 $r9, s[$ofs4+0x0000];
	add.f32 $r29, s[$ofs4+0x0000], $r1;
	add.u32 $ofs4, $ofs2, 0x0000068c;
	mad.f32 $r10, $r11, 0xbfcb0673, $r10;
	mov.u32 $r1, s[$ofs4+0x0000];
	mov.u32 $r14, s[$ofs4+0x0000];
	mov.u32 $r11, s[$ofs4+0x0000];
	add.f32 $r19, s[$ofs4+0x0000], $r19;
	mad.f32 $r20, $r29, 0xbfcb0673, $r20;
	add.half.f32 $r7, s[$ofs2+0x002c], $r7;
	add.half.f32 $r29, $r10, $r20;
	mad.f32 $r16, $r7, 0xbfcb0673, $r16;
	mad.f32 $r9, $r29, 0xbd5901ae, $r9;
	mad.f32 $r12, $r19, 0xbfcb0673, $r12;
	mov.half.u32 $r19, s[$ofs2+0x002c];
	mov.half.u32 $r7, s[$ofs1+0x0000];
	add.f32 $r30, s[$ofs1+0x0000], $r9;
	add.u32 $ofs4, $ofs2, 0x0000046c;
	mov.u32 s[$ofs2+0x013c], $r16;
	mov.u32 $r29, s[$ofs4+0x0000];
	add.f32 $r29, $r13, $r29;
	add.u32 $ofs1, $ofs2, 0x0000035c;
	mov.u32 $r13, s[$ofs1+0x0000];
	mad.f32 $r13, $r29, 0xbfcb0673, $r13;
	mov.u32 $r29, s[$ofs4+0x0000];
	add.f32 $r31, $r14, $r29;
	mov.u32 $r29, s[$ofs4+0x0000];
	add.u32 $ofs1, $ofs2, 0x0000057c;
	mov.u32 s[$ofs2+0x035c], $r13;
	mov.u32 $r14, s[$ofs1+0x0000];
	mad.f32 $r14, $r31, 0xbfcb0673, $r14;
	mov.u32 s[$ofs2+0x057c], $r14;
	mov.u32 s[$ofs2+0x079c], $r12;
	mov.u32 s[$ofs2+0x09bc], $r10;
	mov.u32 s[$ofs2+0x0bdc], $r20;
	mad.f32 $r20, $r30, 0x3f620676, $r20;
	add.f32 $r30, $r16, $r13;
	mad.f32 $r18, $r30, 0xbd5901ae, $r18;
	add.f32 $r19, $r19, $r18;
	mad.f32 $r16, $r19, 0x3f620676, $r16;
	add.f32 $r19, $r13, $r14;
	mad.f32 $r19, $r19, constant1_ZN8dwt_cuda12fdwt97KernelILi128ELi6EEEvPKfPfiii[0x0020], $r29;
	add.f32 $r29, $r14, $r12;
	mov.u32 s[$ofs2+0x024c], $r18;
	mad.f32 $r11, $r29, 0xbd5901ae, $r11;
	add.f32 $r29, $r12, $r10;
	mov.u32 s[$ofs2+0x046c], $r19;
	mad.f32 $r8, $r29, 0xbd5901ae, $r8;
	mov.u32 s[$ofs2+0x068c], $r11;
	add.f32 $r29, $r18, $r19;
	mov.u32 s[$ofs2+0x08ac], $r8;
	mad.f32 $r13, $r29, 0x3f620676, $r13;
	mov.u32 s[$ofs2+0x0acc], $r9;
	add.f32 $r29, $r19, $r11;
	mov.u32 s[$ofs2+0x013c], $r16;
	mad.f32 $r14, $r29, 0x3f620676, $r14;
	add.f32 $r29, $r11, $r8;
	mov.u32 s[$ofs2+0x035c], $r13;
	mad.f32 $r12, $r29, 0x3f620676, $r12;
	add.f32 $r29, $r8, $r9;
	mov.u32 s[$ofs2+0x057c], $r14;
	mad.f32 $r10, $r29, 0x3f620676, $r10;
	mov.u32 s[$ofs2+0x079c], $r12;
	add.f32 $r16, $r16, $r13;
	mov.u32 s[$ofs2+0x09bc], $r10;
	mad.f32 $r18, $r16, 0x3ee31355, $r18;
	mov.u32 s[$ofs2+0x0bdc], $r20;
	add.f32 $r13, $r13, $r14;
	mov.u32 s[$ofs2+0x024c], $r18;
	add.f32 $r14, $r14, $r12;
	mad.f32 $r19, $r13, 0x3ee31355, $r19;
	mad.f32 $r11, $r14, 0x3ee31355, $r11;
	mov.u32 s[$ofs2+0x046c], $r19;
	add.f32 $r12, $r12, $r10;
	mov.u32 s[$ofs2+0x068c], $r11;
	add.f32 $r10, $r10, $r20;
	mad.f32 $r8, $r12, 0x3ee31355, $r8;
	mad.f32 $r9, $r10, 0x3ee31355, $r9;
	mov.u32 s[$ofs2+0x08ac], $r8;
	mov.u32 s[$ofs2+0x0acc], $r9;
	mul.f32 $r8, $r19, 0x3f5019c3;
	set.ne.s32.s32 $p3/$r9, $r21, $r24;
	cvt.s32.s32 $p2|$o127, $r9;
	@$p3.neu shl.u32 $r9, $r21, 0x00000002;
	@$p3.neu add.u32 $r9, s[0x0018], $r9;
	@$p3.neu add.u32 $r21, $r21, $r15;
	@$p3.neu st.global.u32 [$r9], $r8;
	@$p3.neu set.ne.s32.s32 $p2/$o127, $r21, $r24;
	add.u32 $ofs1, $ofs2, 0x0000057c;
	mul.f32 $r8, s[$ofs1+0x0000], 0x3f9d7658;
	@$p2.neu shl.u32 $r9, $r21, 0x00000002;
	@$p2.neu add.u32 $r9, s[0x0018], $r9;
	@$p2.neu add.u32 $r21, $r21, $r23;
	@$p2.neu st.global.u32 [$r9], $r8;
	@$p2.neu set.ne.s32.s32 $p2/$o127, $r21, $r24;
	add.u32 $ofs1, $ofs2, 0x0000068c;
	mul.f32 $r8, s[$ofs1+0x0000], 0x3f5019c3;
	@$p2.neu shl.u32 $r9, $r21, 0x00000002;
	@$p2.neu add.u32 $r9, s[0x0018], $r9;
	@$p2.neu add.u32 $r21, $r21, $r15;
	@$p2.neu st.global.u32 [$r9], $r8;
	@$p2.neu set.ne.s32.s32 $p2/$o127, $r21, $r24;
	add.u32 $ofs1, $ofs2, 0x0000079c;
	mul.f32 $r8, s[$ofs1+0x0000], 0x3f9d7658;
	@$p2.neu shl.u32 $r9, $r21, 0x00000002;
	@$p2.neu add.u32 $r9, s[0x0018], $r9;
	@$p2.neu add.u32 $r21, $r21, $r23;
	@$p2.neu st.global.u32 [$r9], $r8;
	@$p2.neu set.ne.s32.s32 $p2/$o127, $r21, $r24;
	add.u32 $ofs1, $ofs2, 0x000008ac;
	mul.f32 $r8, s[$ofs1+0x0000], 0x3f5019c3;
	@$p2.neu shl.u32 $r9, $r21, 0x00000002;
	@$p2.neu add.u32 $r9, s[0x0018], $r9;
	@$p2.neu add.u32 $r21, $r21, $r15;
	@$p2.neu st.global.u32 [$r9], $r8;
	@$p2.neu set.ne.s32.s32 $p2/$o127, $r21, $r24;
	add.u32 $ofs1, $ofs2, 0x000009bc;
	mul.f32 $r8, s[$ofs1+0x0000], 0x3f9d7658;
	@$p2.neu shl.u32 $r9, $r21, 0x00000002;
	@$p2.neu add.u32 $r9, s[0x0018], $r9;
	@$p2.neu st.global.u32 [$r9], $r8;
	@$p2.neu add.u32 $r21, $r21, $r23;
	mov.u32 s[$ofs2+0x002c], $r1;
	mov.u32 s[$ofs2+0x013c], $r2;
	mov.u32 s[$ofs2+0x024c], $r3;
	mov.u32 s[$ofs2+0x035c], $r4;
	mov.u32 s[$ofs2+0x046c], $r5;
	mov.u32 s[$ofs2+0x057c], $r6;
	mov.u32 s[$ofs2+0x068c], $r7;
	bar.sync 0x00000000;
	add.u32 $r27, $r27, 0x00000001;
	set.ne.s32.s32 $p2/$o127, s[0x0028], $r27;
	@$p2.ne bra l0x00003170;
	retp;
	l0x00003c80: cvt.u32.u16 $r2, %ctaid.y;
	set.eq.u32.u32 $p3/$o127, $r2, $r124;
	@$p3.eq bra l0x00003e68;
	ssy 0x00003ce8;
	@$p2.eq bra l0x00003cc8;
	shl.u32 $r0, s[0x0020], 0x00000001;
	add.u32 $r0, $r0, -$r9;
	add.u32 $r2, $r0, 0xfffffffe;
	bra l0x00003ce8;
	l0x00003cc8: add.u32 $r2, -$r9, 0x00000000;
	set.lt.s32.s32 $p3/$o127, $r9, $r124;
	@$p3 mov.u32 $r0, $p3;
	@$p3.equ mov.u32 $r2, $r9;
	l0x00003ce8: mov.u32 $r0, s[0x0020];
	mul.wide.u16 $r1, $r0.lo, $r7.hi;
	mad.wide.u16 $r1, $r0.hi, $r7.lo, $r1;
	shl.u32 $r1, $r1, 0x00000010;
	mad.wide.u16 $r0, $r0.lo, $r7.lo, $r1;
	add.half.u32 $r0, $r0, $r2;
	add.half.u32 $r2, s[0x0020], $r0;
	shl.u32 $r0, $r0, 0x00000002;
	shl.u32 $r10, $r2, 0x00000002;
	add.u32 $r0, s[0x0010], $r0;
	ld.global.u32 $r1, [$r0];
	add.u32 $r0, s[0x0010], $r10;
	ld.global.u32 $r0, [$r0];
	add.half.u32 $r2, s[0x0020], $r2;
	add.half.u32 $r10, s[0x0020], $r2;
	mov.u32 s[$ofs3+0x046c], $r1;
	add.u32 $r11, s[0x0020], $r10;
	shl.u32 $r1, $r2, 0x00000002;
	mov.u32 s[$ofs3+0x057c], $r0;
	shl.u32 $r10, $r10, 0x00000002;
	shl.u32 $r11, $r11, 0x00000002;
	add.u32 $r1, s[0x0010], $r1;
	ld.global.u32 $r2, [$r1];
	mov.u32 s[$ofs3+0x035c], $r0;
	add.u32 $r0, s[0x0010], $r10;
	ld.global.u32 $r1, [$r0];
	add.u32 $r0, s[0x0010], $r11;
	ld.global.u32 $r0, [$r0];
	mov.u32 s[$ofs3+0x068c], $r2;
	mov.u32 s[$ofs3+0x024c], $r2;
	mov.u32 s[$ofs3+0x013c], $r1;
	mov.u32 s[$ofs3+0x002c], $r0;
	ssy 0x00003e20;
	@$p2.eq bra l0x00003e08;
	shl.u32 $r0, s[0x0020], 0x00000001;
	add.u32 $r0, $r0, -$r9;
	add.u32 $r2, $r0, 0xfffffffe;
	bra l0x00003e20;
	l0x00003e08: add.u32 $r2, -$r9, 0x00000000;
	set.lt.s32.s32 $p2/$o127, $r9, $r124;
	@$p2.equ mov.u32 $r2, $r9;
	l0x00003e20: nop;
	add.u32 $r1, $r7, 0x00000003;
	mov.u32 $r0, s[0x0020];
	mul.wide.u16 $r9, $r0.lo, $r1.hi;
	mad.wide.u16 $r9, $r0.hi, $r1.lo, $r9;
	shl.u32 $r9, $r9, 0x00000010;
	mad.wide.u16 $r0, $r0.lo, $r1.lo, $r9;
	add.half.u32 $r0, $r0, $r2;
	add.half.u32 $r9, -s[0x0020], $r0;
	bra l0x00003ff0;
	l0x00003e68: ssy 0x00003eb0;
	@$p2.eq bra l0x00003e98;
	shl.u32 $r0, s[0x0020], 0x00000001;
	add.u32 $r0, $r0, -$r9;
	add.u32 $r2, $r0, 0xfffffffe;
	bra l0x00003eb0;
	l0x00003e98: add.u32 $r2, -$r9, 0x00000000;
	set.lt.s32.s32 $p2/$o127, $r9, $r124;
	@$p2.equ mov.u32 $r2, $r9;
	l0x00003eb0: mov.u32 $r0, s[0x0020];
	add.u32 $r1, $r7, 0xfffffffc;
	mul.wide.u16 $r9, $r1.lo, $r0.hi;
	mad.wide.u16 $r9, $r1.hi, $r0.lo, $r9;
	shl.u32 $r9, $r9, 0x00000010;
	mad.wide.u16 $r0, $r1.lo, $r0.lo, $r9;
	add.half.u32 $r0, $r0, $r2;
	add.half.u32 $r1, s[0x0020], $r0;
	add.u32 $r9, s[0x0020], $r1;
	shl.u32 $r0, $r0, 0x00000002;
	shl.u32 $r1, $r1, 0x00000002;
	shl.u32 $r10, $r9, 0x00000002;
	add.u32 $r0, s[0x0010], $r0;
	ld.global.u32 $r2, [$r0];
	add.u32 $r0, s[0x0010], $r1;
	ld.global.u32 $r1, [$r0];
	add.u32 $r0, s[0x0010], $r10;
	ld.global.u32 $r0, [$r0];
	add.u32 $r10, s[0x0020], $r9;
	mov.u32 s[$ofs3+0x002c], $r2;
	add.u32 $r2, s[0x0020], $r10;
	mov.u32 s[$ofs3+0x013c], $r1;
	add.u32 $r11, s[0x0020], $r2;
	mov.u32 s[$ofs3+0x024c], $r0;
	add.u32 $r9, s[0x0020], $r11;
	shl.u32 $r0, $r10, 0x00000002;
	shl.u32 $r1, $r2, 0x00000002;
	shl.u32 $r11, $r11, 0x00000002;
	shl.u32 $r12, $r9, 0x00000002;
	add.u32 $r0, s[0x0010], $r0;
	ld.global.u32 $r10, [$r0];
	add.u32 $r0, s[0x0010], $r1;
	ld.global.u32 $r2, [$r0];
	add.u32 $r0, s[0x0010], $r11;
	ld.global.u32 $r1, [$r0];
	add.u32 $r0, s[0x0010], $r12;
	ld.global.u32 $r0, [$r0];
	mov.u32 s[$ofs3+0x035c], $r10;
	mov.u32 s[$ofs3+0x046c], $r2;
	mov.u32 s[$ofs3+0x057c], $r1;
	mov.u32 s[$ofs3+0x068c], $r0;
	l0x00003ff0: ssy 0x00004440;
	@$p0.eq bra l0x00004420;
	add.u32 $r0, $r17, 0xfffffff9;
	set.le.u32.u32 $p2/$o127, $r17, constant1_ZN8dwt_cuda12fdwt97KernelILi128ELi6EEEvPKfPfiii[0x0014];
	@$p2.ne add.u32 $r0, $r17, constant1_ZN8dwt_cuda12fdwt97KernelILi128ELi6EEEvPKfPfiii[0x0018];
	add.u32 $r1, $r0, 0x00000004;
	mov.u32 $r10, 0x00000378;
	and.b32 $r2, $r1, constant1_ZN8dwt_cuda12fdwt97KernelILi128ELi6EEEvPKfPfiii[0x0000];
	mul.wide.u16 $r12, $r2.lo, $r10.hi;
	shr.s32 $r11, $r1, 0x0000001f;
	mad.wide.u16 $r12, $r2.hi, $r10.lo, $r12;
	and.b32 $r11, $r11, constant1_ZN8dwt_cuda12fdwt97KernelILi128ELi6EEEvPKfPfiii[0x0000];
	shl.u32 $r12, $r12, 0x00000010;
	add.u32 $r1, $r1, $r11;
	mad.wide.u16 $r2, $r2.lo, $r10.lo, $r12;
	shr.s32 $r1, $r1, 0x00000001;
	add.u32 $r1, $r2, $r1;
	shl.b32 $ofs1, $r1, 0x00000002;
	mov.u32 $r24, $ofs1;
	add.u32 $r1, $r0, $r3;
	set.le.s32.s32 $p2/$o127, s[0x0020], $r1;
	cvt.u32.u16 $r2, %ctaid.y;
	set.eq.u32.u32 $p3/$o127, $r2, $r124;
	@$p3.eq bra l0x00004280;
	ssy 0x000040f8;
	@$p2.eq bra l0x000040e0;
	shl.u32 $r0, s[0x0020], 0x00000001;
	add.u32 $r0, $r0, -$r1;
	add.u32 $r2, $r0, 0xfffffffe;
	bra l0x000040f8;
	l0x000040e0: add.u32 $r2, -$r1, 0x00000000;
	set.lt.s32.s32 $p3/$o127, $r1, $r124;
	@$p3.equ mov.u32 $r2, $r1;
	l0x000040f8: mov.u32 $r0, s[0x0020];
	mul.wide.u16 $r3, $r0.lo, $r7.hi;
	mad.wide.u16 $r3, $r0.hi, $r7.lo, $r3;
	shl.u32 $r3, $r3, 0x00000010;
	mad.wide.u16 $r0, $r0.lo, $r7.lo, $r3;
	add.half.u32 $r0, $r0, $r2;
	add.half.u32 $r3, s[0x0020], $r0;
	shl.u32 $r0, $r0, 0x00000002;
	shl.u32 $r10, $r3, 0x00000002;
	add.u32 $r0, s[0x0010], $r0;
	ld.global.u32 $r2, [$r0];
	add.u32 $r0, s[0x0010], $r10;
	ld.global.u32 $r0, [$r0];
	add.half.u32 $r3, s[0x0020], $r3;
	add.half.u32 $r10, s[0x0020], $r3;
	shl.b32 $ofs1, $r24, 0x0;
	mov.u32 s[$ofs1+0x046c], $r2;
	add.u32 $r11, s[0x0020], $r10;
	shl.u32 $r2, $r3, 0x00000002;
	mov.u32 s[$ofs1+0x057c], $r0;
	shl.u32 $r10, $r10, 0x00000002;
	shl.u32 $r11, $r11, 0x00000002;
	add.u32 $r2, s[0x0010], $r2;
	ld.global.u32 $r3, [$r2];
	mov.u32 s[$ofs1+0x035c], $r0;
	add.u32 $r0, s[0x0010], $r10;
	ld.global.u32 $r2, [$r0];
	add.u32 $r0, s[0x0010], $r11;
	ld.global.u32 $r0, [$r0];
	mov.u32 s[$ofs1+0x068c], $r3;
	mov.u32 s[$ofs1+0x024c], $r3;
	mov.u32 s[$ofs1+0x013c], $r2;
	mov.u32 s[$ofs1+0x002c], $r0;
	ssy 0x00004238;
	@$p2.eq bra l0x00004220;
	shl.u32 $r0, s[0x0020], 0x00000001;
	add.u32 $r0, $r0, -$r1;
	add.u32 $r2, $r0, 0xfffffffe;
	bra l0x00004238;
	l0x00004220: add.u32 $r2, -$r1, 0x00000000;
	set.lt.s32.s32 $p2/$o127, $r1, $r124;
	@$p2.equ mov.u32 $r2, $r1;
	l0x00004238: nop;
	add.u32 $r1, $r7, 0x00000003;
	mov.u32 $r0, s[0x0020];
	mul.wide.u16 $r3, $r0.lo, $r1.hi;
	mad.wide.u16 $r3, $r0.hi, $r1.lo, $r3;
	shl.u32 $r3, $r3, 0x00000010;
	mad.wide.u16 $r0, $r0.lo, $r1.lo, $r3;
	add.half.u32 $r0, $r0, $r2;
	add.half.u32 $r23, -s[0x0020], $r0;
	bra l0x00004410;
	l0x00004280: ssy 0x000042c8;
	@$p2.eq bra l0x000042b0;
	shl.u32 $r0, s[0x0020], 0x00000001;
	add.u32 $r0, $r0, -$r1;
	add.u32 $r2, $r0, 0xfffffffe;
	bra l0x000042c8;
	l0x000042b0: add.u32 $r2, -$r1, 0x00000000;
	set.lt.s32.s32 $p2/$o127, $r1, $r124;
	@$p2.equ mov.u32 $r2, $r1;
	l0x000042c8: mov.u32 $r0, s[0x0020];
	add.u32 $r1, $r7, 0xfffffffc;
	mul.wide.u16 $r3, $r1.lo, $r0.hi;
	mad.wide.u16 $r3, $r1.hi, $r0.lo, $r3;
	shl.u32 $r3, $r3, 0x00000010;
	mad.wide.u16 $r0, $r1.lo, $r0.lo, $r3;
	add.half.u32 $r0, $r0, $r2;
	add.half.u32 $r1, s[0x0020], $r0;
	add.u32 $r3, s[0x0020], $r1;
	shl.u32 $r0, $r0, 0x00000002;
	shl.u32 $r1, $r1, 0x00000002;
	shl.u32 $r10, $r3, 0x00000002;
	add.u32 $r0, s[0x0010], $r0;
	ld.global.u32 $r2, [$r0];
	add.u32 $r0, s[0x0010], $r1;
	ld.global.u32 $r1, [$r0];
	add.u32 $r0, s[0x0010], $r10;
	ld.global.u32 $r0, [$r0];
	add.u32 $r3, s[0x0020], $r3;
	shl.b32 $ofs1, $r24, 0x0;
	mov.u32 s[$ofs1+0x002c], $r2;
	add.u32 $r2, s[0x0020], $r3;
	mov.u32 s[$ofs1+0x013c], $r1;
	add.u32 $r10, s[0x0020], $r2;
	mov.u32 s[$ofs1+0x024c], $r0;
	add.u32 $r23, s[0x0020], $r10;
	shl.u32 $r0, $r3, 0x00000002;
	shl.u32 $r1, $r2, 0x00000002;
	shl.u32 $r10, $r10, 0x00000002;
	shl.u32 $r11, $r23, 0x00000002;
	add.u32 $r0, s[0x0010], $r0;
	ld.global.u32 $r3, [$r0];
	add.u32 $r0, s[0x0010], $r1;
	ld.global.u32 $r2, [$r0];
	add.u32 $r0, s[0x0010], $r10;
	ld.global.u32 $r1, [$r0];
	add.u32 $r0, s[0x0010], $r11;
	ld.global.u32 $r0, [$r0];
	mov.u32 s[$ofs1+0x035c], $r3;
	mov.u32 s[$ofs1+0x046c], $r2;
	mov.u32 s[$ofs1+0x057c], $r1;
	mov.u32 s[$ofs1+0x068c], $r0;
	l0x00004410: mov.u32 $r0, s[0x0020];
	bra l0x00004440;
	l0x00004420: shl.b32 $ofs1, $r124, 0x00000002;
	mov.u32 $r24, $ofs1;
	mov.u32 $r23, $r124;
	mov.u32 $r0, $r124;
	l0x00004440: nop;
	bar.sync 0x00000000;
	shl.b32 $ofs2, $r17, 0x00000002;
	add.u32 $ofs1, $ofs2, 0x00000e0c;
	mov.half.u32 $r1, s[$ofs2+0x0030];
	mov.half.u32 $r2, s[$ofs1+0x0000];
	add.f32 $r1, s[$ofs2+0x002c], $r1;
	mad.f32 $r2, $r1, 0xbfcb0673, $r2;
	mov.u32 s[$ofs2+0x0e0c], $r2;
	add.u32 $ofs1, $ofs2, 0x0000022c;
	mov.half.u32 $r1, s[$ofs1+0x0004];
	add.half.f32 $r2, s[$ofs1+0x0000], $r1;
	add.u32 $ofs1, $ofs2, 0x0000100c;
	mov.u32 $r1, s[$ofs1+0x0000];
	mad.f32 $r1, $r2, 0xbfcb0673, $r1;
	mov.u32 s[$ofs2+0x100c], $r1;
	add.u32 $ofs1, $ofs2, 0x0000042c;
	mov.half.u32 $r1, s[$ofs1+0x0004];
	add.half.f32 $r2, s[$ofs1+0x0000], $r1;
	add.u32 $ofs1, $ofs2, 0x0000120c;
	mov.u32 $r1, s[$ofs1+0x0000];
	mad.f32 $r1, $r2, 0xbfcb0673, $r1;
	mov.u32 s[$ofs2+0x120c], $r1;
	ssy 0x00004528;
	@$p1.eq bra l0x00004528;
	shl.b32 $ofs2, $r17, 0x00000002;
	add.u32 $ofs1, $ofs2, 0x0000062c;
	mov.half.u32 $r1, s[$ofs1+0x0004];
	add.half.f32 $r2, s[$ofs1+0x0000], $r1;
	add.u32 $ofs1, $ofs2, 0x0000140c;
	mov.u32 $r1, s[$ofs1+0x0000];
	mad.f32 $r1, $r2, 0xbfcb0673, $r1;
	mov.u32 s[$ofs2+0x140c], $r1;
	l0x00004528: nop;
	bar.sync 0x00000000;
	shl.b32 $ofs2, $r17, 0x00000002;
	add.u32 $ofs1, $ofs2, 0x00000e0c;
	mov.half.u32 $r1, s[$ofs1+0x0004];
	mov.half.u32 $r2, s[$ofs2+0x0030];
	add.f32 $r1, s[$ofs1+0x0000], $r1;
	mad.f32 $r2, $r1, 0xbd5901ae, $r2;
	mov.u32 s[$ofs2+0x0030], $r2;
	add.u32 $ofs1, $ofs2, 0x0000100c;
	mov.half.u32 $r1, s[$ofs1+0x0004];
	add.half.f32 $r2, s[$ofs1+0x0000], $r1;
	add.u32 $ofs1, $ofs2, 0x00000230;
	mov.u32 $r1, s[$ofs1+0x0000];
	mad.f32 $r1, $r2, 0xbd5901ae, $r1;
	mov.u32 s[$ofs2+0x0230], $r1;
	add.u32 $ofs1, $ofs2, 0x0000120c;
	mov.half.u32 $r1, s[$ofs1+0x0004];
	add.half.f32 $r2, s[$ofs1+0x0000], $r1;
	add.u32 $ofs1, $ofs2, 0x00000430;
	mov.u32 $r1, s[$ofs1+0x0000];
	mad.f32 $r1, $r2, 0xbd5901ae, $r1;
	mov.u32 s[$ofs2+0x0430], $r1;
	ssy 0x00004610;
	@$p1.eq bra l0x00004610;
	shl.b32 $ofs2, $r17, 0x00000002;
	add.u32 $ofs1, $ofs2, 0x0000140c;
	mov.half.u32 $r1, s[$ofs1+0x0004];
	add.half.f32 $r2, s[$ofs1+0x0000], $r1;
	add.u32 $ofs1, $ofs2, 0x00000630;
	mov.u32 $r1, s[$ofs1+0x0000];
	mad.f32 $r1, $r2, 0xbd5901ae, $r1;
	mov.u32 s[$ofs2+0x0630], $r1;
	l0x00004610: nop;
	bar.sync 0x00000000;
	shl.b32 $ofs2, $r17, 0x00000002;
	add.u32 $ofs1, $ofs2, 0x00000e0c;
	mov.half.u32 $r1, s[$ofs2+0x0030];
	mov.half.u32 $r2, s[$ofs1+0x0000];
	add.f32 $r1, s[$ofs2+0x002c], $r1;
	mad.f32 $r2, $r1, 0x3f620676, $r2;
	mov.u32 s[$ofs2+0x0e0c], $r2;
	add.u32 $ofs1, $ofs2, 0x0000022c;
	mov.half.u32 $r1, s[$ofs1+0x0004];
	add.half.f32 $r2, s[$ofs1+0x0000], $r1;
	add.u32 $ofs1, $ofs2, 0x0000100c;
	mov.u32 $r1, s[$ofs1+0x0000];
	mad.f32 $r1, $r2, 0x3f620676, $r1;
	mov.u32 s[$ofs2+0x100c], $r1;
	add.u32 $ofs1, $ofs2, 0x0000042c;
	mov.half.u32 $r1, s[$ofs1+0x0004];
	add.half.f32 $r2, s[$ofs1+0x0000], $r1;
	add.u32 $ofs1, $ofs2, 0x0000120c;
	mov.u32 $r1, s[$ofs1+0x0000];
	mad.f32 $r1, $r2, 0x3f620676, $r1;
	mov.u32 s[$ofs2+0x120c], $r1;
	ssy 0x000046f8;
	@$p1.eq bra l0x000046f8;
	shl.b32 $ofs2, $r17, 0x00000002;
	add.u32 $ofs1, $ofs2, 0x0000062c;
	mov.half.u32 $r1, s[$ofs1+0x0004];
	add.half.f32 $r2, s[$ofs1+0x0000], $r1;
	add.u32 $ofs1, $ofs2, 0x0000140c;
	mov.u32 $r1, s[$ofs1+0x0000];
	mad.f32 $r1, $r2, 0x3f620676, $r1;
	mov.u32 s[$ofs2+0x140c], $r1;
	l0x000046f8: nop;
	bar.sync 0x00000000;
	shl.b32 $ofs2, $r17, 0x00000002;
	add.u32 $ofs1, $ofs2, 0x00000e0c;
	mov.half.u32 $r1, s[$ofs1+0x0004];
	mov.half.u32 $r2, s[$ofs2+0x0030];
	add.f32 $r1, s[$ofs1+0x0000], $r1;
	mad.f32 $r2, $r1, 0x3ee31355, $r2;
	mov.u32 s[$ofs2+0x0030], $r2;
	add.u32 $ofs1, $ofs2, 0x0000100c;
	mov.half.u32 $r1, s[$ofs1+0x0004];
	add.half.f32 $r2, s[$ofs1+0x0000], $r1;
	add.u32 $ofs1, $ofs2, 0x00000230;
	mov.u32 $r1, s[$ofs1+0x0000];
	mad.f32 $r1, $r2, 0x3ee31355, $r1;
	mov.u32 s[$ofs2+0x0230], $r1;
	add.u32 $ofs1, $ofs2, 0x0000120c;
	mov.half.u32 $r1, s[$ofs1+0x0004];
	add.half.f32 $r2, s[$ofs1+0x0000], $r1;
	add.u32 $ofs1, $ofs2, 0x00000430;
	mov.u32 $r1, s[$ofs1+0x0000];
	mad.f32 $r1, $r2, 0x3ee31355, $r1;
	mov.u32 s[$ofs2+0x0430], $r1;
	ssy 0x000047e0;
	@$p1.eq bra l0x000047e0;
	shl.b32 $ofs2, $r17, 0x00000002;
	add.u32 $ofs1, $ofs2, 0x0000140c;
	mov.half.u32 $r1, s[$ofs1+0x0004];
	add.half.f32 $r2, s[$ofs1+0x0000], $r1;
	add.u32 $ofs1, $ofs2, 0x00000630;
	mov.u32 $r1, s[$ofs1+0x0000];
	mad.f32 $r1, $r2, 0x3ee31355, $r1;
	mov.u32 s[$ofs2+0x0630], $r1;
	l0x000047e0: nop;
	bar.sync 0x00000000;
	shl.b32 $ofs2, $r17, 0x00000002;
	mul.f32 $r1, s[$ofs2+0x002c], 0x3f5019c3;
	mov.u32 s[$ofs2+0x002c], $r1;
	add.u32 $ofs1, $ofs2, 0x00000e0c;
	mul.f32 $r1, s[$ofs1+0x0000], 0x3f9d7658;
	mov.u32 s[$ofs2+0x0e0c], $r1;
	add.u32 $ofs1, $ofs2, 0x0000022c;
	mul.f32 $r1, s[$ofs1+0x0000], 0x3f5019c3;
	mov.u32 s[$ofs2+0x022c], $r1;
	add.u32 $ofs1, $ofs2, 0x0000100c;
	mul.f32 $r1, s[$ofs1+0x0000], 0x3f9d7658;
	mov.u32 s[$ofs2+0x100c], $r1;
	add.u32 $ofs1, $ofs2, 0x0000042c;
	mul.f32 $r1, s[$ofs1+0x0000], 0x3f5019c3;
	mov.u32 s[$ofs2+0x042c], $r1;
	add.u32 $ofs1, $ofs2, 0x0000120c;
	mul.f32 $r1, s[$ofs1+0x0000], 0x3f9d7658;
	mov.u32 s[$ofs2+0x120c], $r1;
	ssy 0x000048d0;
	mov.pred $p2, $r6;
	@$p2.eq bra l0x000048d0;
	shl.b32 $ofs2, $r17, 0x00000002;
	add.u32 $ofs1, $ofs2, 0x0000062c;
	mul.f32 $r1, s[$ofs1+0x0000], 0x3f5019c3;
	mov.u32 s[$ofs2+0x062c], $r1;
	add.u32 $ofs1, $ofs2, 0x0000140c;
	mul.f32 $r1, s[$ofs1+0x0000], 0x3f9d7658;
	mov.u32 s[$ofs2+0x140c], $r1;
	l0x000048d0: nop;
	bar.sync 0x00000000;
	ssy 0x00004b08;
	mov.pred $p3, $r8;
	@$p3.eq bra l0x00004af0;
	shr.s32 $r2, s[0x0024], 0x0000001f;
	shr.s32 $r1, $r5, 0x0000001f;
	and.b32 $r3, $r2, constant1_ZN8dwt_cuda12fdwt97KernelILi128ELi6EEEvPKfPfiii[0x0000];
	shr.s32 $r2, s[0x0020], 0x0000001f;
	and.b32 $r1, $r1, constant1_ZN8dwt_cuda12fdwt97KernelILi128ELi6EEEvPKfPfiii[0x0000];
	add.u32 $r3, s[0x0024], $r3;
	and.b32 $p2|$o127, $r5, constant1_ZN8dwt_cuda12fdwt97KernelILi128ELi6EEEvPKfPfiii[0x0000];
	and.b32 $r2, $r2, constant1_ZN8dwt_cuda12fdwt97KernelILi128ELi6EEEvPKfPfiii[0x0000];
	add.u32 $r1, $r1, $r5;
	and.b32 $r6, $r3, constant1_ZN8dwt_cuda12fdwt97KernelILi128ELi6EEEvPKfPfiii[0x002c];
	ssy 0x00004a78;
	add.u32 $r2, s[0x0020], $r2;
	shr.s32 $r5, $r1, 0x00000001;
	add.u32 $r6, s[0x0024], -$r6;
	shr.s32 $r3, $r3, 0x00000001;
	shr.s32 $r1, $r2, 0x00000001;
	set.ne.s32.s32 $p1/$o127, $r6, $r124;
	@$p2.eq bra l0x00004a38;
	shr.s32 $r2, s[0x0020], 0x0000001f;
	and.b32 $r2, $r2, constant1_ZN8dwt_cuda12fdwt97KernelILi128ELi6EEEvPKfPfiii[0x0000];
	add.u32 $r2, s[0x0020], $r2;
	and.b32 $r6, $r2, constant1_ZN8dwt_cuda12fdwt97KernelILi128ELi6EEEvPKfPfiii[0x002c];
	mov.u32 $r2, $r1;
	add.u32 $p2|$o127, s[0x0020], -$r6;
	@$p2.neu add.u32 $r1, $r1, constant1_ZN8dwt_cuda12fdwt97KernelILi128ELi6EEEvPKfPfiii[0x0000];
	@$p1.neu add.u32 $r3, $r3, constant1_ZN8dwt_cuda12fdwt97KernelILi128ELi6EEEvPKfPfiii[0x0000];
	mov.half.u32 $r6, s[0x0020];
	mov.half.u32 $r8, s[0x0024];
	mul.wide.u16 $r10, $r6.lo, $r8.hi;
	mad.wide.u16 $r10, $r6.hi, $r8.lo, $r10;
	shl.u32 $r11, $r10, 0x00000010;
	mul.wide.u16 $r10, $r1.lo, $r3.hi;
	mad.wide.u16 $r8, $r6.lo, $r8.lo, $r11;
	mad.wide.u16 $r6, $r1.hi, $r3.lo, $r10;
	shr.s32 $r10, $r8, 0x0000001f;
	shl.u32 $r6, $r6, 0x00000010;
	and.b32 $r10, $r10, constant1_ZN8dwt_cuda12fdwt97KernelILi128ELi6EEEvPKfPfiii[0x0000];
	mad.wide.u16 $r1, $r1.lo, $r3.lo, $r6;
	add.half.u32 $r3, $r10, $r8;
	add.half.u32 $r5, $r1, $r5;
	shr.s32 $r15, $r3, 0x00000001;
	bra l0x00004a78;
	l0x00004a38: and.b32 $r2, s[0x0020], constant1_ZN8dwt_cuda12fdwt97KernelILi128ELi6EEEvPKfPfiii[0x0000];
	add.u32 $r2, $r1, $r2;
	@$p1.neu add.u32 $r3, $r3, constant1_ZN8dwt_cuda12fdwt97KernelILi128ELi6EEEvPKfPfiii[0x0000];
	mov.u32 $r1, s[0x0020];
	mul.wide.u16 $r6, $r3.lo, $r1.hi;
	mad.wide.u16 $r6, $r3.hi, $r1.lo, $r6;
	shl.u32 $r6, $r6, 0x00000010;
	mad.wide.u16 $r15, $r3.lo, $r1.lo, $r6;
	l0x00004a78: shr.s32 $r1, $r7, 0x0000001f;
	and.b32 $r1, $r1, constant1_ZN8dwt_cuda12fdwt97KernelILi128ELi6EEEvPKfPfiii[0x0000];
	add.u32 $r1, $r1, $r7;
	and.b32 $r3, $r7, constant1_ZN8dwt_cuda12fdwt97KernelILi128ELi6EEEvPKfPfiii[0x0000];
	shr.s32 $r1, $r1, 0x00000001;
	mul.half.lo.u16 $r6, $r2.lo, $r1.hi;
	mul.half.lo.u16 $r7, $r15.lo, $r3.hi;
	mad.wide.u16 $r6, $r2.hi, $r1.lo, $r6;
	mad.wide.u16 $r7, $r15.hi, $r3.lo, $r7;
	shl.u32 $r6, $r6, 0x00000010;
	shl.u32 $r7, $r7, 0x00000010;
	mad.wide.u16 $r1, $r2.lo, $r1.lo, $r6;
	mad.wide.u16 $r3, $r15.lo, $r3.lo, $r7;
	add.half.u32 $r1, $r1, $r3;
	add.half.u32 $r1, $r5, $r1;
	add.u32 $r25, $r2, -$r15;
	bra l0x00004b08;
	l0x00004af0: mov.u32 $r1, $r124;
	mov.u32 $r25, $r124;
	mov.u32 $r15, $r124;
	l0x00004b08: set.gt.s32.s32 $p1/$o127, s[0x0028], $r124;
	@$p1.eq retp;
	add.u32 $r2, $r4, 0x00000004;
	mov.u32 $r5, 0x00000378;
	and.b32 $r4, $r2, constant1_ZN8dwt_cuda12fdwt97KernelILi128ELi6EEEvPKfPfiii[0x0000];
	mul.wide.u16 $r6, $r4.lo, $r5.hi;
	shr.s32 $r3, $r2, 0x0000001f;
	mad.wide.u16 $r6, $r4.hi, $r5.lo, $r6;
	and.b32 $r3, $r3, constant1_ZN8dwt_cuda12fdwt97KernelILi128ELi6EEEvPKfPfiii[0x0000];
	shl.u32 $r6, $r6, 0x00000010;
	add.u32 $r2, $r2, $r3;
	mad.wide.u16 $r3, $r4.lo, $r5.lo, $r6;
	shr.s32 $r2, $r2, 0x00000001;
	add.u32 $r2, $r3, $r2;
	shl.b32 $ofs2, $r2, 0x00000002;
	set.lt.u32.u32 $p1/$o127, $r17, constant1_ZN8dwt_cuda12fdwt97KernelILi128ELi6EEEvPKfPfiii[0x0030];
	shl.u32 $r3, $r9, 0x00000002;
	set.lt.u32.u32 $p2/$o127, $r17, constant1_ZN8dwt_cuda12fdwt97KernelILi128ELi6EEEvPKfPfiii[0x0034];
	mov.u32 $r2, $r124;
	st.local.u32 [0x0004], $r2;
	add.u32 $r2, s[0x0010], $r3;
	st.local.u32 [0x0000], $r2;
	l0x00004bb8: ld.local.u32 $r2, [0x0000];
	shl.u32 $r3, s[0x0020], 0x00000002;
	add.u32 $r2, $r2, $r3;
	ld.global.u32 $r5, [$r2];
	add.u32 $r2, $r2, $r3;
	ld.global.u32 $r4, [$r2];
	add.u32 $r6, $r2, $r3;
	ld.global.u32 $r2, [$r6];
	mov.u32 s[$ofs3+0x079c], $r5;
	add.u32 $r6, $r6, $r3;
	ld.global.u32 $r5, [$r6];
	mov.u32 s[$ofs3+0x08ac], $r4;
	add.u32 $r6, $r6, $r3;
	ld.global.u32 $r4, [$r6];
	mov.u32 s[$ofs3+0x09bc], $r2;
	add.u32 $r2, $r6, $r3;
	ld.global.u32 $r3, [$r2];
	st.local.u32 [0x0000], $r2;
	mov.u32 s[$ofs3+0x0acc], $r5;
	mov.u32 s[$ofs3+0x0bdc], $r4;
	mov.u32 s[$ofs3+0x0cec], $r3;
	ssy 0x00004d58;
	@$p0.eq bra l0x00004d58;
	add.half.u32 $r2, $r23, $r0;
	add.half.u32 $r3, $r2, $r0;
	add.u32 $r5, $r0, $r3;
	shl.u32 $r4, $r2, 0x00000002;
	shl.u32 $r3, $r3, 0x00000002;
	shl.u32 $r2, $r5, 0x00000002;
	add.u32 $r4, s[0x0010], $r4;
	ld.global.u32 $r4, [$r4];
	add.u32 $r3, s[0x0010], $r3;
	ld.global.u32 $r3, [$r3];
	add.u32 $r2, s[0x0010], $r2;
	ld.global.u32 $r2, [$r2];
	add.half.u32 $r5, $r0, $r5;
	add.half.u32 $r6, $r0, $r5;
	shl.b32 $ofs1, $r24, 0x0;
	mov.u32 s[$ofs1+0x079c], $r4;
	add.u32 $r23, $r0, $r6;
	shl.u32 $r4, $r5, 0x00000002;
	mov.u32 s[$ofs1+0x08ac], $r3;
	shl.u32 $r3, $r6, 0x00000002;
	shl.u32 $r5, $r23, 0x00000002;
	add.u32 $r4, s[0x0010], $r4;
	ld.global.u32 $r4, [$r4];
	mov.u32 s[$ofs1+0x09bc], $r2;
	add.u32 $r2, s[0x0010], $r3;
	ld.global.u32 $r3, [$r2];
	add.u32 $r2, s[0x0010], $r5;
	ld.global.u32 $r2, [$r2];
	mov.u32 s[$ofs1+0x0acc], $r4;
	mov.u32 s[$ofs1+0x0bdc], $r3;
	mov.u32 s[$ofs1+0x0cec], $r2;
	l0x00004d58: nop;
	bar.sync 0x00000000;
	shl.b32 $ofs4, $r17, 0x00000002;
	add.u32 $ofs1, $ofs4, 0x0000157c;
	mov.u32 $r3, s[$ofs1+0x0000];
	add.u32 $ofs1, $ofs4, 0x0000079c;
	mov.half.u32 $r2, s[$ofs1+0x0004];
	add.half.f32 $r2, s[$ofs1+0x0000], $r2;
	mad.f32 $r3, $r2, 0xbfcb0673, $r3;
	mov.u32 s[$ofs4+0x157c], $r3;
	add.u32 $ofs1, $ofs4, 0x0000177c;
	mov.u32 $r3, s[$ofs1+0x0000];
	add.u32 $ofs1, $ofs4, 0x0000099c;
	mov.half.u32 $r2, s[$ofs1+0x0004];
	add.half.f32 $r2, s[$ofs1+0x0000], $r2;
	mad.f32 $r3, $r2, 0xbfcb0673, $r3;
	mov.u32 s[$ofs4+0x177c], $r3;
	add.u32 $ofs1, $ofs4, 0x0000197c;
	mov.u32 $r3, s[$ofs1+0x0000];
	add.u32 $ofs1, $ofs4, 0x00000b9c;
	mov.half.u32 $r2, s[$ofs1+0x0004];
	add.half.f32 $r2, s[$ofs1+0x0000], $r2;
	mad.f32 $r3, $r2, 0xbfcb0673, $r3;
	mov.u32 s[$ofs4+0x197c], $r3;
	ssy 0x00004e48;
	@$p1.eq bra l0x00004e48;
	shl.b32 $ofs4, $r17, 0x00000002;
	add.u32 $ofs1, $ofs4, 0x00000d9c;
	mov.half.u32 $r2, s[$ofs1+0x0004];
	add.half.f32 $r3, s[$ofs1+0x0000], $r2;
	add.u32 $ofs1, $ofs4, 0x00001b7c;
	mov.u32 $r2, s[$ofs1+0x0000];
	mad.f32 $r2, $r3, 0xbfcb0673, $r2;
	mov.u32 s[$ofs4+0x1b7c], $r2;
	l0x00004e48: nop;
	bar.sync 0x00000000;
	shl.b32 $ofs4, $r17, 0x00000002;
	add.u32 $ofs1, $ofs4, 0x000007a0;
	mov.u32 $r3, s[$ofs1+0x0000];
	add.u32 $ofs1, $ofs4, 0x0000157c;
	mov.half.u32 $r2, s[$ofs1+0x0004];
	add.half.f32 $r2, s[$ofs1+0x0000], $r2;
	mad.f32 $r3, $r2, 0xbd5901ae, $r3;
	mov.u32 s[$ofs4+0x07a0], $r3;
	add.u32 $ofs1, $ofs4, 0x000009a0;
	mov.u32 $r3, s[$ofs1+0x0000];
	add.u32 $ofs1, $ofs4, 0x0000177c;
	mov.half.u32 $r2, s[$ofs1+0x0004];
	add.half.f32 $r2, s[$ofs1+0x0000], $r2;
	mad.f32 $r3, $r2, 0xbd5901ae, $r3;
	mov.u32 s[$ofs4+0x09a0], $r3;
	add.u32 $ofs1, $ofs4, 0x00000ba0;
	mov.u32 $r3, s[$ofs1+0x0000];
	add.u32 $ofs1, $ofs4, 0x0000197c;
	mov.half.u32 $r2, s[$ofs1+0x0004];
	add.half.f32 $r2, s[$ofs1+0x0000], $r2;
	mad.f32 $r3, $r2, 0xbd5901ae, $r3;
	mov.u32 s[$ofs4+0x0ba0], $r3;
	ssy 0x00004f38;
	@$p1.eq bra l0x00004f38;
	shl.b32 $ofs4, $r17, 0x00000002;
	add.u32 $ofs1, $ofs4, 0x00001b7c;
	mov.half.u32 $r2, s[$ofs1+0x0004];
	add.half.f32 $r3, s[$ofs1+0x0000], $r2;
	add.u32 $ofs1, $ofs4, 0x00000da0;
	mov.u32 $r2, s[$ofs1+0x0000];
	mad.f32 $r2, $r3, 0xbd5901ae, $r2;
	mov.u32 s[$ofs4+0x0da0], $r2;
	l0x00004f38: nop;
	bar.sync 0x00000000;
	shl.b32 $ofs4, $r17, 0x00000002;
	add.u32 $ofs1, $ofs4, 0x0000157c;
	mov.u32 $r3, s[$ofs1+0x0000];
	add.u32 $ofs1, $ofs4, 0x0000079c;
	mov.half.u32 $r2, s[$ofs1+0x0004];
	add.half.f32 $r2, s[$ofs1+0x0000], $r2;
	mad.f32 $r3, $r2, 0x3f620676, $r3;
	mov.u32 s[$ofs4+0x157c], $r3;
	add.u32 $ofs1, $ofs4, 0x0000177c;
	mov.u32 $r3, s[$ofs1+0x0000];
	add.u32 $ofs1, $ofs4, 0x0000099c;
	mov.half.u32 $r2, s[$ofs1+0x0004];
	add.half.f32 $r2, s[$ofs1+0x0000], $r2;
	mad.f32 $r3, $r2, 0x3f620676, $r3;
	mov.u32 s[$ofs4+0x177c], $r3;
	add.u32 $ofs1, $ofs4, 0x0000197c;
	mov.u32 $r3, s[$ofs1+0x0000];
	add.u32 $ofs1, $ofs4, 0x00000b9c;
	mov.half.u32 $r2, s[$ofs1+0x0004];
	add.half.f32 $r2, s[$ofs1+0x0000], $r2;
	mad.f32 $r3, $r2, 0x3f620676, $r3;
	mov.u32 s[$ofs4+0x197c], $r3;
	ssy 0x00005028;
	@$p1.eq bra l0x00005028;
	shl.b32 $ofs4, $r17, 0x00000002;
	add.u32 $ofs1, $ofs4, 0x00000d9c;
	mov.half.u32 $r2, s[$ofs1+0x0004];
	add.half.f32 $r3, s[$ofs1+0x0000], $r2;
	add.u32 $ofs1, $ofs4, 0x00001b7c;
	mov.u32 $r2, s[$ofs1+0x0000];
	mad.f32 $r2, $r3, 0x3f620676, $r2;
	mov.u32 s[$ofs4+0x1b7c], $r2;
	l0x00005028: nop;
	bar.sync 0x00000000;
	shl.b32 $ofs4, $r17, 0x00000002;
	add.u32 $ofs1, $ofs4, 0x000007a0;
	mov.u32 $r3, s[$ofs1+0x0000];
	add.u32 $ofs1, $ofs4, 0x0000157c;
	mov.half.u32 $r2, s[$ofs1+0x0004];
	add.half.f32 $r2, s[$ofs1+0x0000], $r2;
	mad.f32 $r3, $r2, 0x3ee31355, $r3;
	mov.u32 s[$ofs4+0x07a0], $r3;
	add.u32 $ofs1, $ofs4, 0x000009a0;
	mov.u32 $r3, s[$ofs1+0x0000];
	add.u32 $ofs1, $ofs4, 0x0000177c;
	mov.half.u32 $r2, s[$ofs1+0x0004];
	add.half.f32 $r2, s[$ofs1+0x0000], $r2;
	mad.f32 $r3, $r2, 0x3ee31355, $r3;
	mov.u32 s[$ofs4+0x09a0], $r3;
	add.u32 $ofs1, $ofs4, 0x00000ba0;
	mov.u32 $r3, s[$ofs1+0x0000];
	add.u32 $ofs1, $ofs4, 0x0000197c;
	mov.half.u32 $r2, s[$ofs1+0x0004];
	add.half.f32 $r2, s[$ofs1+0x0000], $r2;
	mad.f32 $r3, $r2, 0x3ee31355, $r3;
	mov.u32 s[$ofs4+0x0ba0], $r3;
	ssy 0x00005118;
	@$p1.eq bra l0x00005118;
	shl.b32 $ofs4, $r17, 0x00000002;
	add.u32 $ofs1, $ofs4, 0x00001b7c;
	mov.half.u32 $r2, s[$ofs1+0x0004];
	add.half.f32 $r3, s[$ofs1+0x0000], $r2;
	add.u32 $ofs1, $ofs4, 0x00000da0;
	mov.u32 $r2, s[$ofs1+0x0000];
	mad.f32 $r2, $r3, 0x3ee31355, $r2;
	mov.u32 s[$ofs4+0x0da0], $r2;
	l0x00005118: nop;
	bar.sync 0x00000000;
	shl.b32 $ofs4, $r17, 0x00000002;
	add.u32 $ofs1, $ofs4, 0x0000079c;
	mul.f32 $r2, s[$ofs1+0x0000], 0x3f5019c3;
	mov.u32 s[$ofs4+0x079c], $r2;
	add.u32 $ofs1, $ofs4, 0x0000157c;
	mul.f32 $r2, s[$ofs1+0x0000], 0x3f9d7658;
	mov.u32 s[$ofs4+0x157c], $r2;
	add.u32 $ofs1, $ofs4, 0x0000099c;
	mul.f32 $r2, s[$ofs1+0x0000], 0x3f5019c3;
	mov.u32 s[$ofs4+0x099c], $r2;
	add.u32 $ofs1, $ofs4, 0x0000177c;
	mul.f32 $r2, s[$ofs1+0x0000], 0x3f9d7658;
	mov.u32 s[$ofs4+0x177c], $r2;
	add.u32 $ofs1, $ofs4, 0x00000b9c;
	mul.f32 $r2, s[$ofs1+0x0000], 0x3f5019c3;
	mov.u32 s[$ofs4+0x0b9c], $r2;
	add.u32 $ofs1, $ofs4, 0x0000197c;
	mul.f32 $r2, s[$ofs1+0x0000], 0x3f9d7658;
	mov.u32 s[$ofs4+0x197c], $r2;
	ssy 0x00005208;
	@$p2.eq bra l0x00005208;
	shl.b32 $ofs4, $r17, 0x00000002;
	add.u32 $ofs1, $ofs4, 0x00000d9c;
	mul.f32 $r2, s[$ofs1+0x0000], 0x3f5019c3;
	mov.u32 s[$ofs4+0x0d9c], $r2;
	add.u32 $ofs1, $ofs4, 0x00001b7c;
	mul.f32 $r2, s[$ofs1+0x0000], 0x3f9d7658;
	mov.u32 s[$ofs4+0x1b7c], $r2;
	l0x00005208: nop;
	bar.sync 0x00000000;
	add.u32 $ofs1, $ofs2, 0x0000013c;
	mov.u32 $r4, s[$ofs1+0x0000];
	add.u32 $ofs1, $ofs2, 0x0000024c;
	mov.half.u32 $r3, s[$ofs1+0x0000];
	mov.half.u32 $r2, s[$ofs1+0x0000];
	mov.u32 $r21, s[$ofs1+0x0000];
	add.u32 $ofs1, $ofs2, 0x00000acc;
	mov.half.u32 $r5, s[$ofs1+0x0000];
	mov.half.u32 $r6, s[$ofs1+0x0000];
	mov.half.u32 $r11, s[$ofs1+0x0000];
	mov.half.u32 $r8, s[$ofs1+0x0000];
	add.u32 $ofs1, $ofs2, 0x00000bdc;
	mov.half.u32 $r20, s[$ofs1+0x0000];
	mov.half.u32 $r14, s[$ofs1+0x0000];
	add.u32 $ofs1, $ofs2, 0x000009bc;
	mov.u32 $r26, $ofs1;
	add.u32 $ofs1, $ofs2, 0x000008ac;
	mov.u32 $r28, $ofs1;
	add.u32 $ofs4, $ofs2, 0x00000cec;
	shl.b32 $ofs1, $r26, 0x0;
	mov.u32 $r9, s[$ofs1+0x0000];
	shl.b32 $ofs1, $r28, 0x0;
	add.f32 $r5, s[$ofs1+0x0000], $r5;
	add.f32 $r6, s[$ofs4+0x0000], $r6;
	mad.f32 $r9, $r5, 0xbfcb0673, $r9;
	mad.f32 $r20, $r6, 0xbfcb0673, $r20;
	add.f32 $r5, $r9, $r20;
	mad.f32 $r11, $r5, 0xbd5901ae, $r11;
	mov.u32 $r10, s[$ofs4+0x0000];
	add.f32 $r29, s[$ofs4+0x0000], $r11;
	add.f32 $r3, s[$ofs2+0x002c], $r3;
	mad.f32 $r3, $r3, constant1_ZN8dwt_cuda12fdwt97KernelILi128ELi6EEEvPKfPfiii[0x001c], $r4;
	add.u32 $ofs1, $ofs2, 0x0000079c;
	mov.u32 $r27, $ofs1;
	add.u32 $ofs4, $ofs2, 0x0000068c;
	mov.u32 $r4, s[$ofs2+0x002c];
	shl.b32 $ofs1, $r28, 0x0;
	mov.u32 $r7, s[$ofs1+0x0000];
	shl.b32 $ofs1, $r27, 0x0;
	mov.u32 $r22, s[$ofs1+0x0000];
	mov.u32 $r19, s[$ofs4+0x0000];
	mov.u32 $r18, s[$ofs4+0x0000];
	shl.b32 $ofs1, $r28, 0x0;
	mov.u32 $r16, s[$ofs1+0x0000];
	mov.u32 $r5, s[$ofs4+0x0000];
	shl.b32 $ofs1, $r27, 0x0;
	mov.u32 $r12, s[$ofs1+0x0000];
	shl.b32 $ofs1, $r28, 0x0;
	mov.u32 $r6, s[$ofs1+0x0000];
	shl.b32 $ofs1, $r26, 0x0;
	mov.u32 $r13, s[$ofs1+0x0000];
	add.f32 $r7, s[$ofs4+0x0000], $r7;
	add.u32 $ofs1, $ofs2, 0x0000046c;
	mov.u32 $r30, $ofs1;
	mov.u32 s[$ofs2+0x013c], $r3;
	mad.f32 $r7, $r7, constant1_ZN8dwt_cuda12fdwt97KernelILi128ELi6EEEvPKfPfiii[0x001c], $r22;
	mov.u32 $r22, s[$ofs1+0x0000];
	add.u32 $ofs1, $ofs2, 0x0000035c;
	mov.u32 $r31, $ofs1;
	add.half.f32 $r22, $r2, $r22;
	mov.half.u32 $r2, s[$ofs1+0x0000];
	mad.f32 $r2, $r22, 0xbfcb0673, $r2;
	shl.b32 $ofs1, $r30, 0x0;
	add.half.f32 $r30, s[$ofs1+0x0000], $r19;
	mov.half.u32 $r22, s[$ofs1+0x0000];
	add.u32 $ofs1, $ofs2, 0x0000057c;
	mov.u32 $r19, $ofs1;
	mov.u32 s[$ofs2+0x035c], $r2;
	mov.u32 $r19, s[$ofs1+0x0000];
	mad.f32 $r19, $r30, 0xbfcb0673, $r19;
	mov.u32 s[$ofs2+0x057c], $r19;
	mov.u32 s[$ofs2+0x079c], $r7;
	mov.u32 s[$ofs2+0x09bc], $r9;
	mov.u32 s[$ofs2+0x0bdc], $r20;
	mad.f32 $r20, $r29, 0x3f620676, $r20;
	add.f32 $r29, $r3, $r2;
	mad.f32 $r21, $r29, 0xbd5901ae, $r21;
	add.f32 $r29, $r2, $r19;
	mad.f32 $r22, $r29, 0xbd5901ae, $r22;
	add.f32 $r29, $r19, $r7;
	mov.u32 s[$ofs2+0x024c], $r21;
	mad.f32 $r18, $r29, 0xbd5901ae, $r18;
	add.f32 $r29, $r7, $r9;
	mov.u32 s[$ofs2+0x046c], $r22;
	mad.f32 $r16, $r29, 0xbd5901ae, $r16;
	mov.u32 s[$ofs2+0x068c], $r18;
	add.f32 $r4, $r4, $r21;
	mov.u32 s[$ofs2+0x08ac], $r16;
	add.f32 $r29, $r21, $r22;
	mad.f32 $r3, $r4, 0x3f620676, $r3;
	mov.u32 s[$ofs2+0x0acc], $r11;
	mad.f32 $r2, $r29, 0x3f620676, $r2;
	add.f32 $r4, $r22, $r18;
	mov.u32 s[$ofs2+0x013c], $r3;
	add.f32 $r29, $r18, $r16;
	mad.f32 $r19, $r4, 0x3f620676, $r19;
	mov.u32 s[$ofs2+0x035c], $r2;
	mad.f32 $r7, $r29, 0x3f620676, $r7;
	add.f32 $r4, $r16, $r11;
	mov.u32 s[$ofs2+0x057c], $r19;
	mad.f32 $r9, $r4, 0x3f620676, $r9;
	mov.u32 s[$ofs2+0x079c], $r7;
	add.f32 $r3, $r3, $r2;
	mov.u32 s[$ofs2+0x09bc], $r9;
	mad.f32 $r21, $r3, 0x3ee31355, $r21;
	mov.u32 s[$ofs2+0x0bdc], $r20;
	add.f32 $r2, $r2, $r19;
	mov.u32 s[$ofs2+0x024c], $r21;
	add.f32 $r3, $r19, $r7;
	mad.f32 $r22, $r2, 0x3ee31355, $r22;
	mad.f32 $r18, $r3, 0x3ee31355, $r18;
	mov.u32 s[$ofs2+0x046c], $r22;
	add.f32 $r2, $r7, $r9;
	mov.u32 s[$ofs2+0x068c], $r18;
	add.f32 $r3, $r9, $r20;
	mad.f32 $r16, $r2, 0x3ee31355, $r16;
	mad.f32 $r11, $r3, 0x3ee31355, $r11;
	mov.u32 s[$ofs2+0x08ac], $r16;
	mov.u32 s[$ofs2+0x0acc], $r11;
	mul.f32 $r9, s[$ofs1+0x0000], 0x3f9d7658;
	mul.f32 $r3, s[$ofs4+0x0000], constant1_ZN8dwt_cuda12fdwt97KernelILi128ELi6EEEvPKfPfiii[0x003c];
	shl.b32 $ofs1, $r27, 0x0;
	mul.f32 $r2, s[$ofs1+0x0000], 0x3f9d7658;
	shl.b32 $ofs1, $r28, 0x0;
	mul.f32 $r4, s[$ofs1+0x0000], 0x3f5019c3;
	shl.u32 $r11, $r1, 0x00000002;
	shl.b32 $ofs1, $r26, 0x0;
	mul.f32 $r7, s[$ofs1+0x0000], 0x3f9d7658;
	add.u32 $r1, $r15, $r1;
	mov.u32 s[$ofs2+0x002c], $r5;
	add.u32 $r5, s[0x0018], $r11;
	shl.u32 $r16, $r1, 0x00000002;
	mul.f32 $r11, $r22, 0x3f5019c3;
	add.u32 $r1, $r25, $r1;
	mov.u32 s[$ofs2+0x013c], $r12;
	st.global.u32 [$r5], $r11;
	add.u32 $r5, s[0x0018], $r16;
	shl.u32 $r11, $r1, 0x00000002;
	add.u32 $r1, $r15, $r1;
	mov.u32 s[$ofs2+0x024c], $r6;
	st.global.u32 [$r5], $r9;
	add.u32 $r5, s[0x0018], $r11;
	shl.u32 $r6, $r1, 0x00000002;
	add.u32 $r1, $r25, $r1;
	mov.u32 s[$ofs2+0x035c], $r13;
	st.global.u32 [$r5], $r3;
	add.u32 $r3, s[0x0018], $r6;
	shl.u32 $r5, $r1, 0x00000002;
	add.u32 $r1, $r15, $r1;
	mov.u32 s[$ofs2+0x046c], $r8;
	st.global.u32 [$r3], $r2;
	add.u32 $r2, s[0x0018], $r5;
	shl.u32 $r3, $r1, 0x00000002;
	mov.u32 s[$ofs2+0x057c], $r14;
	st.global.u32 [$r2], $r4;
	add.u32 $r2, s[0x0018], $r3;
	mov.u32 s[$ofs2+0x068c], $r10;
	st.global.u32 [$r2], $r7;
	add.u32 $r1, $r25, $r1;
	bar.sync 0x00000000;
	ld.local.u32 $r2, [0x0004];
	add.u32 $r2, $r2, 0x00000001;
	st.local.u32 [0x0004], $r2;
	set.ne.s32.s32 $p3/$o127, s[0x0028], $r2;
	@$p3.ne bra l0x00004bb8;
	nop;

	l_exit: exit;
}

.entry  _ZN8dwt_cuda12fdwt97KernelILi192ELi8EEEvPKfPfiii (
	.param  .u64 __cudaparm__ZN8dwt_cuda12fdwt97KernelILi192ELi8EEEvPKfPfiii_input ,
	.param  .u64 __cudaparm__ZN8dwt_cuda12fdwt97KernelILi192ELi8EEEvPKfPfiii_output ,
	.param  .s32 __cudaparm__ZN8dwt_cuda12fdwt97KernelILi192ELi8EEEvPKfPfiii_sx ,
	.param  .s32 __cudaparm__ZN8dwt_cuda12fdwt97KernelILi192ELi8EEEvPKfPfiii_sy ,
	.param  .s32 __cudaparm__ZN8dwt_cuda12fdwt97KernelILi192ELi8EEEvPKfPfiii_steps )
{
	.reg .u32 $r<40>;
	.reg .u32 $ofs<5>;
	.reg .pred $p<4>;

	.reg .u32 $r124;

	.reg .u32 $o127;

	
	cvt.u32.u16 $r19, $r0.lo;
	mov.u32 $r3, 0x000005e8;
	mov.u32 $r4, 0xaaaaaaab;
	add.u32 $r1, $r19, 0x00000004;
	and.b32 $r2, $r1, constant1_ZN8dwt_cuda12fdwt97KernelILi192ELi8EEEvPKfPfiii[0x0000];
	mul.half.lo.u16 $r6, $r4.hi, $r19.lo;
	mul.half.lo.u16 $r0, $r2.lo, $r3.hi;
	shl.u32 $r7, $r6, 0x00000010;
	mad.wide.u16 $r5, $r2.hi, $r3.lo, $r0;
	mad.wide.u16 $p0|$o127, $r4.lo, $r19.lo, $r7;
	mov.u32 $r8, 0x000000bf;
	cvt.u32.u16 $r4, %ctaid.y;
	shr.u32 $r6, $r6, 0x00000010;
	mov.u32 $r0, s[0x0028];
	shl.u32 $r9, $r4, 0x00000003;
	addp.u32 $r7, $r6, $r124, $p0;
	shr.s32 $r6, $r1, 0x0000001f;
	add.u32 $r10, $r9, 0x00000008;
	shr.u32 $r7, $r7, 0x00000006;
	and.b32 $r6, $r6, constant1_ZN8dwt_cuda12fdwt97KernelILi192ELi8EEEvPKfPfiii[0x0000];
	shl.u32 $r5, $r5, 0x00000010;
	mul.half.lo.u16 $r9, $r7.lo, $r8.hi;
	add.half.u32 $r6, $r1, $r6;
	mad.wide.u16 $r1, $r2.lo, $r3.lo, $r5;
	mul.wide.u16 $r5, $r0.lo, $r10.hi;
	mad.wide.u16 $r3, $r7.hi, $r8.lo, $r9;
	shr.s32 $r2, $r6, 0x00000001;
	mad.wide.u16 $r5, $r0.hi, $r10.lo, $r5;
	shl.u32 $r3, $r3, 0x00000010;
	add.u32 $r1, $r1, $r2;
	shl.u32 $r6, $r5, 0x00000010;
	mad.wide.u16 $r3, $r7.lo, $r8.lo, $r3;
	shl.u32 $r5, $r19, 0x00000001;
	mul.wide.u16 $r2, $r0.hi, $r4.lo;
	mad.wide.u16 $r6, $r0.lo, $r10.lo, $r6;
	shl.b32 $ofs3, $r1, 0x00000002;
	add.u32 $r8, -$r3, $r5;
	shl.u32 $r1, $r2, 0x00000010;
	add.u32 $r2, $r6, 0x00000003;
	mul.wide.u16 $r3, %ctaid.x, 0x000000c0;
	mad.wide.u16 $r0, $r0.lo, $r4.lo, $r1;
	set.gt.s32.s32 $p3/$o127, s[0x0024], $r2;
	@$p3 mov.u32 $r1, $p3;
	add.u32 $r2, $r19, $r3;
	shl.u32 $r7, $r0, 0x00000003;
	add.u32 $r6, $r3, $r8;
	set.le.u32.u32 $p0/$o127, $r19, constant1_ZN8dwt_cuda12fdwt97KernelILi192ELi8EEEvPKfPfiii[0x0004];
	set.lt.u32.u32 $p1/$o127, $r19, constant1_ZN8dwt_cuda12fdwt97KernelILi192ELi8EEEvPKfPfiii[0x0008];
	set.lt.u32.u32 $p2/$o127, $r19, constant1_ZN8dwt_cuda12fdwt97KernelILi192ELi8EEEvPKfPfiii[0x000c];
	@$p2 mov.u32 $r9, $p2;
	set.le.s32.s32 $p2/$o127, s[0x0020], $r2;
	set.gt.s32.s32 $p3/$o127, s[0x0020], $r6;
	@$p3 mov.u32 $r10, $p3;
	mov.pred $p3, $r1;
	@$p3.ne bra l0x000024a8;
	mov.half.u32 $r1, s[0x0020];
	mov.half.u32 $r0, s[0x0024];
	mul.wide.u16 $r4, $r1.lo, $r0.hi;
	mad.wide.u16 $r4, $r1.hi, $r0.lo, $r4;
	shl.u32 $r4, $r4, 0x00000010;
	mad.wide.u16 $r11, $r1.lo, $r0.lo, $r4;
	cvt.u32.u16 $r4, %ctaid.y;
	set.eq.u32.u32 $p3/$o127, $r4, $r124;
	@$p3.eq bra l0x00000490;
	ssy 0x00000238;
	@$p2.eq bra l0x00000218;
	shl.u32 $r0, s[0x0020], 0x00000001;
	add.u32 $r0, $r0, -$r2;
	add.u32 $r4, $r0, 0xfffffffe;
	bra l0x00000238;
	l0x00000218: add.u32 $r4, -$r2, 0x00000000;
	set.lt.s32.s32 $p3/$o127, $r2, $r124;
	@$p3 mov.u32 $r0, $p3;
	@$p3.equ mov.u32 $r4, $r2;
	l0x00000238: mov.u32 $r0, s[0x0020];
	mul.wide.u16 $r1, $r0.lo, $r7.hi;
	mad.wide.u16 $r1, $r0.hi, $r7.lo, $r1;
	shl.u32 $r1, $r1, 0x00000010;
	mad.wide.u16 $r5, $r0.lo, $r7.lo, $r1;
	mov.half.u32 $r0, s[0x0020];
	add.half.u32 $r1, $r5, $r4;
	set.ne.s32.s32 $p3/$o127, $r5, $r11;
	@$p3 mov.u32 $r5, $p3;
	@$p3.equ shl.u32 $r0, s[0x0020], 0x00000001;
	@$p3.equ add.u32 $r1, $r1, -$r0;
	@$p3.equ add.u32 $r0, -s[0x0020], constant1_ZN8dwt_cuda12fdwt97KernelILi192ELi8EEEvPKfPfiii[0x0034];
	shl.u32 $r5, $r1, 0x00000002;
	add.u32 $r5, s[0x0010], $r5;
	ld.global.u32 $r5, [$r5];
	add.half.u32 $r4, $r11, $r4;
	add.half.u32 $r1, $r0, $r1;
	mov.u32 s[$ofs3+0x066c], $r5;
	set.ne.s32.s32 $p3/$o127, $r4, $r1;
	@$p3 mov.u32 $r5, $p3;
	@$p3.equ shl.u32 $r5, $r0, 0x00000001;
	@$p3.equ add.u32 $r1, $r1, -$r5;
	@$p3.equ add.u32 $r0, -$r0, constant1_ZN8dwt_cuda12fdwt97KernelILi192ELi8EEEvPKfPfiii[0x0034];
	shl.u32 $r5, $r1, 0x00000002;
	add.u32 $r5, s[0x0010], $r5;
	ld.global.u32 $r5, [$r5];
	mov.u32 s[$ofs3+0x07fc], $r5;
	add.u32 $r1, $r0, $r1;
	mov.u32 s[$ofs3+0x04dc], $r5;
	set.ne.s32.s32 $p3/$o127, $r4, $r1;
	@$p3 mov.u32 $r5, $p3;
	@$p3.equ shl.u32 $r5, $r0, 0x00000001;
	@$p3.equ add.u32 $r1, $r1, -$r5;
	@$p3.equ add.u32 $r0, -$r0, constant1_ZN8dwt_cuda12fdwt97KernelILi192ELi8EEEvPKfPfiii[0x0034];
	shl.u32 $r5, $r1, 0x00000002;
	add.u32 $r5, s[0x0010], $r5;
	ld.global.u32 $r5, [$r5];
	mov.u32 s[$ofs3+0x098c], $r5;
	add.u32 $r1, $r0, $r1;
	mov.u32 s[$ofs3+0x034c], $r5;
	set.ne.s32.s32 $p3/$o127, $r4, $r1;
	@$p3 mov.u32 $r5, $p3;
	@$p3.equ shl.u32 $r5, $r0, 0x00000001;
	@$p3.equ add.u32 $r1, $r1, -$r5;
	@$p3.equ add.u32 $r0, -$r0, constant1_ZN8dwt_cuda12fdwt97KernelILi192ELi8EEEvPKfPfiii[0x0034];
	shl.u32 $r5, $r1, 0x00000002;
	add.u32 $r5, s[0x0010], $r5;
	ld.global.u32 $r5, [$r5];
	add.u32 $r1, $r0, $r1;
	mov.u32 s[$ofs3+0x01bc], $r5;
	set.ne.s32.s32 $p3/$o127, $r4, $r1;
	@$p3 mov.u32 $r4, $p3;
	@$p3.equ shl.u32 $r0, $r0, 0x00000001;
	@$p3.equ add.u32 $r1, $r1, -$r0;
	shl.u32 $r0, $r1, 0x00000002;
	add.u32 $r0, s[0x0010], $r0;
	ld.global.u32 $r0, [$r0];
	mov.u32 s[$ofs3+0x002c], $r0;
	ssy 0x00000440;
	@$p2.eq bra l0x00000428;
	shl.u32 $r0, s[0x0020], 0x00000001;
	add.u32 $r0, $r0, -$r2;
	add.u32 $r4, $r0, 0xfffffffe;
	bra l0x00000440;
	l0x00000428: add.u32 $r4, -$r2, 0x00000000;
	set.lt.s32.s32 $p2/$o127, $r2, $r124;
	@$p2.equ mov.u32 $r4, $r2;
	l0x00000440: nop;
	add.u32 $r1, $r7, 0x00000003;
	mov.u32 $r0, s[0x0020];
	mul.wide.u16 $r2, $r0.lo, $r1.hi;
	mad.wide.u16 $r2, $r0.hi, $r1.lo, $r2;
	shl.u32 $r2, $r2, 0x00000010;
	mad.wide.u16 $r0, $r0.lo, $r1.lo, $r2;
	add.half.u32 $r0, $r4, $r0;
	add.half.u32 $r2, $r11, $r4;
	mov.half.u32 $r1, s[0x0020];
	add.half.u32 $r29, -s[0x0020], $r0;
	bra l0x00000708;
	l0x00000490: ssy 0x000004d8;
	@$p2.eq bra l0x000004c0;
	shl.u32 $r0, s[0x0020], 0x00000001;
	add.u32 $r0, $r0, -$r2;
	add.u32 $r4, $r0, 0xfffffffe;
	bra l0x000004d8;
	l0x000004c0: add.u32 $r4, -$r2, 0x00000000;
	set.lt.s32.s32 $p2/$o127, $r2, $r124;
	@$p2.equ mov.u32 $r4, $r2;
	l0x000004d8: mov.u32 $r0, s[0x0020];
	add.u32 $r1, $r7, 0xfffffffc;
	mul.wide.u16 $r2, $r1.lo, $r0.hi;
	mad.wide.u16 $r2, $r1.hi, $r0.lo, $r2;
	shl.u32 $r5, $r2, 0x00000010;
	add.u32 $r2, $r11, $r4;
	mad.wide.u16 $r5, $r1.lo, $r0.lo, $r5;
	mov.half.u32 $r1, s[0x0020];
	add.half.u32 $r0, $r4, $r5;
	set.ne.s32.s32 $p2/$o127, $r5, $r11;
	@$p2.equ shl.u32 $r1, s[0x0020], 0x00000001;
	@$p2.equ add.u32 $r0, $r0, -$r1;
	@$p2.equ add.u32 $r1, -s[0x0020], constant1_ZN8dwt_cuda12fdwt97KernelILi192ELi8EEEvPKfPfiii[0x0034];
	shl.u32 $r4, $r0, 0x00000002;
	add.u32 $r4, s[0x0010], $r4;
	ld.global.u32 $r4, [$r4];
	add.u32 $r0, $r0, $r1;
	mov.u32 s[$ofs3+0x002c], $r4;
	set.ne.s32.s32 $p2/$o127, $r2, $r0;
	@$p2.equ shl.u32 $r4, $r1, 0x00000001;
	@$p2.equ add.u32 $r0, $r0, -$r4;
	@$p2.equ add.u32 $r1, -$r1, constant1_ZN8dwt_cuda12fdwt97KernelILi192ELi8EEEvPKfPfiii[0x0034];
	shl.u32 $r4, $r0, 0x00000002;
	add.u32 $r4, s[0x0010], $r4;
	ld.global.u32 $r4, [$r4];
	add.u32 $r0, $r0, $r1;
	mov.u32 s[$ofs3+0x01bc], $r4;
	set.ne.s32.s32 $p2/$o127, $r2, $r0;
	@$p2.equ shl.u32 $r4, $r1, 0x00000001;
	@$p2.equ add.u32 $r0, $r0, -$r4;
	@$p2.equ add.u32 $r1, -$r1, constant1_ZN8dwt_cuda12fdwt97KernelILi192ELi8EEEvPKfPfiii[0x0034];
	shl.u32 $r4, $r0, 0x00000002;
	add.u32 $r4, s[0x0010], $r4;
	ld.global.u32 $r4, [$r4];
	add.u32 $r0, $r0, $r1;
	mov.u32 s[$ofs3+0x034c], $r4;
	set.ne.s32.s32 $p2/$o127, $r2, $r0;
	@$p2.equ shl.u32 $r4, $r1, 0x00000001;
	@$p2.equ add.u32 $r0, $r0, -$r4;
	@$p2.equ add.u32 $r1, -$r1, constant1_ZN8dwt_cuda12fdwt97KernelILi192ELi8EEEvPKfPfiii[0x0034];
	shl.u32 $r4, $r0, 0x00000002;
	add.u32 $r4, s[0x0010], $r4;
	ld.global.u32 $r4, [$r4];
	add.u32 $r0, $r0, $r1;
	mov.u32 s[$ofs3+0x04dc], $r4;
	set.ne.s32.s32 $p2/$o127, $r2, $r0;
	@$p2.equ shl.u32 $r4, $r1, 0x00000001;
	@$p2.equ add.u32 $r0, $r0, -$r4;
	@$p2.equ add.u32 $r1, -$r1, constant1_ZN8dwt_cuda12fdwt97KernelILi192ELi8EEEvPKfPfiii[0x0034];
	shl.u32 $r4, $r0, 0x00000002;
	add.u32 $r4, s[0x0010], $r4;
	ld.global.u32 $r4, [$r4];
	add.u32 $r0, $r0, $r1;
	mov.u32 s[$ofs3+0x066c], $r4;
	set.ne.s32.s32 $p2/$o127, $r2, $r0;
	@$p2.equ shl.u32 $r4, $r1, 0x00000001;
	@$p2.equ add.u32 $r0, $r0, -$r4;
	@$p2.equ add.u32 $r1, -$r1, constant1_ZN8dwt_cuda12fdwt97KernelILi192ELi8EEEvPKfPfiii[0x0034];
	shl.u32 $r4, $r0, 0x00000002;
	add.u32 $r4, s[0x0010], $r4;
	ld.global.u32 $r4, [$r4];
	add.u32 $r29, $r0, $r1;
	mov.u32 s[$ofs3+0x07fc], $r4;
	set.ne.s32.s32 $p2/$o127, $r2, $r29;
	@$p2.equ shl.u32 $r0, $r1, 0x00000001;
	@$p2.equ add.u32 $r29, $r29, -$r0;
	@$p2.equ add.u32 $r1, -$r1, constant1_ZN8dwt_cuda12fdwt97KernelILi192ELi8EEEvPKfPfiii[0x0034];
	shl.u32 $r0, $r29, 0x00000002;
	add.u32 $r0, s[0x0010], $r0;
	ld.global.u32 $r0, [$r0];
	mov.u32 s[$ofs3+0x098c], $r0;
	l0x00000708: ssy 0x00000cf8;
	@$p0.eq bra l0x00000cd0;
	add.u32 $r0, $r19, 0xfffffff9;
	set.le.u32.u32 $p2/$o127, $r19, constant1_ZN8dwt_cuda12fdwt97KernelILi192ELi8EEEvPKfPfiii[0x0010];
	@$p2.ne add.u32 $r0, $r19, constant1_ZN8dwt_cuda12fdwt97KernelILi192ELi8EEEvPKfPfiii[0x0014];
	add.u32 $r4, $r0, 0x00000004;
	mov.u32 $r12, 0x000005e8;
	and.b32 $r5, $r4, constant1_ZN8dwt_cuda12fdwt97KernelILi192ELi8EEEvPKfPfiii[0x0000];
	mul.wide.u16 $r14, $r5.lo, $r12.hi;
	shr.s32 $r13, $r4, 0x0000001f;
	mad.wide.u16 $r14, $r5.hi, $r12.lo, $r14;
	and.b32 $r13, $r13, constant1_ZN8dwt_cuda12fdwt97KernelILi192ELi8EEEvPKfPfiii[0x0000];
	shl.u32 $r14, $r14, 0x00000010;
	add.u32 $r4, $r4, $r13;
	mad.wide.u16 $r5, $r5.lo, $r12.lo, $r14;
	shr.s32 $r4, $r4, 0x00000001;
	add.u32 $r4, $r5, $r4;
	shl.b32 $ofs1, $r4, 0x00000002;
	mov.u32 $r31, $ofs1;
	add.u32 $r5, $r0, $r3;
	set.le.s32.s32 $p2/$o127, s[0x0020], $r5;
	cvt.u32.u16 $r4, %ctaid.y;
	set.eq.u32.u32 $p3/$o127, $r4, $r124;
	@$p3.eq bra l0x00000a48;
	ssy 0x00000810;
	@$p2.eq bra l0x000007f8;
	shl.u32 $r0, s[0x0020], 0x00000001;
	add.u32 $r0, $r0, -$r5;
	add.u32 $r4, $r0, 0xfffffffe;
	bra l0x00000810;
	l0x000007f8: add.u32 $r4, -$r5, 0x00000000;
	set.lt.s32.s32 $p3/$o127, $r5, $r124;
	@$p3.equ mov.u32 $r4, $r5;
	l0x00000810: mov.u32 $r0, s[0x0020];
	mul.wide.u16 $r3, $r0.lo, $r7.hi;
	mad.wide.u16 $r3, $r0.hi, $r7.lo, $r3;
	shl.u32 $r3, $r3, 0x00000010;
	mad.wide.u16 $r12, $r0.lo, $r7.lo, $r3;
	mov.half.u32 $r0, s[0x0020];
	add.half.u32 $r3, $r12, $r4;
	set.ne.s32.s32 $p3/$o127, $r12, $r11;
	@$p3.equ shl.u32 $r0, s[0x0020], 0x00000001;
	@$p3.equ add.u32 $r3, $r3, -$r0;
	@$p3.equ add.u32 $r0, -s[0x0020], constant1_ZN8dwt_cuda12fdwt97KernelILi192ELi8EEEvPKfPfiii[0x0034];
	shl.u32 $r12, $r3, 0x00000002;
	add.u32 $r12, s[0x0010], $r12;
	ld.global.u32 $r12, [$r12];
	add.half.u32 $r4, $r11, $r4;
	add.half.u32 $r3, $r0, $r3;
	shl.b32 $ofs1, $r31, 0x0;
	mov.u32 s[$ofs1+0x066c], $r12;
	set.ne.s32.s32 $p3/$o127, $r4, $r3;
	@$p3.equ shl.u32 $r12, $r0, 0x00000001;
	@$p3.equ add.u32 $r3, $r3, -$r12;
	@$p3.equ add.u32 $r0, -$r0, constant1_ZN8dwt_cuda12fdwt97KernelILi192ELi8EEEvPKfPfiii[0x0034];
	shl.u32 $r12, $r3, 0x00000002;
	add.u32 $r12, s[0x0010], $r12;
	ld.global.u32 $r12, [$r12];
	mov.u32 s[$ofs1+0x07fc], $r12;
	add.u32 $r3, $r0, $r3;
	mov.u32 s[$ofs1+0x04dc], $r12;
	set.ne.s32.s32 $p3/$o127, $r4, $r3;
	@$p3.equ shl.u32 $r12, $r0, 0x00000001;
	@$p3.equ add.u32 $r3, $r3, -$r12;
	@$p3.equ add.u32 $r0, -$r0, constant1_ZN8dwt_cuda12fdwt97KernelILi192ELi8EEEvPKfPfiii[0x0034];
	shl.u32 $r12, $r3, 0x00000002;
	add.u32 $r12, s[0x0010], $r12;
	ld.global.u32 $r12, [$r12];
	mov.u32 s[$ofs1+0x098c], $r12;
	add.u32 $r3, $r0, $r3;
	mov.u32 s[$ofs1+0x034c], $r12;
	set.ne.s32.s32 $p3/$o127, $r4, $r3;
	@$p3.equ shl.u32 $r12, $r0, 0x00000001;
	@$p3.equ add.u32 $r3, $r3, -$r12;
	@$p3.equ add.u32 $r0, -$r0, constant1_ZN8dwt_cuda12fdwt97KernelILi192ELi8EEEvPKfPfiii[0x0034];
	shl.u32 $r12, $r3, 0x00000002;
	add.u32 $r12, s[0x0010], $r12;
	ld.global.u32 $r12, [$r12];
	add.u32 $r3, $r0, $r3;
	mov.u32 s[$ofs1+0x01bc], $r12;
	set.ne.s32.s32 $p3/$o127, $r4, $r3;
	@$p3.equ shl.u32 $r0, $r0, 0x00000001;
	@$p3.equ add.u32 $r3, $r3, -$r0;
	shl.u32 $r0, $r3, 0x00000002;
	add.u32 $r0, s[0x0010], $r0;
	ld.global.u32 $r0, [$r0];
	mov.u32 s[$ofs1+0x002c], $r0;
	ssy 0x000009f8;
	@$p2.eq bra l0x000009e0;
	shl.u32 $r0, s[0x0020], 0x00000001;
	add.u32 $r0, $r0, -$r5;
	add.u32 $r4, $r0, 0xfffffffe;
	bra l0x000009f8;
	l0x000009e0: add.u32 $r4, -$r5, 0x00000000;
	set.lt.s32.s32 $p2/$o127, $r5, $r124;
	@$p2.equ mov.u32 $r4, $r5;
	l0x000009f8: nop;
	add.u32 $r3, $r7, 0x00000003;
	mov.u32 $r0, s[0x0020];
	mul.wide.u16 $r5, $r0.lo, $r3.hi;
	mad.wide.u16 $r5, $r0.hi, $r3.lo, $r5;
	shl.u32 $r5, $r5, 0x00000010;
	mad.wide.u16 $r0, $r0.lo, $r3.lo, $r5;
	add.half.u32 $r5, $r4, $r0;
	add.half.u32 $r3, $r11, $r4;
	mov.half.u32 $r0, s[0x0020];
	add.half.u32 $r28, -s[0x0020], $r5;
	bra l0x00000cf8;
	l0x00000a48: ssy 0x00000a90;
	@$p2.eq bra l0x00000a78;
	shl.u32 $r0, s[0x0020], 0x00000001;
	add.u32 $r0, $r0, -$r5;
	add.u32 $r4, $r0, 0xfffffffe;
	bra l0x00000a90;
	l0x00000a78: add.u32 $r4, -$r5, 0x00000000;
	set.lt.s32.s32 $p2/$o127, $r5, $r124;
	@$p2.equ mov.u32 $r4, $r5;
	l0x00000a90: mov.u32 $r0, s[0x0020];
	add.u32 $r5, $r7, 0xfffffffc;
	mul.wide.u16 $r3, $r5.lo, $r0.hi;
	mad.wide.u16 $r3, $r5.hi, $r0.lo, $r3;
	shl.u32 $r12, $r3, 0x00000010;
	add.u32 $r3, $r11, $r4;
	mad.wide.u16 $r5, $r5.lo, $r0.lo, $r12;
	mov.half.u32 $r0, s[0x0020];
	add.half.u32 $r4, $r4, $r5;
	set.ne.s32.s32 $p2/$o127, $r5, $r11;
	@$p2.equ shl.u32 $r0, s[0x0020], 0x00000001;
	@$p2.equ add.u32 $r4, $r4, -$r0;
	@$p2.equ add.u32 $r0, -s[0x0020], constant1_ZN8dwt_cuda12fdwt97KernelILi192ELi8EEEvPKfPfiii[0x0034];
	shl.u32 $r5, $r4, 0x00000002;
	add.u32 $r5, s[0x0010], $r5;
	ld.global.u32 $r5, [$r5];
	add.u32 $r4, $r4, $r0;
	shl.b32 $ofs1, $r31, 0x0;
	mov.u32 s[$ofs1+0x002c], $r5;
	set.ne.s32.s32 $p2/$o127, $r3, $r4;
	@$p2.equ shl.u32 $r5, $r0, 0x00000001;
	@$p2.equ add.u32 $r4, $r4, -$r5;
	@$p2.equ add.u32 $r0, -$r0, constant1_ZN8dwt_cuda12fdwt97KernelILi192ELi8EEEvPKfPfiii[0x0034];
	shl.u32 $r5, $r4, 0x00000002;
	add.u32 $r5, s[0x0010], $r5;
	ld.global.u32 $r5, [$r5];
	add.u32 $r4, $r4, $r0;
	mov.u32 s[$ofs1+0x01bc], $r5;
	set.ne.s32.s32 $p2/$o127, $r3, $r4;
	@$p2.equ shl.u32 $r5, $r0, 0x00000001;
	@$p2.equ add.u32 $r4, $r4, -$r5;
	@$p2.equ add.u32 $r0, -$r0, constant1_ZN8dwt_cuda12fdwt97KernelILi192ELi8EEEvPKfPfiii[0x0034];
	shl.u32 $r5, $r4, 0x00000002;
	add.u32 $r5, s[0x0010], $r5;
	ld.global.u32 $r5, [$r5];
	add.u32 $r4, $r4, $r0;
	mov.u32 s[$ofs1+0x034c], $r5;
	set.ne.s32.s32 $p2/$o127, $r3, $r4;
	@$p2.equ shl.u32 $r5, $r0, 0x00000001;
	@$p2.equ add.u32 $r4, $r4, -$r5;
	@$p2.equ add.u32 $r0, -$r0, constant1_ZN8dwt_cuda12fdwt97KernelILi192ELi8EEEvPKfPfiii[0x0034];
	shl.u32 $r5, $r4, 0x00000002;
	add.u32 $r5, s[0x0010], $r5;
	ld.global.u32 $r5, [$r5];
	add.u32 $r4, $r4, $r0;
	mov.u32 s[$ofs1+0x04dc], $r5;
	set.ne.s32.s32 $p2/$o127, $r3, $r4;
	@$p2.equ shl.u32 $r5, $r0, 0x00000001;
	@$p2.equ add.u32 $r4, $r4, -$r5;
	@$p2.equ add.u32 $r0, -$r0, constant1_ZN8dwt_cuda12fdwt97KernelILi192ELi8EEEvPKfPfiii[0x0034];
	shl.u32 $r5, $r4, 0x00000002;
	add.u32 $r5, s[0x0010], $r5;
	ld.global.u32 $r5, [$r5];
	add.u32 $r4, $r4, $r0;
	mov.u32 s[$ofs1+0x066c], $r5;
	set.ne.s32.s32 $p2/$o127, $r3, $r4;
	@$p2.equ shl.u32 $r5, $r0, 0x00000001;
	@$p2.equ add.u32 $r4, $r4, -$r5;
	@$p2.equ add.u32 $r0, -$r0, constant1_ZN8dwt_cuda12fdwt97KernelILi192ELi8EEEvPKfPfiii[0x0034];
	shl.u32 $r5, $r4, 0x00000002;
	add.u32 $r5, s[0x0010], $r5;
	ld.global.u32 $r5, [$r5];
	add.u32 $r28, $r4, $r0;
	mov.u32 s[$ofs1+0x07fc], $r5;
	set.ne.s32.s32 $p2/$o127, $r3, $r28;
	@$p2.equ shl.u32 $r4, $r0, 0x00000001;
	@$p2.equ add.u32 $r28, $r28, -$r4;
	@$p2.equ add.u32 $r0, -$r0, constant1_ZN8dwt_cuda12fdwt97KernelILi192ELi8EEEvPKfPfiii[0x0034];
	shl.u32 $r4, $r28, 0x00000002;
	add.u32 $r4, s[0x0010], $r4;
	ld.global.u32 $r4, [$r4];
	mov.u32 s[$ofs1+0x098c], $r4;
	bra l0x00000cf8;
	l0x00000cd0: shl.b32 $ofs1, $r124, 0x00000002;
	mov.u32 $r31, $ofs1;
	mov.u32 $r28, $r124;
	mov.u32 $r0, $r124;
	mov.u32 $r3, $r124;
	l0x00000cf8: nop;
	bar.sync 0x00000000;
	shl.b32 $ofs2, $r19, 0x00000002;
	add.u32 $ofs1, $ofs2, 0x000017cc;
	mov.half.u32 $r4, s[$ofs2+0x0030];
	mov.half.u32 $r5, s[$ofs1+0x0000];
	add.f32 $r4, s[$ofs2+0x002c], $r4;
	mad.f32 $r5, $r4, 0xbfcb0673, $r5;
	mov.u32 s[$ofs2+0x17cc], $r5;
	add.u32 $ofs1, $ofs2, 0x0000032c;
	mov.half.u32 $r4, s[$ofs1+0x0004];
	add.half.f32 $r5, s[$ofs1+0x0000], $r4;
	add.u32 $ofs1, $ofs2, 0x00001acc;
	mov.u32 $r4, s[$ofs1+0x0000];
	mad.f32 $r4, $r5, 0xbfcb0673, $r4;
	mov.u32 s[$ofs2+0x1acc], $r4;
	add.u32 $ofs1, $ofs2, 0x0000062c;
	mov.half.u32 $r4, s[$ofs1+0x0004];
	add.half.f32 $r5, s[$ofs1+0x0000], $r4;
	add.u32 $ofs1, $ofs2, 0x00001dcc;
	mov.u32 $r4, s[$ofs1+0x0000];
	mad.f32 $r4, $r5, 0xbfcb0673, $r4;
	mov.u32 s[$ofs2+0x1dcc], $r4;
	ssy 0x00000de0;
	@$p1.eq bra l0x00000de0;
	shl.b32 $ofs2, $r19, 0x00000002;
	add.u32 $ofs1, $ofs2, 0x0000092c;
	mov.half.u32 $r4, s[$ofs1+0x0004];
	add.half.f32 $r5, s[$ofs1+0x0000], $r4;
	add.u32 $ofs1, $ofs2, 0x000020cc;
	mov.u32 $r4, s[$ofs1+0x0000];
	mad.f32 $r4, $r5, 0xbfcb0673, $r4;
	mov.u32 s[$ofs2+0x20cc], $r4;
	l0x00000de0: nop;
	bar.sync 0x00000000;
	shl.b32 $ofs2, $r19, 0x00000002;
	add.u32 $ofs1, $ofs2, 0x000017cc;
	mov.half.u32 $r4, s[$ofs1+0x0004];
	mov.half.u32 $r5, s[$ofs2+0x0030];
	add.f32 $r4, s[$ofs1+0x0000], $r4;
	mad.f32 $r5, $r4, 0xbd5901ae, $r5;
	mov.u32 s[$ofs2+0x0030], $r5;
	add.u32 $ofs1, $ofs2, 0x00001acc;
	mov.half.u32 $r4, s[$ofs1+0x0004];
	add.half.f32 $r5, s[$ofs1+0x0000], $r4;
	add.u32 $ofs1, $ofs2, 0x00000330;
	mov.u32 $r4, s[$ofs1+0x0000];
	mad.f32 $r4, $r5, 0xbd5901ae, $r4;
	mov.u32 s[$ofs2+0x0330], $r4;
	add.u32 $ofs1, $ofs2, 0x00001dcc;
	mov.half.u32 $r4, s[$ofs1+0x0004];
	add.half.f32 $r5, s[$ofs1+0x0000], $r4;
	add.u32 $ofs1, $ofs2, 0x00000630;
	mov.u32 $r4, s[$ofs1+0x0000];
	mad.f32 $r4, $r5, 0xbd5901ae, $r4;
	mov.u32 s[$ofs2+0x0630], $r4;
	ssy 0x00000ec8;
	@$p1.eq bra l0x00000ec8;
	shl.b32 $ofs2, $r19, 0x00000002;
	add.u32 $ofs1, $ofs2, 0x000020cc;
	mov.half.u32 $r4, s[$ofs1+0x0004];
	add.half.f32 $r5, s[$ofs1+0x0000], $r4;
	add.u32 $ofs1, $ofs2, 0x00000930;
	mov.u32 $r4, s[$ofs1+0x0000];
	mad.f32 $r4, $r5, 0xbd5901ae, $r4;
	mov.u32 s[$ofs2+0x0930], $r4;
	l0x00000ec8: nop;
	bar.sync 0x00000000;
	shl.b32 $ofs2, $r19, 0x00000002;
	add.u32 $ofs1, $ofs2, 0x000017cc;
	mov.half.u32 $r4, s[$ofs2+0x0030];
	mov.half.u32 $r5, s[$ofs1+0x0000];
	add.f32 $r4, s[$ofs2+0x002c], $r4;
	mad.f32 $r5, $r4, 0x3f620676, $r5;
	mov.u32 s[$ofs2+0x17cc], $r5;
	add.u32 $ofs1, $ofs2, 0x0000032c;
	mov.half.u32 $r4, s[$ofs1+0x0004];
	add.half.f32 $r5, s[$ofs1+0x0000], $r4;
	add.u32 $ofs1, $ofs2, 0x00001acc;
	mov.u32 $r4, s[$ofs1+0x0000];
	mad.f32 $r4, $r5, 0x3f620676, $r4;
	mov.u32 s[$ofs2+0x1acc], $r4;
	add.u32 $ofs1, $ofs2, 0x0000062c;
	mov.half.u32 $r4, s[$ofs1+0x0004];
	add.half.f32 $r5, s[$ofs1+0x0000], $r4;
	add.u32 $ofs1, $ofs2, 0x00001dcc;
	mov.u32 $r4, s[$ofs1+0x0000];
	mad.f32 $r4, $r5, 0x3f620676, $r4;
	mov.u32 s[$ofs2+0x1dcc], $r4;
	ssy 0x00000fb0;
	@$p1.eq bra l0x00000fb0;
	shl.b32 $ofs2, $r19, 0x00000002;
	add.u32 $ofs1, $ofs2, 0x0000092c;
	mov.half.u32 $r4, s[$ofs1+0x0004];
	add.half.f32 $r5, s[$ofs1+0x0000], $r4;
	add.u32 $ofs1, $ofs2, 0x000020cc;
	mov.u32 $r4, s[$ofs1+0x0000];
	mad.f32 $r4, $r5, 0x3f620676, $r4;
	mov.u32 s[$ofs2+0x20cc], $r4;
	l0x00000fb0: nop;
	bar.sync 0x00000000;
	shl.b32 $ofs2, $r19, 0x00000002;
	add.u32 $ofs1, $ofs2, 0x000017cc;
	mov.half.u32 $r4, s[$ofs1+0x0004];
	mov.half.u32 $r5, s[$ofs2+0x0030];
	add.f32 $r4, s[$ofs1+0x0000], $r4;
	mad.f32 $r5, $r4, 0x3ee31355, $r5;
	mov.u32 s[$ofs2+0x0030], $r5;
	add.u32 $ofs1, $ofs2, 0x00001acc;
	mov.half.u32 $r4, s[$ofs1+0x0004];
	add.half.f32 $r5, s[$ofs1+0x0000], $r4;
	add.u32 $ofs1, $ofs2, 0x00000330;
	mov.u32 $r4, s[$ofs1+0x0000];
	mad.f32 $r4, $r5, 0x3ee31355, $r4;
	mov.u32 s[$ofs2+0x0330], $r4;
	add.u32 $ofs1, $ofs2, 0x00001dcc;
	mov.half.u32 $r4, s[$ofs1+0x0004];
	add.half.f32 $r5, s[$ofs1+0x0000], $r4;
	add.u32 $ofs1, $ofs2, 0x00000630;
	mov.u32 $r4, s[$ofs1+0x0000];
	mad.f32 $r4, $r5, 0x3ee31355, $r4;
	mov.u32 s[$ofs2+0x0630], $r4;
	ssy 0x00001098;
	@$p1.eq bra l0x00001098;
	shl.b32 $ofs2, $r19, 0x00000002;
	add.u32 $ofs1, $ofs2, 0x000020cc;
	mov.half.u32 $r4, s[$ofs1+0x0004];
	add.half.f32 $r5, s[$ofs1+0x0000], $r4;
	add.u32 $ofs1, $ofs2, 0x00000930;
	mov.u32 $r4, s[$ofs1+0x0000];
	mad.f32 $r4, $r5, 0x3ee31355, $r4;
	mov.u32 s[$ofs2+0x0930], $r4;
	l0x00001098: nop;
	bar.sync 0x00000000;
	shl.b32 $ofs2, $r19, 0x00000002;
	mul.f32 $r4, s[$ofs2+0x002c], 0x3f5019c3;
	mov.u32 s[$ofs2+0x002c], $r4;
	add.u32 $ofs1, $ofs2, 0x000017cc;
	mul.f32 $r4, s[$ofs1+0x0000], 0x3f9d7658;
	mov.u32 s[$ofs2+0x17cc], $r4;
	add.u32 $ofs1, $ofs2, 0x0000032c;
	mul.f32 $r4, s[$ofs1+0x0000], 0x3f5019c3;
	mov.u32 s[$ofs2+0x032c], $r4;
	add.u32 $ofs1, $ofs2, 0x00001acc;
	mul.f32 $r4, s[$ofs1+0x0000], 0x3f9d7658;
	mov.u32 s[$ofs2+0x1acc], $r4;
	add.u32 $ofs1, $ofs2, 0x0000062c;
	mul.f32 $r4, s[$ofs1+0x0000], 0x3f5019c3;
	mov.u32 s[$ofs2+0x062c], $r4;
	add.u32 $ofs1, $ofs2, 0x00001dcc;
	mul.f32 $r4, s[$ofs1+0x0000], 0x3f9d7658;
	mov.u32 s[$ofs2+0x1dcc], $r4;
	ssy 0x00001188;
	mov.pred $p2, $r9;
	@$p2.eq bra l0x00001188;
	shl.b32 $ofs2, $r19, 0x00000002;
	add.u32 $ofs1, $ofs2, 0x0000092c;
	mul.f32 $r4, s[$ofs1+0x0000], 0x3f5019c3;
	mov.u32 s[$ofs2+0x092c], $r4;
	add.u32 $ofs1, $ofs2, 0x000020cc;
	mul.f32 $r4, s[$ofs1+0x0000], 0x3f9d7658;
	mov.u32 s[$ofs2+0x20cc], $r4;
	l0x00001188: nop;
	bar.sync 0x00000000;
	ssy 0x000013f8;
	mov.pred $p3, $r10;
	@$p3.eq bra l0x000013d8;
	shr.s32 $r5, s[0x0024], 0x0000001f;
	shr.s32 $r4, $r6, 0x0000001f;
	and.b32 $r9, $r5, constant1_ZN8dwt_cuda12fdwt97KernelILi192ELi8EEEvPKfPfiii[0x0000];
	shr.s32 $r5, s[0x0020], 0x0000001f;
	and.b32 $r4, $r4, constant1_ZN8dwt_cuda12fdwt97KernelILi192ELi8EEEvPKfPfiii[0x0000];
	add.u32 $r10, s[0x0024], $r9;
	and.b32 $p2|$o127, $r6, constant1_ZN8dwt_cuda12fdwt97KernelILi192ELi8EEEvPKfPfiii[0x0000];
	and.b32 $r5, $r5, constant1_ZN8dwt_cuda12fdwt97KernelILi192ELi8EEEvPKfPfiii[0x0000];
	add.u32 $r4, $r4, $r6;
	and.b32 $r12, $r10, constant1_ZN8dwt_cuda12fdwt97KernelILi192ELi8EEEvPKfPfiii[0x0028];
	ssy 0x00001318;
	add.u32 $r9, s[0x0020], $r5;
	shr.s32 $r6, $r4, 0x00000001;
	add.u32 $r4, s[0x0024], -$r12;
	shr.s32 $r5, $r10, 0x00000001;
	shr.s32 $r9, $r9, 0x00000001;
	set.ne.s32.s32 $p1/$o127, $r4, $r124;
	@$p2.eq bra l0x000012d0;
	shr.s32 $r4, s[0x0020], 0x0000001f;
	and.b32 $r4, $r4, constant1_ZN8dwt_cuda12fdwt97KernelILi192ELi8EEEvPKfPfiii[0x0000];
	add.u32 $r4, s[0x0020], $r4;
	and.b32 $r10, $r4, constant1_ZN8dwt_cuda12fdwt97KernelILi192ELi8EEEvPKfPfiii[0x0028];
	mov.u32 $r4, $r9;
	add.u32 $p2|$o127, s[0x0020], -$r10;
	@$p2.neu add.u32 $r9, $r9, constant1_ZN8dwt_cuda12fdwt97KernelILi192ELi8EEEvPKfPfiii[0x0000];
	@$p1.neu add.u32 $r10, $r5, constant1_ZN8dwt_cuda12fdwt97KernelILi192ELi8EEEvPKfPfiii[0x0000];
	@$p1.eq mov.u32 $r10, $r5;
	mul.wide.u16 $r12, $r9.lo, $r10.hi;
	mad.wide.u16 $r12, $r9.hi, $r10.lo, $r12;
	shr.s32 $r13, $r11, 0x0000001f;
	shl.u32 $r12, $r12, 0x00000010;
	and.b32 $r13, $r13, constant1_ZN8dwt_cuda12fdwt97KernelILi192ELi8EEEvPKfPfiii[0x0000];
	mad.wide.u16 $r9, $r9.lo, $r10.lo, $r12;
	add.half.u32 $r10, $r13, $r11;
	add.half.u32 $r6, $r9, $r6;
	shr.s32 $r20, $r10, 0x00000001;
	bra l0x00001318;
	l0x000012d0: and.b32 $r4, s[0x0020], constant1_ZN8dwt_cuda12fdwt97KernelILi192ELi8EEEvPKfPfiii[0x0000];
	add.u32 $r4, $r9, $r4;
	@$p1.neu add.u32 $r9, $r5, constant1_ZN8dwt_cuda12fdwt97KernelILi192ELi8EEEvPKfPfiii[0x0000];
	@$p1.eq mov.u32 $r9, $r5;
	mov.u32 $r10, s[0x0020];
	mul.wide.u16 $r11, $r9.lo, $r10.hi;
	mad.wide.u16 $r11, $r9.hi, $r10.lo, $r11;
	shl.u32 $r11, $r11, 0x00000010;
	mad.wide.u16 $r20, $r9.lo, $r10.lo, $r11;
	l0x00001318: shr.s32 $r9, $r7, 0x0000001f;
	and.b32 $r9, $r9, constant1_ZN8dwt_cuda12fdwt97KernelILi192ELi8EEEvPKfPfiii[0x0000];
	add.u32 $r10, $r9, $r7;
	and.b32 $r9, s[0x0024], constant1_ZN8dwt_cuda12fdwt97KernelILi192ELi8EEEvPKfPfiii[0x0000];
	and.b32 $r7, $r7, constant1_ZN8dwt_cuda12fdwt97KernelILi192ELi8EEEvPKfPfiii[0x0000];
	shr.s32 $r10, $r10, 0x00000001;
	mul.half.lo.u16 $r11, $r5.lo, $r4.hi;
	mul.half.lo.u16 $r12, $r20.lo, $r9.hi;
	mul.half.lo.u16 $r13, $r4.lo, $r10.hi;
	mul.half.lo.u16 $r14, $r20.lo, $r7.hi;
	mad.wide.u16 $r11, $r5.hi, $r4.lo, $r11;
	mad.wide.u16 $r12, $r20.hi, $r9.lo, $r12;
	mad.wide.u16 $r13, $r4.hi, $r10.lo, $r13;
	mad.wide.u16 $r14, $r20.hi, $r7.lo, $r14;
	shl.u32 $r11, $r11, 0x00000010;
	shl.u32 $r12, $r12, 0x00000010;
	shl.u32 $r13, $r13, 0x00000010;
	shl.u32 $r14, $r14, 0x00000010;
	mad.wide.u16 $r5, $r5.lo, $r4.lo, $r11;
	mad.wide.u16 $r9, $r20.lo, $r9.lo, $r12;
	mad.wide.u16 $r10, $r4.lo, $r10.lo, $r13;
	mad.wide.u16 $r7, $r20.lo, $r7.lo, $r14;
	add.half.u32 $r5, $r5, $r9;
	add.half.u32 $r7, $r10, $r7;
	add.half.u32 $r30, $r6, $r5;
	add.half.u32 $r27, $r6, $r7;
	add.u32 $r32, $r4, -$r20;
	bra l0x000013f8;
	l0x000013d8: mov.u32 $r27, $r124;
	mov.u32 $r32, $r124;
	mov.u32 $r30, $r124;
	mov.u32 $r20, $r124;
	l0x000013f8: set.gt.s32.s32 $p1/$o127, s[0x0028], $r124;
	@$p1.eq retp;
	add.u32 $r4, $r8, 0x00000004;
	mov.u32 $r7, 0x000005e8;
	and.b32 $r6, $r4, constant1_ZN8dwt_cuda12fdwt97KernelILi192ELi8EEEvPKfPfiii[0x0000];
	mul.wide.u16 $r8, $r6.lo, $r7.hi;
	shr.s32 $r5, $r4, 0x0000001f;
	mad.wide.u16 $r8, $r6.hi, $r7.lo, $r8;
	and.b32 $r5, $r5, constant1_ZN8dwt_cuda12fdwt97KernelILi192ELi8EEEvPKfPfiii[0x0000];
	shl.u32 $r8, $r8, 0x00000010;
	add.u32 $r4, $r4, $r5;
	mad.wide.u16 $r5, $r6.lo, $r7.lo, $r8;
	shr.s32 $r4, $r4, 0x00000001;
	add.u32 $r4, $r5, $r4;
	shl.b32 $ofs2, $r4, 0x00000002;
	set.lt.u32.u32 $p1/$o127, $r19, constant1_ZN8dwt_cuda12fdwt97KernelILi192ELi8EEEvPKfPfiii[0x002c];
	set.lt.u32.u32 $p2/$o127, $r19, constant1_ZN8dwt_cuda12fdwt97KernelILi192ELi8EEEvPKfPfiii[0x0030];
	@$p2 mov.u32 $r35, $p2;
	mov.u32 $r33, $r124;
	l0x00001490: add.u32 $r4, $r1, $r29;
	set.ne.s32.s32 $p2/$o127, $r2, $r4;
	@$p2.equ shl.u32 $r5, $r1, 0x00000001;
	@$p2.equ add.u32 $r4, $r4, -$r5;
	@$p2.equ add.u32 $r1, -$r1, constant1_ZN8dwt_cuda12fdwt97KernelILi192ELi8EEEvPKfPfiii[0x0034];
	shl.u32 $r5, $r4, 0x00000002;
	add.u32 $r5, s[0x0010], $r5;
	ld.global.u32 $r5, [$r5];
	add.u32 $r4, $r4, $r1;
	mov.u32 s[$ofs3+0x0b1c], $r5;
	set.ne.s32.s32 $p2/$o127, $r2, $r4;
	@$p2.equ shl.u32 $r5, $r1, 0x00000001;
	@$p2.equ add.u32 $r4, $r4, -$r5;
	@$p2.equ add.u32 $r1, -$r1, constant1_ZN8dwt_cuda12fdwt97KernelILi192ELi8EEEvPKfPfiii[0x0034];
	shl.u32 $r5, $r4, 0x00000002;
	add.u32 $r5, s[0x0010], $r5;
	ld.global.u32 $r5, [$r5];
	add.u32 $r4, $r4, $r1;
	mov.u32 s[$ofs3+0x0cac], $r5;
	set.ne.s32.s32 $p2/$o127, $r2, $r4;
	@$p2.equ shl.u32 $r5, $r1, 0x00000001;
	@$p2.equ add.u32 $r4, $r4, -$r5;
	@$p2.equ add.u32 $r1, -$r1, constant1_ZN8dwt_cuda12fdwt97KernelILi192ELi8EEEvPKfPfiii[0x0034];
	shl.u32 $r5, $r4, 0x00000002;
	add.u32 $r5, s[0x0010], $r5;
	ld.global.u32 $r5, [$r5];
	add.u32 $r4, $r4, $r1;
	mov.u32 s[$ofs3+0x0e3c], $r5;
	set.ne.s32.s32 $p2/$o127, $r2, $r4;
	@$p2.equ shl.u32 $r5, $r1, 0x00000001;
	@$p2.equ add.u32 $r4, $r4, -$r5;
	@$p2.equ add.u32 $r1, -$r1, constant1_ZN8dwt_cuda12fdwt97KernelILi192ELi8EEEvPKfPfiii[0x0034];
	shl.u32 $r5, $r4, 0x00000002;
	add.u32 $r5, s[0x0010], $r5;
	ld.global.u32 $r5, [$r5];
	add.u32 $r4, $r4, $r1;
	mov.u32 s[$ofs3+0x0fcc], $r5;
	set.ne.s32.s32 $p2/$o127, $r2, $r4;
	@$p2.equ shl.u32 $r5, $r1, 0x00000001;
	@$p2.equ add.u32 $r4, $r4, -$r5;
	@$p2.equ add.u32 $r1, -$r1, constant1_ZN8dwt_cuda12fdwt97KernelILi192ELi8EEEvPKfPfiii[0x0034];
	shl.u32 $r5, $r4, 0x00000002;
	add.u32 $r5, s[0x0010], $r5;
	ld.global.u32 $r5, [$r5];
	add.u32 $r4, $r4, $r1;
	mov.u32 s[$ofs3+0x115c], $r5;
	set.ne.s32.s32 $p2/$o127, $r2, $r4;
	@$p2.equ shl.u32 $r5, $r1, 0x00000001;
	@$p2.equ add.u32 $r4, $r4, -$r5;
	@$p2.equ add.u32 $r1, -$r1, constant1_ZN8dwt_cuda12fdwt97KernelILi192ELi8EEEvPKfPfiii[0x0034];
	shl.u32 $r5, $r4, 0x00000002;
	add.u32 $r5, s[0x0010], $r5;
	ld.global.u32 $r5, [$r5];
	add.u32 $r4, $r4, $r1;
	mov.u32 s[$ofs3+0x12ec], $r5;
	set.ne.s32.s32 $p2/$o127, $r2, $r4;
	@$p2.equ shl.u32 $r5, $r1, 0x00000001;
	@$p2.equ add.u32 $r4, $r4, -$r5;
	@$p2.equ add.u32 $r1, -$r1, constant1_ZN8dwt_cuda12fdwt97KernelILi192ELi8EEEvPKfPfiii[0x0034];
	shl.u32 $r5, $r4, 0x00000002;
	add.u32 $r5, s[0x0010], $r5;
	ld.global.u32 $r5, [$r5];
	add.u32 $r29, $r4, $r1;
	mov.u32 s[$ofs3+0x147c], $r5;
	set.ne.s32.s32 $p2/$o127, $r2, $r29;
	@$p2.equ shl.u32 $r4, $r1, 0x00000001;
	@$p2.equ add.u32 $r29, $r29, -$r4;
	@$p2.equ add.u32 $r1, -$r1, constant1_ZN8dwt_cuda12fdwt97KernelILi192ELi8EEEvPKfPfiii[0x0034];
	shl.u32 $r4, $r29, 0x00000002;
	add.u32 $r4, s[0x0010], $r4;
	ld.global.u32 $r4, [$r4];
	mov.u32 s[$ofs3+0x160c], $r4;
	ssy 0x00001960;
	@$p0.eq bra l0x00001960;
	add.u32 $r4, $r28, $r0;
	set.ne.s32.s32 $p2/$o127, $r4, $r3;
	@$p2.equ shl.u32 $r5, $r0, 0x00000001;
	@$p2.equ add.u32 $r4, $r4, -$r5;
	@$p2.equ add.u32 $r0, -$r0, constant1_ZN8dwt_cuda12fdwt97KernelILi192ELi8EEEvPKfPfiii[0x0034];
	shl.u32 $r5, $r4, 0x00000002;
	add.u32 $r5, s[0x0010], $r5;
	ld.global.u32 $r5, [$r5];
	add.u32 $r4, $r4, $r0;
	shl.b32 $ofs1, $r31, 0x0;
	mov.u32 s[$ofs1+0x0b1c], $r5;
	set.ne.s32.s32 $p2/$o127, $r4, $r3;
	@$p2.equ shl.u32 $r5, $r0, 0x00000001;
	@$p2.equ add.u32 $r4, $r4, -$r5;
	@$p2.equ add.u32 $r0, -$r0, constant1_ZN8dwt_cuda12fdwt97KernelILi192ELi8EEEvPKfPfiii[0x0034];
	shl.u32 $r5, $r4, 0x00000002;
	add.u32 $r5, s[0x0010], $r5;
	ld.global.u32 $r5, [$r5];
	add.u32 $r4, $r4, $r0;
	shl.b32 $ofs1, $r31, 0x0;
	mov.u32 s[$ofs1+0x0cac], $r5;
	set.ne.s32.s32 $p2/$o127, $r4, $r3;
	@$p2.equ shl.u32 $r5, $r0, 0x00000001;
	@$p2.equ add.u32 $r4, $r4, -$r5;
	@$p2.equ add.u32 $r0, -$r0, constant1_ZN8dwt_cuda12fdwt97KernelILi192ELi8EEEvPKfPfiii[0x0034];
	shl.u32 $r5, $r4, 0x00000002;
	add.u32 $r5, s[0x0010], $r5;
	ld.global.u32 $r5, [$r5];
	add.u32 $r4, $r4, $r0;
	shl.b32 $ofs1, $r31, 0x0;
	mov.u32 s[$ofs1+0x0e3c], $r5;
	set.ne.s32.s32 $p2/$o127, $r4, $r3;
	@$p2.equ shl.u32 $r5, $r0, 0x00000001;
	@$p2.equ add.u32 $r4, $r4, -$r5;
	@$p2.equ add.u32 $r0, -$r0, constant1_ZN8dwt_cuda12fdwt97KernelILi192ELi8EEEvPKfPfiii[0x0034];
	shl.u32 $r5, $r4, 0x00000002;
	add.u32 $r5, s[0x0010], $r5;
	ld.global.u32 $r5, [$r5];
	add.u32 $r4, $r4, $r0;
	shl.b32 $ofs1, $r31, 0x0;
	mov.u32 s[$ofs1+0x0fcc], $r5;
	set.ne.s32.s32 $p2/$o127, $r4, $r3;
	@$p2.equ shl.u32 $r5, $r0, 0x00000001;
	@$p2.equ add.u32 $r4, $r4, -$r5;
	@$p2.equ add.u32 $r0, -$r0, constant1_ZN8dwt_cuda12fdwt97KernelILi192ELi8EEEvPKfPfiii[0x0034];
	shl.u32 $r5, $r4, 0x00000002;
	add.u32 $r5, s[0x0010], $r5;
	ld.global.u32 $r5, [$r5];
	add.u32 $r4, $r4, $r0;
	shl.b32 $ofs1, $r31, 0x0;
	mov.u32 s[$ofs1+0x115c], $r5;
	set.ne.s32.s32 $p2/$o127, $r4, $r3;
	@$p2.equ shl.u32 $r5, $r0, 0x00000001;
	@$p2.equ add.u32 $r4, $r4, -$r5;
	@$p2.equ add.u32 $r0, -$r0, constant1_ZN8dwt_cuda12fdwt97KernelILi192ELi8EEEvPKfPfiii[0x0034];
	shl.u32 $r5, $r4, 0x00000002;
	add.u32 $r5, s[0x0010], $r5;
	ld.global.u32 $r5, [$r5];
	add.u32 $r4, $r4, $r0;
	shl.b32 $ofs1, $r31, 0x0;
	mov.u32 s[$ofs1+0x12ec], $r5;
	set.ne.s32.s32 $p2/$o127, $r4, $r3;
	@$p2.equ shl.u32 $r5, $r0, 0x00000001;
	@$p2.equ add.u32 $r4, $r4, -$r5;
	@$p2.equ add.u32 $r0, -$r0, constant1_ZN8dwt_cuda12fdwt97KernelILi192ELi8EEEvPKfPfiii[0x0034];
	shl.u32 $r5, $r4, 0x00000002;
	add.u32 $r5, s[0x0010], $r5;
	ld.global.u32 $r5, [$r5];
	add.u32 $r28, $r4, $r0;
	shl.b32 $ofs1, $r31, 0x0;
	mov.u32 s[$ofs1+0x147c], $r5;
	set.ne.s32.s32 $p2/$o127, $r28, $r3;
	@$p2.equ shl.u32 $r4, $r0, 0x00000001;
	@$p2.equ add.u32 $r28, $r28, -$r4;
	@$p2.equ add.u32 $r0, -$r0, constant1_ZN8dwt_cuda12fdwt97KernelILi192ELi8EEEvPKfPfiii[0x0034];
	shl.u32 $r4, $r28, 0x00000002;
	add.u32 $r4, s[0x0010], $r4;
	ld.global.u32 $r4, [$r4];
	shl.b32 $ofs1, $r31, 0x0;
	mov.u32 s[$ofs1+0x160c], $r4;
	l0x00001960: nop;
	bar.sync 0x00000000;
	shl.b32 $ofs4, $r19, 0x00000002;
	add.u32 $ofs1, $ofs4, 0x000022bc;
	mov.u32 $r5, s[$ofs1+0x0000];
	add.u32 $ofs1, $ofs4, 0x00000b1c;
	mov.half.u32 $r4, s[$ofs1+0x0004];
	add.half.f32 $r4, s[$ofs1+0x0000], $r4;
	mad.f32 $r5, $r4, 0xbfcb0673, $r5;
	mov.u32 s[$ofs4+0x22bc], $r5;
	add.u32 $ofs1, $ofs4, 0x000025bc;
	mov.u32 $r5, s[$ofs1+0x0000];
	add.u32 $ofs1, $ofs4, 0x00000e1c;
	mov.half.u32 $r4, s[$ofs1+0x0004];
	add.half.f32 $r4, s[$ofs1+0x0000], $r4;
	mad.f32 $r5, $r4, 0xbfcb0673, $r5;
	mov.u32 s[$ofs4+0x25bc], $r5;
	add.u32 $ofs1, $ofs4, 0x000028bc;
	mov.u32 $r5, s[$ofs1+0x0000];
	add.u32 $ofs1, $ofs4, 0x0000111c;
	mov.half.u32 $r4, s[$ofs1+0x0004];
	add.half.f32 $r4, s[$ofs1+0x0000], $r4;
	mad.f32 $r5, $r4, 0xbfcb0673, $r5;
	mov.u32 s[$ofs4+0x28bc], $r5;
	add.u32 $ofs1, $ofs4, 0x00002bbc;
	mov.u32 $r5, s[$ofs1+0x0000];
	add.u32 $ofs1, $ofs4, 0x0000141c;
	mov.half.u32 $r4, s[$ofs1+0x0004];
	add.half.f32 $r4, s[$ofs1+0x0000], $r4;
	mad.f32 $r5, $r4, 0xbfcb0673, $r5;
	mov.u32 s[$ofs4+0x2bbc], $r5;
	ssy 0x00001a80;
	@$p1.eq bra l0x00001a80;
	shl.b32 $ofs4, $r19, 0x00000002;
	add.u32 $ofs1, $ofs4, 0x0000171c;
	mov.half.u32 $r4, s[$ofs1+0x0004];
	add.half.f32 $r5, s[$ofs1+0x0000], $r4;
	add.u32 $ofs1, $ofs4, 0x00002ebc;
	mov.u32 $r4, s[$ofs1+0x0000];
	mad.f32 $r4, $r5, 0xbfcb0673, $r4;
	mov.u32 s[$ofs4+0x2ebc], $r4;
	l0x00001a80: nop;
	bar.sync 0x00000000;
	shl.b32 $ofs4, $r19, 0x00000002;
	add.u32 $ofs1, $ofs4, 0x00000b20;
	mov.u32 $r5, s[$ofs1+0x0000];
	add.u32 $ofs1, $ofs4, 0x000022bc;
	mov.half.u32 $r4, s[$ofs1+0x0004];
	add.half.f32 $r4, s[$ofs1+0x0000], $r4;
	mad.f32 $r5, $r4, 0xbd5901ae, $r5;
	mov.u32 s[$ofs4+0x0b20], $r5;
	add.u32 $ofs1, $ofs4, 0x00000e20;
	mov.u32 $r5, s[$ofs1+0x0000];
	add.u32 $ofs1, $ofs4, 0x000025bc;
	mov.half.u32 $r4, s[$ofs1+0x0004];
	add.half.f32 $r4, s[$ofs1+0x0000], $r4;
	mad.f32 $r5, $r4, 0xbd5901ae, $r5;
	mov.u32 s[$ofs4+0x0e20], $r5;
	add.u32 $ofs1, $ofs4, 0x00001120;
	mov.u32 $r5, s[$ofs1+0x0000];
	add.u32 $ofs1, $ofs4, 0x000028bc;
	mov.half.u32 $r4, s[$ofs1+0x0004];
	add.half.f32 $r4, s[$ofs1+0x0000], $r4;
	mad.f32 $r5, $r4, 0xbd5901ae, $r5;
	mov.u32 s[$ofs4+0x1120], $r5;
	add.u32 $ofs1, $ofs4, 0x00001420;
	mov.u32 $r5, s[$ofs1+0x0000];
	add.u32 $ofs1, $ofs4, 0x00002bbc;
	mov.half.u32 $r4, s[$ofs1+0x0004];
	add.half.f32 $r4, s[$ofs1+0x0000], $r4;
	mad.f32 $r5, $r4, 0xbd5901ae, $r5;
	mov.u32 s[$ofs4+0x1420], $r5;
	ssy 0x00001ba0;
	@$p1.eq bra l0x00001ba0;
	shl.b32 $ofs4, $r19, 0x00000002;
	add.u32 $ofs1, $ofs4, 0x00002ebc;
	mov.half.u32 $r4, s[$ofs1+0x0004];
	add.half.f32 $r5, s[$ofs1+0x0000], $r4;
	add.u32 $ofs1, $ofs4, 0x00001720;
	mov.u32 $r4, s[$ofs1+0x0000];
	mad.f32 $r4, $r5, 0xbd5901ae, $r4;
	mov.u32 s[$ofs4+0x1720], $r4;
	l0x00001ba0: nop;
	bar.sync 0x00000000;
	shl.b32 $ofs4, $r19, 0x00000002;
	add.u32 $ofs1, $ofs4, 0x000022bc;
	mov.u32 $r5, s[$ofs1+0x0000];
	add.u32 $ofs1, $ofs4, 0x00000b1c;
	mov.half.u32 $r4, s[$ofs1+0x0004];
	add.half.f32 $r4, s[$ofs1+0x0000], $r4;
	mad.f32 $r5, $r4, 0x3f620676, $r5;
	mov.u32 s[$ofs4+0x22bc], $r5;
	add.u32 $ofs1, $ofs4, 0x000025bc;
	mov.u32 $r5, s[$ofs1+0x0000];
	add.u32 $ofs1, $ofs4, 0x00000e1c;
	mov.half.u32 $r4, s[$ofs1+0x0004];
	add.half.f32 $r4, s[$ofs1+0x0000], $r4;
	mad.f32 $r5, $r4, 0x3f620676, $r5;
	mov.u32 s[$ofs4+0x25bc], $r5;
	add.u32 $ofs1, $ofs4, 0x000028bc;
	mov.u32 $r5, s[$ofs1+0x0000];
	add.u32 $ofs1, $ofs4, 0x0000111c;
	mov.half.u32 $r4, s[$ofs1+0x0004];
	add.half.f32 $r4, s[$ofs1+0x0000], $r4;
	mad.f32 $r5, $r4, 0x3f620676, $r5;
	mov.u32 s[$ofs4+0x28bc], $r5;
	add.u32 $ofs1, $ofs4, 0x00002bbc;
	mov.u32 $r5, s[$ofs1+0x0000];
	add.u32 $ofs1, $ofs4, 0x0000141c;
	mov.half.u32 $r4, s[$ofs1+0x0004];
	add.half.f32 $r4, s[$ofs1+0x0000], $r4;
	mad.f32 $r5, $r4, 0x3f620676, $r5;
	mov.u32 s[$ofs4+0x2bbc], $r5;
	ssy 0x00001cc0;
	@$p1.eq bra l0x00001cc0;
	shl.b32 $ofs4, $r19, 0x00000002;
	add.u32 $ofs1, $ofs4, 0x0000171c;
	mov.half.u32 $r4, s[$ofs1+0x0004];
	add.half.f32 $r5, s[$ofs1+0x0000], $r4;
	add.u32 $ofs1, $ofs4, 0x00002ebc;
	mov.u32 $r4, s[$ofs1+0x0000];
	mad.f32 $r4, $r5, 0x3f620676, $r4;
	mov.u32 s[$ofs4+0x2ebc], $r4;
	l0x00001cc0: nop;
	bar.sync 0x00000000;
	shl.b32 $ofs4, $r19, 0x00000002;
	add.u32 $ofs1, $ofs4, 0x00000b20;
	mov.u32 $r5, s[$ofs1+0x0000];
	add.u32 $ofs1, $ofs4, 0x000022bc;
	mov.half.u32 $r4, s[$ofs1+0x0004];
	add.half.f32 $r4, s[$ofs1+0x0000], $r4;
	mad.f32 $r5, $r4, 0x3ee31355, $r5;
	mov.u32 s[$ofs4+0x0b20], $r5;
	add.u32 $ofs1, $ofs4, 0x00000e20;
	mov.u32 $r5, s[$ofs1+0x0000];
	add.u32 $ofs1, $ofs4, 0x000025bc;
	mov.half.u32 $r4, s[$ofs1+0x0004];
	add.half.f32 $r4, s[$ofs1+0x0000], $r4;
	mad.f32 $r5, $r4, 0x3ee31355, $r5;
	mov.u32 s[$ofs4+0x0e20], $r5;
	add.u32 $ofs1, $ofs4, 0x00001120;
	mov.u32 $r5, s[$ofs1+0x0000];
	add.u32 $ofs1, $ofs4, 0x000028bc;
	mov.half.u32 $r4, s[$ofs1+0x0004];
	add.half.f32 $r4, s[$ofs1+0x0000], $r4;
	mad.f32 $r5, $r4, 0x3ee31355, $r5;
	mov.u32 s[$ofs4+0x1120], $r5;
	add.u32 $ofs1, $ofs4, 0x00001420;
	mov.u32 $r5, s[$ofs1+0x0000];
	add.u32 $ofs1, $ofs4, 0x00002bbc;
	mov.half.u32 $r4, s[$ofs1+0x0004];
	add.half.f32 $r4, s[$ofs1+0x0000], $r4;
	mad.f32 $r5, $r4, 0x3ee31355, $r5;
	mov.u32 s[$ofs4+0x1420], $r5;
	ssy 0x00001de0;
	@$p1.eq bra l0x00001de0;
	shl.b32 $ofs4, $r19, 0x00000002;
	add.u32 $ofs1, $ofs4, 0x00002ebc;
	mov.half.u32 $r4, s[$ofs1+0x0004];
	add.half.f32 $r5, s[$ofs1+0x0000], $r4;
	add.u32 $ofs1, $ofs4, 0x00001720;
	mov.u32 $r4, s[$ofs1+0x0000];
	mad.f32 $r4, $r5, 0x3ee31355, $r4;
	mov.u32 s[$ofs4+0x1720], $r4;
	l0x00001de0: nop;
	bar.sync 0x00000000;
	shl.b32 $ofs4, $r19, 0x00000002;
	add.u32 $ofs1, $ofs4, 0x00000b1c;
	mul.f32 $r4, s[$ofs1+0x0000], 0x3f5019c3;
	mov.u32 s[$ofs4+0x0b1c], $r4;
	add.u32 $ofs1, $ofs4, 0x000022bc;
	mul.f32 $r4, s[$ofs1+0x0000], 0x3f9d7658;
	mov.u32 s[$ofs4+0x22bc], $r4;
	add.u32 $ofs1, $ofs4, 0x00000e1c;
	mul.f32 $r4, s[$ofs1+0x0000], 0x3f5019c3;
	mov.u32 s[$ofs4+0x0e1c], $r4;
	add.u32 $ofs1, $ofs4, 0x000025bc;
	mul.f32 $r4, s[$ofs1+0x0000], 0x3f9d7658;
	mov.u32 s[$ofs4+0x25bc], $r4;
	add.u32 $ofs1, $ofs4, 0x0000111c;
	mul.f32 $r4, s[$ofs1+0x0000], 0x3f5019c3;
	mov.u32 s[$ofs4+0x111c], $r4;
	add.u32 $ofs1, $ofs4, 0x000028bc;
	mul.f32 $r4, s[$ofs1+0x0000], 0x3f9d7658;
	mov.u32 s[$ofs4+0x28bc], $r4;
	add.u32 $ofs1, $ofs4, 0x0000141c;
	mul.f32 $r4, s[$ofs1+0x0000], 0x3f5019c3;
	mov.u32 s[$ofs4+0x141c], $r4;
	add.u32 $ofs1, $ofs4, 0x00002bbc;
	mul.f32 $r4, s[$ofs1+0x0000], 0x3f9d7658;
	mov.u32 s[$ofs4+0x2bbc], $r4;
	ssy 0x00001f08;
	mov.pred $p2, $r35;
	@$p2.eq bra l0x00001f08;
	shl.b32 $ofs4, $r19, 0x00000002;
	add.u32 $ofs1, $ofs4, 0x0000171c;
	mul.f32 $r4, s[$ofs1+0x0000], 0x3f5019c3;
	mov.u32 s[$ofs4+0x171c], $r4;
	add.u32 $ofs1, $ofs4, 0x00002ebc;
	mul.f32 $r4, s[$ofs1+0x0000], 0x3f9d7658;
	mov.u32 s[$ofs4+0x2ebc], $r4;
	l0x00001f08: nop;
	bar.sync 0x00000000;
	add.u32 $ofs1, $ofs2, 0x000001bc;
	mov.u32 $r13, s[$ofs1+0x0000];
	add.u32 $ofs1, $ofs2, 0x00000e3c;
	mov.half.u32 $r5, s[$ofs1+0x0000];
	mov.half.u32 $r22, s[$ofs1+0x0000];
	add.u32 $ofs1, $ofs2, 0x0000115c;
	mov.half.u32 $r7, s[$ofs1+0x0000];
	mov.half.u32 $r15, s[$ofs1+0x0000];
	add.u32 $ofs1, $ofs2, 0x0000147c;
	mov.half.u32 $r9, s[$ofs1+0x0000];
	mov.half.u32 $r16, s[$ofs1+0x0000];
	add.u32 $ofs1, $ofs2, 0x0000034c;
	mov.half.u32 $r11, s[$ofs1+0x0000];
	mov.half.u32 $r12, s[$ofs1+0x0000];
	mov.u32 $r23, s[$ofs1+0x0000];
	add.u32 $ofs4, $ofs2, 0x000012ec;
	add.u32 $ofs1, $ofs2, 0x00000fcc;
	mov.u32 $r4, s[$ofs4+0x0000];
	mov.half.u32 $r10, s[$ofs1+0x0000];
	mov.half.u32 $r6, s[$ofs1+0x0000];
	mov.half.u32 $r18, s[$ofs1+0x0000];
	add.half.f32 $r14, s[$ofs1+0x0000], $r4;
	add.u32 $ofs1, $ofs2, 0x0000160c;
	mov.u32 $r4, s[$ofs1+0x0000];
	mov.u32 $r8, s[$ofs4+0x0000];
	mov.u32 $r17, s[$ofs4+0x0000];
	add.f32 $r24, s[$ofs4+0x0000], $r4;
	add.u32 $ofs4, $ofs2, 0x00000cac;
	mov.u32 $r4, s[$ofs4+0x0000];
	mov.u32 $r21, s[$ofs4+0x0000];
	mov.u32 $r26, s[$ofs4+0x0000];
	add.f32 $r36, s[$ofs4+0x0000], $r10;
	mad.f32 $r15, $r14, 0xbfcb0673, $r15;
	mad.f32 $r16, $r24, 0xbfcb0673, $r16;
	add.half.f32 $r14, $r15, $r16;
	add.half.f32 $r10, s[$ofs2+0x002c], $r11;
	mad.f32 $r17, $r14, 0xbd5901ae, $r17;
	mad.f32 $r13, $r10, 0xbfcb0673, $r13;
	mov.half.u32 $r11, s[$ofs2+0x002c];
	mov.half.u32 $r10, s[$ofs1+0x0000];
	add.f32 $r34, s[$ofs1+0x0000], $r17;
	add.u32 $ofs1, $ofs2, 0x000004dc;
	mov.u32 s[$ofs2+0x01bc], $r13;
	mov.u32 $r24, s[$ofs1+0x0000];
	add.u32 $ofs1, $ofs2, 0x0000066c;
	mov.half.u32 $r14, s[$ofs1+0x0000];
	add.half.f32 $r12, $r12, $r14;
	mad.f32 $r12, $r12, constant1_ZN8dwt_cuda12fdwt97KernelILi192ELi8EEEvPKfPfiii[0x0018], $r24;
	mov.half.u32 $r14, s[$ofs1+0x0000];
	mov.half.u32 $r24, s[$ofs1+0x0000];
	add.u32 $ofs1, $ofs2, 0x000007fc;
	mov.u32 s[$ofs2+0x04dc], $r12;
	mov.u32 $r37, s[$ofs1+0x0000];
	add.u32 $ofs1, $ofs2, 0x0000098c;
	mov.half.u32 $r25, s[$ofs1+0x0000];
	add.half.f32 $r14, $r14, $r25;
	mad.f32 $r14, $r14, constant1_ZN8dwt_cuda12fdwt97KernelILi192ELi8EEEvPKfPfiii[0x0018], $r37;
	mov.half.u32 $r37, s[$ofs1+0x0000];
	mov.half.u32 $r25, s[$ofs1+0x0000];
	add.u32 $ofs1, $ofs2, 0x00000b1c;
	mov.u32 s[$ofs2+0x07fc], $r14;
	add.half.f32 $r37, $r21, $r37;
	mov.half.u32 $r21, s[$ofs1+0x0000];
	mad.f32 $r21, $r37, 0xbfcb0673, $r21;
	mad.f32 $r22, $r36, 0xbfcb0673, $r22;
	mov.u32 s[$ofs2+0x0b1c], $r21;
	mov.u32 s[$ofs2+0x0e3c], $r22;
	add.f32 $r36, $r13, $r12;
	mov.u32 s[$ofs2+0x115c], $r15;
	add.f32 $r37, $r12, $r14;
	mad.f32 $r23, $r36, 0xbd5901ae, $r23;
	mov.u32 s[$ofs2+0x147c], $r16;
	mad.f32 $r24, $r37, 0xbd5901ae, $r24;
	add.f32 $r36, $r14, $r21;
	mov.u32 s[$ofs2+0x034c], $r23;
	add.f32 $r37, $r21, $r22;
	mad.f32 $r25, $r36, 0xbd5901ae, $r25;
	mov.u32 s[$ofs2+0x066c], $r24;
	mad.f32 $r26, $r37, 0xbd5901ae, $r26;
	add.f32 $r36, $r22, $r15;
	mov.u32 s[$ofs2+0x098c], $r25;
	mad.f32 $r18, $r36, 0xbd5901ae, $r18;
	mov.u32 s[$ofs2+0x0cac], $r26;
	add.f32 $r11, $r11, $r23;
	mov.u32 s[$ofs2+0x0fcc], $r18;
	mad.f32 $r13, $r11, 0x3f620676, $r13;
	add.f32 $r11, $r23, $r24;
	mov.u32 s[$ofs2+0x12ec], $r17;
	add.f32 $r36, $r24, $r25;
	mad.f32 $r12, $r11, 0x3f620676, $r12;
	mov.u32 s[$ofs2+0x01bc], $r13;
	mad.f32 $r14, $r36, 0x3f620676, $r14;
	add.f32 $r11, $r25, $r26;
	mov.u32 s[$ofs2+0x04dc], $r12;
	add.f32 $r36, $r26, $r18;
	mad.f32 $r21, $r11, 0x3f620676, $r21;
	mov.u32 s[$ofs2+0x07fc], $r14;
	mad.f32 $r22, $r36, 0x3f620676, $r22;
	add.f32 $r11, $r18, $r17;
	mov.u32 s[$ofs2+0x0b1c], $r21;
	mad.f32 $r15, $r11, 0x3f620676, $r15;
	mov.u32 s[$ofs2+0x0e3c], $r22;
	mad.f32 $r16, $r34, 0x3f620676, $r16;
	add.f32 $r11, $r13, $r12;
	mov.u32 s[$ofs2+0x115c], $r15;
	mad.f32 $r23, $r11, 0x3ee31355, $r23;
	mov.u32 s[$ofs2+0x147c], $r16;
	add.f32 $r11, $r12, $r14;
	mov.u32 s[$ofs2+0x034c], $r23;
	add.f32 $r12, $r14, $r21;
	mad.f32 $r24, $r11, 0x3ee31355, $r24;
	mad.f32 $r25, $r12, 0x3ee31355, $r25;
	mov.u32 s[$ofs2+0x066c], $r24;
	add.f32 $r11, $r21, $r22;
	mov.u32 s[$ofs2+0x098c], $r25;
	mad.f32 $r26, $r11, 0x3ee31355, $r26;
	add.f32 $r11, $r22, $r15;
	mov.u32 s[$ofs2+0x0cac], $r26;
	add.f32 $r12, $r15, $r16;
	mad.f32 $r18, $r11, 0x3ee31355, $r18;
	mad.f32 $r17, $r12, 0x3ee31355, $r17;
	mov.u32 s[$ofs2+0x0fcc], $r18;
	mov.u32 s[$ofs2+0x12ec], $r17;
	mul.f32 $r11, $r24, 0x3f5019c3;
	set.ne.s32.s32 $p3/$r12, $r27, $r30;
	cvt.s32.s32 $p2|$o127, $r12;
	@$p3.neu shl.u32 $r12, $r27, 0x00000002;
	@$p3.neu add.u32 $r12, s[0x0018], $r12;
	@$p3.neu add.u32 $r27, $r27, $r20;
	@$p3.neu st.global.u32 [$r12], $r11;
	@$p3.neu set.ne.s32.s32 $p2/$o127, $r27, $r30;
	add.u32 $ofs1, $ofs2, 0x000007fc;
	mul.f32 $r11, s[$ofs1+0x0000], 0x3f9d7658;
	@$p2.neu shl.u32 $r12, $r27, 0x00000002;
	@$p2.neu add.u32 $r12, s[0x0018], $r12;
	@$p2.neu add.u32 $r27, $r27, $r32;
	@$p2.neu st.global.u32 [$r12], $r11;
	@$p2.neu set.ne.s32.s32 $p2/$o127, $r27, $r30;
	add.u32 $ofs1, $ofs2, 0x0000098c;
	mul.f32 $r11, s[$ofs1+0x0000], 0x3f5019c3;
	@$p2.neu shl.u32 $r12, $r27, 0x00000002;
	@$p2.neu add.u32 $r12, s[0x0018], $r12;
	@$p2.neu add.u32 $r27, $r27, $r20;
	@$p2.neu st.global.u32 [$r12], $r11;
	@$p2.neu set.ne.s32.s32 $p2/$o127, $r27, $r30;
	add.u32 $ofs1, $ofs2, 0x00000b1c;
	mul.f32 $r11, s[$ofs1+0x0000], 0x3f9d7658;
	@$p2.neu shl.u32 $r12, $r27, 0x00000002;
	@$p2.neu add.u32 $r12, s[0x0018], $r12;
	@$p2.neu add.u32 $r27, $r27, $r32;
	@$p2.neu st.global.u32 [$r12], $r11;
	@$p2.neu set.ne.s32.s32 $p2/$o127, $r27, $r30;
	add.u32 $ofs1, $ofs2, 0x00000cac;
	mul.f32 $r11, s[$ofs1+0x0000], 0x3f5019c3;
	@$p2.neu shl.u32 $r12, $r27, 0x00000002;
	@$p2.neu add.u32 $r12, s[0x0018], $r12;
	@$p2.neu add.u32 $r27, $r27, $r20;
	@$p2.neu st.global.u32 [$r12], $r11;
	@$p2.neu set.ne.s32.s32 $p2/$o127, $r27, $r30;
	add.u32 $ofs1, $ofs2, 0x00000e3c;
	mul.f32 $r11, s[$ofs1+0x0000], 0x3f9d7658;
	@$p2.neu shl.u32 $r12, $r27, 0x00000002;
	@$p2.neu add.u32 $r12, s[0x0018], $r12;
	@$p2.neu add.u32 $r27, $r27, $r32;
	@$p2.neu st.global.u32 [$r12], $r11;
	@$p2.neu set.ne.s32.s32 $p2/$o127, $r27, $r30;
	add.u32 $ofs1, $ofs2, 0x00000fcc;
	mul.f32 $r11, s[$ofs1+0x0000], 0x3f5019c3;
	@$p2.neu shl.u32 $r12, $r27, 0x00000002;
	@$p2.neu add.u32 $r12, s[0x0018], $r12;
	@$p2.neu add.u32 $r27, $r27, $r20;
	@$p2.neu st.global.u32 [$r12], $r11;
	@$p2.neu set.ne.s32.s32 $p2/$o127, $r27, $r30;
	add.u32 $ofs1, $ofs2, 0x0000115c;
	mul.f32 $r11, s[$ofs1+0x0000], 0x3f9d7658;
	@$p2.neu shl.u32 $r12, $r27, 0x00000002;
	@$p2.neu add.u32 $r12, s[0x0018], $r12;
	@$p2.neu st.global.u32 [$r12], $r11;
	@$p2.neu add.u32 $r27, $r27, $r32;
	mov.u32 s[$ofs2+0x002c], $r4;
	mov.u32 s[$ofs2+0x01bc], $r5;
	mov.u32 s[$ofs2+0x034c], $r6;
	mov.u32 s[$ofs2+0x04dc], $r7;
	mov.u32 s[$ofs2+0x066c], $r8;
	mov.u32 s[$ofs2+0x07fc], $r9;
	mov.u32 s[$ofs2+0x098c], $r10;
	bar.sync 0x00000000;
	add.u32 $r33, $r33, 0x00000001;
	set.ne.s32.s32 $p2/$o127, s[0x0028], $r33;
	@$p2.ne bra l0x00001490;
	retp;
	l0x000024a8: mul.wide.u16 $r0, %ctaid.x, 0x000000c0;
	add.u32 $r0, $r0, 0x000000c3;
	set.gt.s32.s32 $p3/$o127, s[0x0020], $r0;
	@$p3.ne bra l0x000041b0;
	cvt.u32.u16 $r4, %ctaid.y;
	set.eq.u32.u32 $p3/$o127, $r4, $r124;
	@$p3.eq bra l0x000026b0;
	ssy 0x00002530;
	@$p2.eq bra l0x00002510;
	shl.u32 $r0, s[0x0020], 0x00000001;
	add.u32 $r0, $r0, -$r2;
	add.u32 $r1, $r0, 0xfffffffe;
	bra l0x00002530;
	l0x00002510: add.u32 $r1, -$r2, 0x00000000;
	set.lt.s32.s32 $p3/$o127, $r2, $r124;
	@$p3 mov.u32 $r0, $p3;
	@$p3.equ mov.u32 $r1, $r2;
	l0x00002530: mov.u32 $r0, s[0x0020];
	mul.wide.u16 $r4, $r0.lo, $r7.hi;
	mad.wide.u16 $r4, $r0.hi, $r7.lo, $r4;
	shl.u32 $r4, $r4, 0x00000010;
	mad.wide.u16 $r0, $r0.lo, $r7.lo, $r4;
	add.half.u32 $r0, $r0, $r1;
	add.half.u32 $r4, s[0x0020], $r0;
	shl.u32 $r0, $r0, 0x00000002;
	shl.u32 $r5, $r4, 0x00000002;
	add.u32 $r0, s[0x0010], $r0;
	ld.global.u32 $r1, [$r0];
	add.u32 $r0, s[0x0010], $r5;
	ld.global.u32 $r0, [$r0];
	add.half.u32 $r4, s[0x0020], $r4;
	add.half.u32 $r5, s[0x0020], $r4;
	mov.u32 s[$ofs3+0x066c], $r1;
	add.u32 $r11, s[0x0020], $r5;
	shl.u32 $r1, $r4, 0x00000002;
	mov.u32 s[$ofs3+0x07fc], $r0;
	shl.u32 $r5, $r5, 0x00000002;
	shl.u32 $r11, $r11, 0x00000002;
	add.u32 $r1, s[0x0010], $r1;
	ld.global.u32 $r4, [$r1];
	mov.u32 s[$ofs3+0x04dc], $r0;
	add.u32 $r0, s[0x0010], $r5;
	ld.global.u32 $r1, [$r0];
	add.u32 $r0, s[0x0010], $r11;
	ld.global.u32 $r0, [$r0];
	mov.u32 s[$ofs3+0x098c], $r4;
	mov.u32 s[$ofs3+0x034c], $r4;
	mov.u32 s[$ofs3+0x01bc], $r1;
	mov.u32 s[$ofs3+0x002c], $r0;
	ssy 0x00002668;
	@$p2.eq bra l0x00002650;
	shl.u32 $r0, s[0x0020], 0x00000001;
	add.u32 $r0, $r0, -$r2;
	add.u32 $r1, $r0, 0xfffffffe;
	bra l0x00002668;
	l0x00002650: add.u32 $r1, -$r2, 0x00000000;
	set.lt.s32.s32 $p2/$o127, $r2, $r124;
	@$p2.equ mov.u32 $r1, $r2;
	l0x00002668: nop;
	add.u32 $r2, $r7, 0x00000003;
	mov.u32 $r0, s[0x0020];
	mul.wide.u16 $r4, $r0.lo, $r2.hi;
	mad.wide.u16 $r4, $r0.hi, $r2.lo, $r4;
	shl.u32 $r4, $r4, 0x00000010;
	mad.wide.u16 $r0, $r0.lo, $r2.lo, $r4;
	add.half.u32 $r0, $r0, $r1;
	add.half.u32 $r11, -s[0x0020], $r0;
	bra l0x00002838;
	l0x000026b0: ssy 0x000026f8;
	@$p2.eq bra l0x000026e0;
	shl.u32 $r0, s[0x0020], 0x00000001;
	add.u32 $r0, $r0, -$r2;
	add.u32 $r1, $r0, 0xfffffffe;
	bra l0x000026f8;
	l0x000026e0: add.u32 $r1, -$r2, 0x00000000;
	set.lt.s32.s32 $p2/$o127, $r2, $r124;
	@$p2.equ mov.u32 $r1, $r2;
	l0x000026f8: mov.u32 $r0, s[0x0020];
	add.u32 $r2, $r7, 0xfffffffc;
	mul.wide.u16 $r4, $r2.lo, $r0.hi;
	mad.wide.u16 $r4, $r2.hi, $r0.lo, $r4;
	shl.u32 $r4, $r4, 0x00000010;
	mad.wide.u16 $r0, $r2.lo, $r0.lo, $r4;
	add.half.u32 $r0, $r0, $r1;
	add.half.u32 $r1, s[0x0020], $r0;
	add.u32 $r4, s[0x0020], $r1;
	shl.u32 $r0, $r0, 0x00000002;
	shl.u32 $r1, $r1, 0x00000002;
	shl.u32 $r5, $r4, 0x00000002;
	add.u32 $r0, s[0x0010], $r0;
	ld.global.u32 $r2, [$r0];
	add.u32 $r0, s[0x0010], $r1;
	ld.global.u32 $r1, [$r0];
	add.u32 $r0, s[0x0010], $r5;
	ld.global.u32 $r0, [$r0];
	add.u32 $r4, s[0x0020], $r4;
	mov.u32 s[$ofs3+0x002c], $r2;
	add.u32 $r2, s[0x0020], $r4;
	mov.u32 s[$ofs3+0x01bc], $r1;
	add.u32 $r5, s[0x0020], $r2;
	mov.u32 s[$ofs3+0x034c], $r0;
	add.u32 $r11, s[0x0020], $r5;
	shl.u32 $r0, $r4, 0x00000002;
	shl.u32 $r1, $r2, 0x00000002;
	shl.u32 $r5, $r5, 0x00000002;
	shl.u32 $r12, $r11, 0x00000002;
	add.u32 $r0, s[0x0010], $r0;
	ld.global.u32 $r4, [$r0];
	add.u32 $r0, s[0x0010], $r1;
	ld.global.u32 $r2, [$r0];
	add.u32 $r0, s[0x0010], $r5;
	ld.global.u32 $r1, [$r0];
	add.u32 $r0, s[0x0010], $r12;
	ld.global.u32 $r0, [$r0];
	mov.u32 s[$ofs3+0x04dc], $r4;
	mov.u32 s[$ofs3+0x066c], $r2;
	mov.u32 s[$ofs3+0x07fc], $r1;
	mov.u32 s[$ofs3+0x098c], $r0;
	l0x00002838: ssy 0x00002c88;
	@$p0.eq bra l0x00002c68;
	add.u32 $r0, $r19, 0xfffffff9;
	set.le.u32.u32 $p2/$o127, $r19, constant1_ZN8dwt_cuda12fdwt97KernelILi192ELi8EEEvPKfPfiii[0x0010];
	@$p2.ne add.u32 $r0, $r19, constant1_ZN8dwt_cuda12fdwt97KernelILi192ELi8EEEvPKfPfiii[0x0014];
	add.u32 $r1, $r0, 0x00000004;
	mov.u32 $r4, 0x000005e8;
	and.b32 $r2, $r1, constant1_ZN8dwt_cuda12fdwt97KernelILi192ELi8EEEvPKfPfiii[0x0000];
	mul.wide.u16 $r12, $r2.lo, $r4.hi;
	shr.s32 $r5, $r1, 0x0000001f;
	mad.wide.u16 $r12, $r2.hi, $r4.lo, $r12;
	and.b32 $r5, $r5, constant1_ZN8dwt_cuda12fdwt97KernelILi192ELi8EEEvPKfPfiii[0x0000];
	shl.u32 $r12, $r12, 0x00000010;
	add.u32 $r1, $r1, $r5;
	mad.wide.u16 $r2, $r2.lo, $r4.lo, $r12;
	shr.s32 $r1, $r1, 0x00000001;
	add.u32 $r1, $r2, $r1;
	shl.b32 $ofs1, $r1, 0x00000002;
	mov.u32 $r25, $ofs1;
	add.u32 $r2, $r0, $r3;
	set.le.s32.s32 $p2/$o127, s[0x0020], $r2;
	cvt.u32.u16 $r4, %ctaid.y;
	set.eq.u32.u32 $p3/$o127, $r4, $r124;
	@$p3.eq bra l0x00002ac8;
	ssy 0x00002940;
	@$p2.eq bra l0x00002928;
	shl.u32 $r0, s[0x0020], 0x00000001;
	add.u32 $r0, $r0, -$r2;
	add.u32 $r1, $r0, 0xfffffffe;
	bra l0x00002940;
	l0x00002928: add.u32 $r1, -$r2, 0x00000000;
	set.lt.s32.s32 $p3/$o127, $r2, $r124;
	@$p3.equ mov.u32 $r1, $r2;
	l0x00002940: mov.u32 $r0, s[0x0020];
	mul.wide.u16 $r3, $r0.lo, $r7.hi;
	mad.wide.u16 $r3, $r0.hi, $r7.lo, $r3;
	shl.u32 $r3, $r3, 0x00000010;
	mad.wide.u16 $r0, $r0.lo, $r7.lo, $r3;
	add.half.u32 $r0, $r0, $r1;
	add.half.u32 $r3, s[0x0020], $r0;
	shl.u32 $r0, $r0, 0x00000002;
	shl.u32 $r4, $r3, 0x00000002;
	add.u32 $r0, s[0x0010], $r0;
	ld.global.u32 $r1, [$r0];
	add.u32 $r0, s[0x0010], $r4;
	ld.global.u32 $r0, [$r0];
	add.half.u32 $r3, s[0x0020], $r3;
	add.half.u32 $r4, s[0x0020], $r3;
	shl.b32 $ofs1, $r25, 0x0;
	mov.u32 s[$ofs1+0x066c], $r1;
	add.u32 $r5, s[0x0020], $r4;
	shl.u32 $r1, $r3, 0x00000002;
	mov.u32 s[$ofs1+0x07fc], $r0;
	shl.u32 $r4, $r4, 0x00000002;
	shl.u32 $r5, $r5, 0x00000002;
	add.u32 $r1, s[0x0010], $r1;
	ld.global.u32 $r3, [$r1];
	mov.u32 s[$ofs1+0x04dc], $r0;
	add.u32 $r0, s[0x0010], $r4;
	ld.global.u32 $r1, [$r0];
	add.u32 $r0, s[0x0010], $r5;
	ld.global.u32 $r0, [$r0];
	mov.u32 s[$ofs1+0x098c], $r3;
	mov.u32 s[$ofs1+0x034c], $r3;
	mov.u32 s[$ofs1+0x01bc], $r1;
	mov.u32 s[$ofs1+0x002c], $r0;
	ssy 0x00002a80;
	@$p2.eq bra l0x00002a68;
	shl.u32 $r0, s[0x0020], 0x00000001;
	add.u32 $r0, $r0, -$r2;
	add.u32 $r1, $r0, 0xfffffffe;
	bra l0x00002a80;
	l0x00002a68: add.u32 $r1, -$r2, 0x00000000;
	set.lt.s32.s32 $p2/$o127, $r2, $r124;
	@$p2.equ mov.u32 $r1, $r2;
	l0x00002a80: nop;
	add.u32 $r2, $r7, 0x00000003;
	mov.u32 $r0, s[0x0020];
	mul.wide.u16 $r3, $r0.lo, $r2.hi;
	mad.wide.u16 $r3, $r0.hi, $r2.lo, $r3;
	shl.u32 $r3, $r3, 0x00000010;
	mad.wide.u16 $r0, $r0.lo, $r2.lo, $r3;
	add.half.u32 $r0, $r0, $r1;
	add.half.u32 $r24, -s[0x0020], $r0;
	bra l0x00002c58;
	l0x00002ac8: ssy 0x00002b10;
	@$p2.eq bra l0x00002af8;
	shl.u32 $r0, s[0x0020], 0x00000001;
	add.u32 $r0, $r0, -$r2;
	add.u32 $r1, $r0, 0xfffffffe;
	bra l0x00002b10;
	l0x00002af8: add.u32 $r1, -$r2, 0x00000000;
	set.lt.s32.s32 $p2/$o127, $r2, $r124;
	@$p2.equ mov.u32 $r1, $r2;
	l0x00002b10: mov.u32 $r0, s[0x0020];
	add.u32 $r2, $r7, 0xfffffffc;
	mul.wide.u16 $r3, $r2.lo, $r0.hi;
	mad.wide.u16 $r3, $r2.hi, $r0.lo, $r3;
	shl.u32 $r3, $r3, 0x00000010;
	mad.wide.u16 $r0, $r2.lo, $r0.lo, $r3;
	add.half.u32 $r0, $r0, $r1;
	add.half.u32 $r1, s[0x0020], $r0;
	add.u32 $r3, s[0x0020], $r1;
	shl.u32 $r0, $r0, 0x00000002;
	shl.u32 $r1, $r1, 0x00000002;
	shl.u32 $r4, $r3, 0x00000002;
	add.u32 $r0, s[0x0010], $r0;
	ld.global.u32 $r2, [$r0];
	add.u32 $r0, s[0x0010], $r1;
	ld.global.u32 $r1, [$r0];
	add.u32 $r0, s[0x0010], $r4;
	ld.global.u32 $r0, [$r0];
	add.u32 $r3, s[0x0020], $r3;
	shl.b32 $ofs1, $r25, 0x0;
	mov.u32 s[$ofs1+0x002c], $r2;
	add.u32 $r2, s[0x0020], $r3;
	mov.u32 s[$ofs1+0x01bc], $r1;
	add.u32 $r4, s[0x0020], $r2;
	mov.u32 s[$ofs1+0x034c], $r0;
	add.u32 $r24, s[0x0020], $r4;
	shl.u32 $r0, $r3, 0x00000002;
	shl.u32 $r1, $r2, 0x00000002;
	shl.u32 $r4, $r4, 0x00000002;
	shl.u32 $r5, $r24, 0x00000002;
	add.u32 $r0, s[0x0010], $r0;
	ld.global.u32 $r3, [$r0];
	add.u32 $r0, s[0x0010], $r1;
	ld.global.u32 $r2, [$r0];
	add.u32 $r0, s[0x0010], $r4;
	ld.global.u32 $r1, [$r0];
	add.u32 $r0, s[0x0010], $r5;
	ld.global.u32 $r0, [$r0];
	mov.u32 s[$ofs1+0x04dc], $r3;
	mov.u32 s[$ofs1+0x066c], $r2;
	mov.u32 s[$ofs1+0x07fc], $r1;
	mov.u32 s[$ofs1+0x098c], $r0;
	l0x00002c58: mov.u32 $r0, s[0x0020];
	bra l0x00002c88;
	l0x00002c68: shl.b32 $ofs1, $r124, 0x00000002;
	mov.u32 $r25, $ofs1;
	mov.u32 $r24, $r124;
	mov.u32 $r0, $r124;
	l0x00002c88: nop;
	bar.sync 0x00000000;
	shl.b32 $ofs2, $r19, 0x00000002;
	add.u32 $ofs1, $ofs2, 0x000017cc;
	mov.half.u32 $r1, s[$ofs2+0x0030];
	mov.half.u32 $r2, s[$ofs1+0x0000];
	add.f32 $r1, s[$ofs2+0x002c], $r1;
	mad.f32 $r2, $r1, 0xbfcb0673, $r2;
	mov.u32 s[$ofs2+0x17cc], $r2;
	add.u32 $ofs1, $ofs2, 0x0000032c;
	mov.half.u32 $r1, s[$ofs1+0x0004];
	add.half.f32 $r2, s[$ofs1+0x0000], $r1;
	add.u32 $ofs1, $ofs2, 0x00001acc;
	mov.u32 $r1, s[$ofs1+0x0000];
	mad.f32 $r1, $r2, 0xbfcb0673, $r1;
	mov.u32 s[$ofs2+0x1acc], $r1;
	add.u32 $ofs1, $ofs2, 0x0000062c;
	mov.half.u32 $r1, s[$ofs1+0x0004];
	add.half.f32 $r2, s[$ofs1+0x0000], $r1;
	add.u32 $ofs1, $ofs2, 0x00001dcc;
	mov.u32 $r1, s[$ofs1+0x0000];
	mad.f32 $r1, $r2, 0xbfcb0673, $r1;
	mov.u32 s[$ofs2+0x1dcc], $r1;
	ssy 0x00002d70;
	@$p1.eq bra l0x00002d70;
	shl.b32 $ofs2, $r19, 0x00000002;
	add.u32 $ofs1, $ofs2, 0x0000092c;
	mov.half.u32 $r1, s[$ofs1+0x0004];
	add.half.f32 $r2, s[$ofs1+0x0000], $r1;
	add.u32 $ofs1, $ofs2, 0x000020cc;
	mov.u32 $r1, s[$ofs1+0x0000];
	mad.f32 $r1, $r2, 0xbfcb0673, $r1;
	mov.u32 s[$ofs2+0x20cc], $r1;
	l0x00002d70: nop;
	bar.sync 0x00000000;
	shl.b32 $ofs2, $r19, 0x00000002;
	add.u32 $ofs1, $ofs2, 0x000017cc;
	mov.half.u32 $r1, s[$ofs1+0x0004];
	mov.half.u32 $r2, s[$ofs2+0x0030];
	add.f32 $r1, s[$ofs1+0x0000], $r1;
	mad.f32 $r2, $r1, 0xbd5901ae, $r2;
	mov.u32 s[$ofs2+0x0030], $r2;
	add.u32 $ofs1, $ofs2, 0x00001acc;
	mov.half.u32 $r1, s[$ofs1+0x0004];
	add.half.f32 $r2, s[$ofs1+0x0000], $r1;
	add.u32 $ofs1, $ofs2, 0x00000330;
	mov.u32 $r1, s[$ofs1+0x0000];
	mad.f32 $r1, $r2, 0xbd5901ae, $r1;
	mov.u32 s[$ofs2+0x0330], $r1;
	add.u32 $ofs1, $ofs2, 0x00001dcc;
	mov.half.u32 $r1, s[$ofs1+0x0004];
	add.half.f32 $r2, s[$ofs1+0x0000], $r1;
	add.u32 $ofs1, $ofs2, 0x00000630;
	mov.u32 $r1, s[$ofs1+0x0000];
	mad.f32 $r1, $r2, 0xbd5901ae, $r1;
	mov.u32 s[$ofs2+0x0630], $r1;
	ssy 0x00002e58;
	@$p1.eq bra l0x00002e58;
	shl.b32 $ofs2, $r19, 0x00000002;
	add.u32 $ofs1, $ofs2, 0x000020cc;
	mov.half.u32 $r1, s[$ofs1+0x0004];
	add.half.f32 $r2, s[$ofs1+0x0000], $r1;
	add.u32 $ofs1, $ofs2, 0x00000930;
	mov.u32 $r1, s[$ofs1+0x0000];
	mad.f32 $r1, $r2, 0xbd5901ae, $r1;
	mov.u32 s[$ofs2+0x0930], $r1;
	l0x00002e58: nop;
	bar.sync 0x00000000;
	shl.b32 $ofs2, $r19, 0x00000002;
	add.u32 $ofs1, $ofs2, 0x000017cc;
	mov.half.u32 $r1, s[$ofs2+0x0030];
	mov.half.u32 $r2, s[$ofs1+0x0000];
	add.f32 $r1, s[$ofs2+0x002c], $r1;
	mad.f32 $r2, $r1, 0x3f620676, $r2;
	mov.u32 s[$ofs2+0x17cc], $r2;
	add.u32 $ofs1, $ofs2, 0x0000032c;
	mov.half.u32 $r1, s[$ofs1+0x0004];
	add.half.f32 $r2, s[$ofs1+0x0000], $r1;
	add.u32 $ofs1, $ofs2, 0x00001acc;
	mov.u32 $r1, s[$ofs1+0x0000];
	mad.f32 $r1, $r2, 0x3f620676, $r1;
	mov.u32 s[$ofs2+0x1acc], $r1;
	add.u32 $ofs1, $ofs2, 0x0000062c;
	mov.half.u32 $r1, s[$ofs1+0x0004];
	add.half.f32 $r2, s[$ofs1+0x0000], $r1;
	add.u32 $ofs1, $ofs2, 0x00001dcc;
	mov.u32 $r1, s[$ofs1+0x0000];
	mad.f32 $r1, $r2, 0x3f620676, $r1;
	mov.u32 s[$ofs2+0x1dcc], $r1;
	ssy 0x00002f40;
	@$p1.eq bra l0x00002f40;
	shl.b32 $ofs2, $r19, 0x00000002;
	add.u32 $ofs1, $ofs2, 0x0000092c;
	mov.half.u32 $r1, s[$ofs1+0x0004];
	add.half.f32 $r2, s[$ofs1+0x0000], $r1;
	add.u32 $ofs1, $ofs2, 0x000020cc;
	mov.u32 $r1, s[$ofs1+0x0000];
	mad.f32 $r1, $r2, 0x3f620676, $r1;
	mov.u32 s[$ofs2+0x20cc], $r1;
	l0x00002f40: nop;
	bar.sync 0x00000000;
	shl.b32 $ofs2, $r19, 0x00000002;
	add.u32 $ofs1, $ofs2, 0x000017cc;
	mov.half.u32 $r1, s[$ofs1+0x0004];
	mov.half.u32 $r2, s[$ofs2+0x0030];
	add.f32 $r1, s[$ofs1+0x0000], $r1;
	mad.f32 $r2, $r1, 0x3ee31355, $r2;
	mov.u32 s[$ofs2+0x0030], $r2;
	add.u32 $ofs1, $ofs2, 0x00001acc;
	mov.half.u32 $r1, s[$ofs1+0x0004];
	add.half.f32 $r2, s[$ofs1+0x0000], $r1;
	add.u32 $ofs1, $ofs2, 0x00000330;
	mov.u32 $r1, s[$ofs1+0x0000];
	mad.f32 $r1, $r2, 0x3ee31355, $r1;
	mov.u32 s[$ofs2+0x0330], $r1;
	add.u32 $ofs1, $ofs2, 0x00001dcc;
	mov.half.u32 $r1, s[$ofs1+0x0004];
	add.half.f32 $r2, s[$ofs1+0x0000], $r1;
	add.u32 $ofs1, $ofs2, 0x00000630;
	mov.u32 $r1, s[$ofs1+0x0000];
	mad.f32 $r1, $r2, 0x3ee31355, $r1;
	mov.u32 s[$ofs2+0x0630], $r1;
	ssy 0x00003028;
	@$p1.eq bra l0x00003028;
	shl.b32 $ofs2, $r19, 0x00000002;
	add.u32 $ofs1, $ofs2, 0x000020cc;
	mov.half.u32 $r1, s[$ofs1+0x0004];
	add.half.f32 $r2, s[$ofs1+0x0000], $r1;
	add.u32 $ofs1, $ofs2, 0x00000930;
	mov.u32 $r1, s[$ofs1+0x0000];
	mad.f32 $r1, $r2, 0x3ee31355, $r1;
	mov.u32 s[$ofs2+0x0930], $r1;
	l0x00003028: nop;
	bar.sync 0x00000000;
	shl.b32 $ofs2, $r19, 0x00000002;
	mul.f32 $r1, s[$ofs2+0x002c], 0x3f5019c3;
	mov.u32 s[$ofs2+0x002c], $r1;
	add.u32 $ofs1, $ofs2, 0x000017cc;
	mul.f32 $r1, s[$ofs1+0x0000], 0x3f9d7658;
	mov.u32 s[$ofs2+0x17cc], $r1;
	add.u32 $ofs1, $ofs2, 0x0000032c;
	mul.f32 $r1, s[$ofs1+0x0000], 0x3f5019c3;
	mov.u32 s[$ofs2+0x032c], $r1;
	add.u32 $ofs1, $ofs2, 0x00001acc;
	mul.f32 $r1, s[$ofs1+0x0000], 0x3f9d7658;
	mov.u32 s[$ofs2+0x1acc], $r1;
	add.u32 $ofs1, $ofs2, 0x0000062c;
	mul.f32 $r1, s[$ofs1+0x0000], 0x3f5019c3;
	mov.u32 s[$ofs2+0x062c], $r1;
	add.u32 $ofs1, $ofs2, 0x00001dcc;
	mul.f32 $r1, s[$ofs1+0x0000], 0x3f9d7658;
	mov.u32 s[$ofs2+0x1dcc], $r1;
	ssy 0x00003118;
	mov.pred $p2, $r9;
	@$p2.eq bra l0x00003118;
	shl.b32 $ofs2, $r19, 0x00000002;
	add.u32 $ofs1, $ofs2, 0x0000092c;
	mul.f32 $r1, s[$ofs1+0x0000], 0x3f5019c3;
	mov.u32 s[$ofs2+0x092c], $r1;
	add.u32 $ofs1, $ofs2, 0x000020cc;
	mul.f32 $r1, s[$ofs1+0x0000], 0x3f9d7658;
	mov.u32 s[$ofs2+0x20cc], $r1;
	l0x00003118: nop;
	bar.sync 0x00000000;
	ssy 0x000033b0;
	mov.pred $p3, $r10;
	@$p3.eq bra l0x00003390;
	shr.s32 $r2, s[0x0024], 0x0000001f;
	shr.s32 $r1, $r6, 0x0000001f;
	and.b32 $r3, $r2, constant1_ZN8dwt_cuda12fdwt97KernelILi192ELi8EEEvPKfPfiii[0x0000];
	shr.s32 $r2, s[0x0020], 0x0000001f;
	and.b32 $r1, $r1, constant1_ZN8dwt_cuda12fdwt97KernelILi192ELi8EEEvPKfPfiii[0x0000];
	add.u32 $r5, s[0x0024], $r3;
	and.b32 $p2|$o127, $r6, constant1_ZN8dwt_cuda12fdwt97KernelILi192ELi8EEEvPKfPfiii[0x0000];
	and.b32 $r2, $r2, constant1_ZN8dwt_cuda12fdwt97KernelILi192ELi8EEEvPKfPfiii[0x0000];
	add.u32 $r1, $r1, $r6;
	and.b32 $r6, $r5, constant1_ZN8dwt_cuda12fdwt97KernelILi192ELi8EEEvPKfPfiii[0x0028];
	ssy 0x000032d0;
	add.u32 $r4, s[0x0020], $r2;
	shr.s32 $r3, $r1, 0x00000001;
	add.u32 $r1, s[0x0024], -$r6;
	shr.s32 $r2, $r5, 0x00000001;
	shr.s32 $r4, $r4, 0x00000001;
	set.ne.s32.s32 $p1/$o127, $r1, $r124;
	@$p2.eq bra l0x00003288;
	shr.s32 $r1, s[0x0020], 0x0000001f;
	and.b32 $r1, $r1, constant1_ZN8dwt_cuda12fdwt97KernelILi192ELi8EEEvPKfPfiii[0x0000];
	add.u32 $r1, s[0x0020], $r1;
	and.b32 $r5, $r1, constant1_ZN8dwt_cuda12fdwt97KernelILi192ELi8EEEvPKfPfiii[0x0028];
	mov.u32 $r1, $r4;
	add.u32 $p2|$o127, s[0x0020], -$r5;
	@$p2.neu add.u32 $r4, $r4, constant1_ZN8dwt_cuda12fdwt97KernelILi192ELi8EEEvPKfPfiii[0x0000];
	@$p1.neu add.u32 $r5, $r2, constant1_ZN8dwt_cuda12fdwt97KernelILi192ELi8EEEvPKfPfiii[0x0000];
	@$p1.eq mov.u32 $r5, $r2;
	mov.half.u32 $r6, s[0x0020];
	mov.half.u32 $r9, s[0x0024];
	mul.wide.u16 $r10, $r6.lo, $r9.hi;
	mad.wide.u16 $r10, $r6.hi, $r9.lo, $r10;
	shl.u32 $r12, $r10, 0x00000010;
	mul.wide.u16 $r10, $r4.lo, $r5.hi;
	mad.wide.u16 $r9, $r6.lo, $r9.lo, $r12;
	mad.wide.u16 $r6, $r4.hi, $r5.lo, $r10;
	shr.s32 $r10, $r9, 0x0000001f;
	shl.u32 $r6, $r6, 0x00000010;
	and.b32 $r10, $r10, constant1_ZN8dwt_cuda12fdwt97KernelILi192ELi8EEEvPKfPfiii[0x0000];
	mad.wide.u16 $r4, $r4.lo, $r5.lo, $r6;
	add.half.u32 $r5, $r10, $r9;
	add.half.u32 $r3, $r4, $r3;
	shr.s32 $r18, $r5, 0x00000001;
	bra l0x000032d0;
	l0x00003288: and.b32 $r1, s[0x0020], constant1_ZN8dwt_cuda12fdwt97KernelILi192ELi8EEEvPKfPfiii[0x0000];
	add.u32 $r1, $r4, $r1;
	@$p1.neu add.u32 $r4, $r2, constant1_ZN8dwt_cuda12fdwt97KernelILi192ELi8EEEvPKfPfiii[0x0000];
	@$p1.eq mov.u32 $r4, $r2;
	mov.u32 $r5, s[0x0020];
	mul.wide.u16 $r6, $r4.lo, $r5.hi;
	mad.wide.u16 $r6, $r4.hi, $r5.lo, $r6;
	shl.u32 $r6, $r6, 0x00000010;
	mad.wide.u16 $r18, $r4.lo, $r5.lo, $r6;
	l0x000032d0: shr.s32 $r4, $r7, 0x0000001f;
	and.b32 $r4, $r4, constant1_ZN8dwt_cuda12fdwt97KernelILi192ELi8EEEvPKfPfiii[0x0000];
	add.u32 $r6, $r4, $r7;
	and.b32 $r5, s[0x0024], constant1_ZN8dwt_cuda12fdwt97KernelILi192ELi8EEEvPKfPfiii[0x0000];
	and.b32 $r4, $r7, constant1_ZN8dwt_cuda12fdwt97KernelILi192ELi8EEEvPKfPfiii[0x0000];
	shr.s32 $r9, $r6, 0x00000001;
	mul.half.lo.u16 $r6, $r2.lo, $r1.hi;
	mul.half.lo.u16 $r7, $r18.lo, $r5.hi;
	mul.half.lo.u16 $r10, $r1.lo, $r9.hi;
	mul.half.lo.u16 $r12, $r18.lo, $r4.hi;
	mad.wide.u16 $r6, $r2.hi, $r1.lo, $r6;
	mad.wide.u16 $r7, $r18.hi, $r5.lo, $r7;
	mad.wide.u16 $r10, $r1.hi, $r9.lo, $r10;
	mad.wide.u16 $r12, $r18.hi, $r4.lo, $r12;
	shl.u32 $r6, $r6, 0x00000010;
	shl.u32 $r7, $r7, 0x00000010;
	shl.u32 $r10, $r10, 0x00000010;
	shl.u32 $r12, $r12, 0x00000010;
	mad.wide.u16 $r2, $r2.lo, $r1.lo, $r6;
	mad.wide.u16 $r5, $r18.lo, $r5.lo, $r7;
	mad.wide.u16 $r6, $r1.lo, $r9.lo, $r10;
	mad.wide.u16 $r4, $r18.lo, $r4.lo, $r12;
	add.half.u32 $r2, $r2, $r5;
	add.half.u32 $r4, $r6, $r4;
	add.half.u32 $r26, $r3, $r2;
	add.half.u32 $r27, $r3, $r4;
	add.u32 $r28, $r1, -$r18;
	bra l0x000033b0;
	l0x00003390: mov.u32 $r27, $r124;
	mov.u32 $r28, $r124;
	mov.u32 $r26, $r124;
	mov.u32 $r18, $r124;
	l0x000033b0: set.gt.s32.s32 $p1/$o127, s[0x0028], $r124;
	@$p1.eq retp;
	add.u32 $r1, $r8, 0x00000004;
	mov.u32 $r4, 0x000005e8;
	and.b32 $r3, $r1, constant1_ZN8dwt_cuda12fdwt97KernelILi192ELi8EEEvPKfPfiii[0x0000];
	mul.wide.u16 $r5, $r3.lo, $r4.hi;
	shr.s32 $r2, $r1, 0x0000001f;
	mad.wide.u16 $r5, $r3.hi, $r4.lo, $r5;
	and.b32 $r2, $r2, constant1_ZN8dwt_cuda12fdwt97KernelILi192ELi8EEEvPKfPfiii[0x0000];
	shl.u32 $r5, $r5, 0x00000010;
	add.u32 $r1, $r1, $r2;
	mad.wide.u16 $r2, $r3.lo, $r4.lo, $r5;
	shr.s32 $r1, $r1, 0x00000001;
	add.u32 $r1, $r2, $r1;
	shl.b32 $ofs2, $r1, 0x00000002;
	set.lt.u32.u32 $p1/$o127, $r19, constant1_ZN8dwt_cuda12fdwt97KernelILi192ELi8EEEvPKfPfiii[0x002c];
	shl.u32 $r1, $r11, 0x00000002;
	set.lt.u32.u32 $p2/$o127, $r19, constant1_ZN8dwt_cuda12fdwt97KernelILi192ELi8EEEvPKfPfiii[0x0030];
	@$p2 mov.u32 $r33, $p2;
	shl.u32 $r30, s[0x0020], 0x00000002;
	mov.u32 $r31, $r124;
	add.u32 $r29, s[0x0010], $r1;
	l0x00003460: add.u32 $r1, $r29, $r30;
	ld.global.u32 $r4, [$r1];
	add.u32 $r1, $r1, $r30;
	ld.global.u32 $r3, [$r1];
	add.u32 $r1, $r1, $r30;
	ld.global.u32 $r2, [$r1];
	add.u32 $r5, $r1, $r30;
	ld.global.u32 $r1, [$r5];
	mov.u32 s[$ofs3+0x0b1c], $r4;
	add.u32 $r5, $r5, $r30;
	ld.global.u32 $r4, [$r5];
	mov.u32 s[$ofs3+0x0cac], $r3;
	add.u32 $r5, $r5, $r30;
	ld.global.u32 $r3, [$r5];
	mov.u32 s[$ofs3+0x0e3c], $r2;
	add.u32 $r5, $r5, $r30;
	ld.global.u32 $r2, [$r5];
	mov.u32 s[$ofs3+0x0fcc], $r1;
	add.u32 $r29, $r5, $r30;
	ld.global.u32 $r1, [$r29];
	mov.u32 s[$ofs3+0x115c], $r4;
	mov.u32 s[$ofs3+0x12ec], $r3;
	mov.u32 s[$ofs3+0x147c], $r2;
	mov.u32 s[$ofs3+0x160c], $r1;
	ssy 0x00003668;
	@$p0.eq bra l0x00003668;
	add.half.u32 $r1, $r24, $r0;
	add.half.u32 $r2, $r1, $r0;
	add.half.u32 $r3, $r0, $r2;
	add.half.u32 $r5, $r0, $r3;
	shl.u32 $r4, $r1, 0x00000002;
	shl.u32 $r6, $r2, 0x00000002;
	shl.u32 $r2, $r3, 0x00000002;
	shl.u32 $r1, $r5, 0x00000002;
	add.u32 $r3, s[0x0010], $r4;
	ld.global.u32 $r4, [$r3];
	add.u32 $r3, s[0x0010], $r6;
	ld.global.u32 $r3, [$r3];
	add.u32 $r2, s[0x0010], $r2;
	ld.global.u32 $r2, [$r2];
	add.u32 $r1, s[0x0010], $r1;
	ld.global.u32 $r1, [$r1];
	shl.b32 $ofs1, $r25, 0x0;
	mov.u32 s[$ofs1+0x0b1c], $r4;
	add.u32 $r4, $r0, $r5;
	mov.u32 s[$ofs1+0x0cac], $r3;
	add.u32 $r3, $r0, $r4;
	mov.u32 s[$ofs1+0x0e3c], $r2;
	add.u32 $r2, $r0, $r3;
	mov.u32 s[$ofs1+0x0fcc], $r1;
	add.u32 $r24, $r0, $r2;
	shl.u32 $r4, $r4, 0x00000002;
	shl.u32 $r3, $r3, 0x00000002;
	shl.u32 $r2, $r2, 0x00000002;
	shl.u32 $r1, $r24, 0x00000002;
	add.u32 $r4, s[0x0010], $r4;
	ld.global.u32 $r4, [$r4];
	add.u32 $r3, s[0x0010], $r3;
	ld.global.u32 $r3, [$r3];
	add.u32 $r2, s[0x0010], $r2;
	ld.global.u32 $r2, [$r2];
	add.u32 $r1, s[0x0010], $r1;
	ld.global.u32 $r1, [$r1];
	mov.u32 s[$ofs1+0x115c], $r4;
	mov.u32 s[$ofs1+0x12ec], $r3;
	mov.u32 s[$ofs1+0x147c], $r2;
	mov.u32 s[$ofs1+0x160c], $r1;
	l0x00003668: nop;
	bar.sync 0x00000000;
	shl.b32 $ofs4, $r19, 0x00000002;
	add.u32 $ofs1, $ofs4, 0x000022bc;
	mov.u32 $r2, s[$ofs1+0x0000];
	add.u32 $ofs1, $ofs4, 0x00000b1c;
	mov.half.u32 $r1, s[$ofs1+0x0004];
	add.half.f32 $r1, s[$ofs1+0x0000], $r1;
	mad.f32 $r2, $r1, 0xbfcb0673, $r2;
	mov.u32 s[$ofs4+0x22bc], $r2;
	add.u32 $ofs1, $ofs4, 0x000025bc;
	mov.u32 $r2, s[$ofs1+0x0000];
	add.u32 $ofs1, $ofs4, 0x00000e1c;
	mov.half.u32 $r1, s[$ofs1+0x0004];
	add.half.f32 $r1, s[$ofs1+0x0000], $r1;
	mad.f32 $r2, $r1, 0xbfcb0673, $r2;
	mov.u32 s[$ofs4+0x25bc], $r2;
	add.u32 $ofs1, $ofs4, 0x000028bc;
	mov.u32 $r2, s[$ofs1+0x0000];
	add.u32 $ofs1, $ofs4, 0x0000111c;
	mov.half.u32 $r1, s[$ofs1+0x0004];
	add.half.f32 $r1, s[$ofs1+0x0000], $r1;
	mad.f32 $r2, $r1, 0xbfcb0673, $r2;
	mov.u32 s[$ofs4+0x28bc], $r2;
	add.u32 $ofs1, $ofs4, 0x00002bbc;
	mov.u32 $r2, s[$ofs1+0x0000];
	add.u32 $ofs1, $ofs4, 0x0000141c;
	mov.half.u32 $r1, s[$ofs1+0x0004];
	add.half.f32 $r1, s[$ofs1+0x0000], $r1;
	mad.f32 $r2, $r1, 0xbfcb0673, $r2;
	mov.u32 s[$ofs4+0x2bbc], $r2;
	ssy 0x00003788;
	@$p1.eq bra l0x00003788;
	shl.b32 $ofs4, $r19, 0x00000002;
	add.u32 $ofs1, $ofs4, 0x0000171c;
	mov.half.u32 $r1, s[$ofs1+0x0004];
	add.half.f32 $r2, s[$ofs1+0x0000], $r1;
	add.u32 $ofs1, $ofs4, 0x00002ebc;
	mov.u32 $r1, s[$ofs1+0x0000];
	mad.f32 $r1, $r2, 0xbfcb0673, $r1;
	mov.u32 s[$ofs4+0x2ebc], $r1;
	l0x00003788: nop;
	bar.sync 0x00000000;
	shl.b32 $ofs4, $r19, 0x00000002;
	add.u32 $ofs1, $ofs4, 0x00000b20;
	mov.u32 $r2, s[$ofs1+0x0000];
	add.u32 $ofs1, $ofs4, 0x000022bc;
	mov.half.u32 $r1, s[$ofs1+0x0004];
	add.half.f32 $r1, s[$ofs1+0x0000], $r1;
	mad.f32 $r2, $r1, 0xbd5901ae, $r2;
	mov.u32 s[$ofs4+0x0b20], $r2;
	add.u32 $ofs1, $ofs4, 0x00000e20;
	mov.u32 $r2, s[$ofs1+0x0000];
	add.u32 $ofs1, $ofs4, 0x000025bc;
	mov.half.u32 $r1, s[$ofs1+0x0004];
	add.half.f32 $r1, s[$ofs1+0x0000], $r1;
	mad.f32 $r2, $r1, 0xbd5901ae, $r2;
	mov.u32 s[$ofs4+0x0e20], $r2;
	add.u32 $ofs1, $ofs4, 0x00001120;
	mov.u32 $r2, s[$ofs1+0x0000];
	add.u32 $ofs1, $ofs4, 0x000028bc;
	mov.half.u32 $r1, s[$ofs1+0x0004];
	add.half.f32 $r1, s[$ofs1+0x0000], $r1;
	mad.f32 $r2, $r1, 0xbd5901ae, $r2;
	mov.u32 s[$ofs4+0x1120], $r2;
	add.u32 $ofs1, $ofs4, 0x00001420;
	mov.u32 $r2, s[$ofs1+0x0000];
	add.u32 $ofs1, $ofs4, 0x00002bbc;
	mov.half.u32 $r1, s[$ofs1+0x0004];
	add.half.f32 $r1, s[$ofs1+0x0000], $r1;
	mad.f32 $r2, $r1, 0xbd5901ae, $r2;
	mov.u32 s[$ofs4+0x1420], $r2;
	ssy 0x000038a8;
	@$p1.eq bra l0x000038a8;
	shl.b32 $ofs4, $r19, 0x00000002;
	add.u32 $ofs1, $ofs4, 0x00002ebc;
	mov.half.u32 $r1, s[$ofs1+0x0004];
	add.half.f32 $r2, s[$ofs1+0x0000], $r1;
	add.u32 $ofs1, $ofs4, 0x00001720;
	mov.u32 $r1, s[$ofs1+0x0000];
	mad.f32 $r1, $r2, 0xbd5901ae, $r1;
	mov.u32 s[$ofs4+0x1720], $r1;
	l0x000038a8: nop;
	bar.sync 0x00000000;
	shl.b32 $ofs4, $r19, 0x00000002;
	add.u32 $ofs1, $ofs4, 0x000022bc;
	mov.u32 $r2, s[$ofs1+0x0000];
	add.u32 $ofs1, $ofs4, 0x00000b1c;
	mov.half.u32 $r1, s[$ofs1+0x0004];
	add.half.f32 $r1, s[$ofs1+0x0000], $r1;
	mad.f32 $r2, $r1, 0x3f620676, $r2;
	mov.u32 s[$ofs4+0x22bc], $r2;
	add.u32 $ofs1, $ofs4, 0x000025bc;
	mov.u32 $r2, s[$ofs1+0x0000];
	add.u32 $ofs1, $ofs4, 0x00000e1c;
	mov.half.u32 $r1, s[$ofs1+0x0004];
	add.half.f32 $r1, s[$ofs1+0x0000], $r1;
	mad.f32 $r2, $r1, 0x3f620676, $r2;
	mov.u32 s[$ofs4+0x25bc], $r2;
	add.u32 $ofs1, $ofs4, 0x000028bc;
	mov.u32 $r2, s[$ofs1+0x0000];
	add.u32 $ofs1, $ofs4, 0x0000111c;
	mov.half.u32 $r1, s[$ofs1+0x0004];
	add.half.f32 $r1, s[$ofs1+0x0000], $r1;
	mad.f32 $r2, $r1, 0x3f620676, $r2;
	mov.u32 s[$ofs4+0x28bc], $r2;
	add.u32 $ofs1, $ofs4, 0x00002bbc;
	mov.u32 $r2, s[$ofs1+0x0000];
	add.u32 $ofs1, $ofs4, 0x0000141c;
	mov.half.u32 $r1, s[$ofs1+0x0004];
	add.half.f32 $r1, s[$ofs1+0x0000], $r1;
	mad.f32 $r2, $r1, 0x3f620676, $r2;
	mov.u32 s[$ofs4+0x2bbc], $r2;
	ssy 0x000039c8;
	@$p1.eq bra l0x000039c8;
	shl.b32 $ofs4, $r19, 0x00000002;
	add.u32 $ofs1, $ofs4, 0x0000171c;
	mov.half.u32 $r1, s[$ofs1+0x0004];
	add.half.f32 $r2, s[$ofs1+0x0000], $r1;
	add.u32 $ofs1, $ofs4, 0x00002ebc;
	mov.u32 $r1, s[$ofs1+0x0000];
	mad.f32 $r1, $r2, 0x3f620676, $r1;
	mov.u32 s[$ofs4+0x2ebc], $r1;
	l0x000039c8: nop;
	bar.sync 0x00000000;
	shl.b32 $ofs4, $r19, 0x00000002;
	add.u32 $ofs1, $ofs4, 0x00000b20;
	mov.u32 $r2, s[$ofs1+0x0000];
	add.u32 $ofs1, $ofs4, 0x000022bc;
	mov.half.u32 $r1, s[$ofs1+0x0004];
	add.half.f32 $r1, s[$ofs1+0x0000], $r1;
	mad.f32 $r2, $r1, 0x3ee31355, $r2;
	mov.u32 s[$ofs4+0x0b20], $r2;
	add.u32 $ofs1, $ofs4, 0x00000e20;
	mov.u32 $r2, s[$ofs1+0x0000];
	add.u32 $ofs1, $ofs4, 0x000025bc;
	mov.half.u32 $r1, s[$ofs1+0x0004];
	add.half.f32 $r1, s[$ofs1+0x0000], $r1;
	mad.f32 $r2, $r1, 0x3ee31355, $r2;
	mov.u32 s[$ofs4+0x0e20], $r2;
	add.u32 $ofs1, $ofs4, 0x00001120;
	mov.u32 $r2, s[$ofs1+0x0000];
	add.u32 $ofs1, $ofs4, 0x000028bc;
	mov.half.u32 $r1, s[$ofs1+0x0004];
	add.half.f32 $r1, s[$ofs1+0x0000], $r1;
	mad.f32 $r2, $r1, 0x3ee31355, $r2;
	mov.u32 s[$ofs4+0x1120], $r2;
	add.u32 $ofs1, $ofs4, 0x00001420;
	mov.u32 $r2, s[$ofs1+0x0000];
	add.u32 $ofs1, $ofs4, 0x00002bbc;
	mov.half.u32 $r1, s[$ofs1+0x0004];
	add.half.f32 $r1, s[$ofs1+0x0000], $r1;
	mad.f32 $r2, $r1, 0x3ee31355, $r2;
	mov.u32 s[$ofs4+0x1420], $r2;
	ssy 0x00003ae8;
	@$p1.eq bra l0x00003ae8;
	shl.b32 $ofs4, $r19, 0x00000002;
	add.u32 $ofs1, $ofs4, 0x00002ebc;
	mov.half.u32 $r1, s[$ofs1+0x0004];
	add.half.f32 $r2, s[$ofs1+0x0000], $r1;
	add.u32 $ofs1, $ofs4, 0x00001720;
	mov.u32 $r1, s[$ofs1+0x0000];
	mad.f32 $r1, $r2, 0x3ee31355, $r1;
	mov.u32 s[$ofs4+0x1720], $r1;
	l0x00003ae8: nop;
	bar.sync 0x00000000;
	shl.b32 $ofs4, $r19, 0x00000002;
	add.u32 $ofs1, $ofs4, 0x00000b1c;
	mul.f32 $r1, s[$ofs1+0x0000], 0x3f5019c3;
	mov.u32 s[$ofs4+0x0b1c], $r1;
	add.u32 $ofs1, $ofs4, 0x000022bc;
	mul.f32 $r1, s[$ofs1+0x0000], 0x3f9d7658;
	mov.u32 s[$ofs4+0x22bc], $r1;
	add.u32 $ofs1, $ofs4, 0x00000e1c;
	mul.f32 $r1, s[$ofs1+0x0000], 0x3f5019c3;
	mov.u32 s[$ofs4+0x0e1c], $r1;
	add.u32 $ofs1, $ofs4, 0x000025bc;
	mul.f32 $r1, s[$ofs1+0x0000], 0x3f9d7658;
	mov.u32 s[$ofs4+0x25bc], $r1;
	add.u32 $ofs1, $ofs4, 0x0000111c;
	mul.f32 $r1, s[$ofs1+0x0000], 0x3f5019c3;
	mov.u32 s[$ofs4+0x111c], $r1;
	add.u32 $ofs1, $ofs4, 0x000028bc;
	mul.f32 $r1, s[$ofs1+0x0000], 0x3f9d7658;
	mov.u32 s[$ofs4+0x28bc], $r1;
	add.u32 $ofs1, $ofs4, 0x0000141c;
	mul.f32 $r1, s[$ofs1+0x0000], 0x3f5019c3;
	mov.u32 s[$ofs4+0x141c], $r1;
	add.u32 $ofs1, $ofs4, 0x00002bbc;
	mul.f32 $r1, s[$ofs1+0x0000], 0x3f9d7658;
	mov.u32 s[$ofs4+0x2bbc], $r1;
	ssy 0x00003c10;
	mov.pred $p2, $r33;
	@$p2.eq bra l0x00003c10;
	shl.b32 $ofs4, $r19, 0x00000002;
	add.u32 $ofs1, $ofs4, 0x0000171c;
	mul.f32 $r1, s[$ofs1+0x0000], 0x3f5019c3;
	mov.u32 s[$ofs4+0x171c], $r1;
	add.u32 $ofs1, $ofs4, 0x00002ebc;
	mul.f32 $r1, s[$ofs1+0x0000], 0x3f9d7658;
	mov.u32 s[$ofs4+0x2ebc], $r1;
	l0x00003c10: nop;
	bar.sync 0x00000000;
	add.u32 $ofs1, $ofs2, 0x000001bc;
	mov.u32 $r21, s[$ofs1+0x0000];
	add.u32 $ofs1, $ofs2, 0x00000e3c;
	mov.half.u32 $r2, s[$ofs1+0x0000];
	mov.half.u32 $r12, s[$ofs1+0x0000];
	add.u32 $ofs1, $ofs2, 0x0000115c;
	mov.half.u32 $r4, s[$ofs1+0x0000];
	mov.half.u32 $r9, s[$ofs1+0x0000];
	add.u32 $ofs1, $ofs2, 0x0000147c;
	mov.half.u32 $r6, s[$ofs1+0x0000];
	mov.half.u32 $r10, s[$ofs1+0x0000];
	add.u32 $ofs1, $ofs2, 0x0000034c;
	mov.half.u32 $r15, s[$ofs1+0x0000];
	mov.half.u32 $r11, s[$ofs1+0x0000];
	mov.u32 $r14, s[$ofs1+0x0000];
	add.u32 $ofs4, $ofs2, 0x000012ec;
	add.u32 $ofs1, $ofs2, 0x00000fcc;
	mov.u32 $r1, s[$ofs4+0x0000];
	mov.half.u32 $r7, s[$ofs1+0x0000];
	mov.half.u32 $r3, s[$ofs1+0x0000];
	mov.half.u32 $r16, s[$ofs1+0x0000];
	add.half.f32 $r20, s[$ofs1+0x0000], $r1;
	add.u32 $ofs1, $ofs2, 0x0000160c;
	mov.u32 $r1, s[$ofs1+0x0000];
	mov.u32 $r5, s[$ofs4+0x0000];
	mov.u32 $r8, s[$ofs4+0x0000];
	add.f32 $r22, s[$ofs4+0x0000], $r1;
	add.u32 $ofs4, $ofs2, 0x00000cac;
	mov.u32 $r1, s[$ofs4+0x0000];
	mov.u32 $r13, s[$ofs4+0x0000];
	mov.u32 $r17, s[$ofs4+0x0000];
	add.f32 $r34, s[$ofs4+0x0000], $r7;
	mad.f32 $r9, $r20, 0xbfcb0673, $r9;
	mad.f32 $r10, $r22, 0xbfcb0673, $r10;
	add.half.f32 $r20, $r9, $r10;
	add.half.f32 $r7, s[$ofs2+0x002c], $r15;
	mad.f32 $r8, $r20, 0xbd5901ae, $r8;
	mad.f32 $r21, $r7, 0xbfcb0673, $r21;
	mov.half.u32 $r20, s[$ofs2+0x002c];
	mov.half.u32 $r7, s[$ofs1+0x0000];
	add.f32 $r32, s[$ofs1+0x0000], $r8;
	add.u32 $ofs1, $ofs2, 0x000004dc;
	mov.u32 s[$ofs2+0x01bc], $r21;
	mov.u32 $r22, s[$ofs1+0x0000];
	add.u32 $ofs1, $ofs2, 0x0000066c;
	mov.half.u32 $r15, s[$ofs1+0x0000];
	add.half.f32 $r11, $r11, $r15;
	mad.f32 $r22, $r11, 0xbfcb0673, $r22;
	mov.half.u32 $r11, s[$ofs1+0x0000];
	mov.half.u32 $r15, s[$ofs1+0x0000];
	add.u32 $ofs1, $ofs2, 0x000007fc;
	mov.u32 s[$ofs2+0x04dc], $r22;
	mov.u32 $r35, s[$ofs1+0x0000];
	add.u32 $ofs1, $ofs2, 0x0000098c;
	mov.half.u32 $r23, s[$ofs1+0x0000];
	add.half.f32 $r11, $r11, $r23;
	mad.f32 $r11, $r11, constant1_ZN8dwt_cuda12fdwt97KernelILi192ELi8EEEvPKfPfiii[0x0018], $r35;
	mov.half.u32 $r35, s[$ofs1+0x0000];
	mov.half.u32 $r23, s[$ofs1+0x0000];
	add.u32 $ofs1, $ofs2, 0x00000b1c;
	mov.u32 s[$ofs2+0x07fc], $r11;
	add.half.f32 $r35, $r13, $r35;
	mov.half.u32 $r13, s[$ofs1+0x0000];
	mad.f32 $r13, $r35, 0xbfcb0673, $r13;
	mad.f32 $r12, $r34, 0xbfcb0673, $r12;
	mov.u32 s[$ofs2+0x0b1c], $r13;
	mov.u32 s[$ofs2+0x0e3c], $r12;
	add.f32 $r34, $r21, $r22;
	mov.u32 s[$ofs2+0x115c], $r9;
	add.f32 $r35, $r22, $r11;
	mad.f32 $r14, $r34, 0xbd5901ae, $r14;
	mov.u32 s[$ofs2+0x147c], $r10;
	mad.f32 $r15, $r35, 0xbd5901ae, $r15;
	add.f32 $r34, $r11, $r13;
	mov.u32 s[$ofs2+0x034c], $r14;
	add.f32 $r35, $r13, $r12;
	mad.f32 $r23, $r34, 0xbd5901ae, $r23;
	mov.u32 s[$ofs2+0x066c], $r15;
	mad.f32 $r17, $r35, 0xbd5901ae, $r17;
	add.f32 $r34, $r12, $r9;
	mov.u32 s[$ofs2+0x098c], $r23;
	mad.f32 $r16, $r34, 0xbd5901ae, $r16;
	mov.u32 s[$ofs2+0x0cac], $r17;
	add.f32 $r20, $r20, $r14;
	mov.u32 s[$ofs2+0x0fcc], $r16;
	mad.f32 $r21, $r20, 0x3f620676, $r21;
	add.f32 $r20, $r14, $r15;
	mov.u32 s[$ofs2+0x12ec], $r8;
	add.f32 $r34, $r15, $r23;
	mad.f32 $r22, $r20, 0x3f620676, $r22;
	mov.u32 s[$ofs2+0x01bc], $r21;
	mad.f32 $r11, $r34, 0x3f620676, $r11;
	add.f32 $r20, $r23, $r17;
	mov.u32 s[$ofs2+0x04dc], $r22;
	add.f32 $r34, $r17, $r16;
	mad.f32 $r13, $r20, 0x3f620676, $r13;
	mov.u32 s[$ofs2+0x07fc], $r11;
	mad.f32 $r12, $r34, 0x3f620676, $r12;
	add.f32 $r20, $r16, $r8;
	mov.u32 s[$ofs2+0x0b1c], $r13;
	mad.f32 $r9, $r20, 0x3f620676, $r9;
	mov.u32 s[$ofs2+0x0e3c], $r12;
	mad.f32 $r10, $r32, 0x3f620676, $r10;
	add.f32 $r20, $r21, $r22;
	mov.u32 s[$ofs2+0x115c], $r9;
	mad.f32 $r14, $r20, 0x3ee31355, $r14;
	mov.u32 s[$ofs2+0x147c], $r10;
	add.f32 $r20, $r22, $r11;
	mov.u32 s[$ofs2+0x034c], $r14;
	add.f32 $r11, $r11, $r13;
	mad.f32 $r15, $r20, 0x3ee31355, $r15;
	mad.f32 $r23, $r11, 0x3ee31355, $r23;
	mov.u32 s[$ofs2+0x066c], $r15;
	add.f32 $r11, $r13, $r12;
	mov.u32 s[$ofs2+0x098c], $r23;
	mad.f32 $r17, $r11, 0x3ee31355, $r17;
	add.f32 $r11, $r12, $r9;
	mov.u32 s[$ofs2+0x0cac], $r17;
	add.f32 $r9, $r9, $r10;
	mad.f32 $r16, $r11, 0x3ee31355, $r16;
	mad.f32 $r8, $r9, 0x3ee31355, $r8;
	mov.u32 s[$ofs2+0x0fcc], $r16;
	mov.u32 s[$ofs2+0x12ec], $r8;
	mul.f32 $r8, $r15, 0x3f5019c3;
	set.ne.s32.s32 $p3/$r9, $r27, $r26;
	cvt.s32.s32 $p2|$o127, $r9;
	@$p3.neu shl.u32 $r9, $r27, 0x00000002;
	@$p3.neu add.u32 $r9, s[0x0018], $r9;
	@$p3.neu add.u32 $r27, $r27, $r18;
	@$p3.neu st.global.u32 [$r9], $r8;
	@$p3.neu set.ne.s32.s32 $p2/$o127, $r27, $r26;
	add.u32 $ofs1, $ofs2, 0x000007fc;
	mul.f32 $r8, s[$ofs1+0x0000], 0x3f9d7658;
	@$p2.neu shl.u32 $r9, $r27, 0x00000002;
	@$p2.neu add.u32 $r9, s[0x0018], $r9;
	@$p2.neu add.u32 $r27, $r27, $r28;
	@$p2.neu st.global.u32 [$r9], $r8;
	@$p2.neu set.ne.s32.s32 $p2/$o127, $r27, $r26;
	add.u32 $ofs1, $ofs2, 0x0000098c;
	mul.f32 $r8, s[$ofs1+0x0000], 0x3f5019c3;
	@$p2.neu shl.u32 $r9, $r27, 0x00000002;
	@$p2.neu add.u32 $r9, s[0x0018], $r9;
	@$p2.neu add.u32 $r27, $r27, $r18;
	@$p2.neu st.global.u32 [$r9], $r8;
	@$p2.neu set.ne.s32.s32 $p2/$o127, $r27, $r26;
	add.u32 $ofs1, $ofs2, 0x00000b1c;
	mul.f32 $r8, s[$ofs1+0x0000], 0x3f9d7658;
	@$p2.neu shl.u32 $r9, $r27, 0x00000002;
	@$p2.neu add.u32 $r9, s[0x0018], $r9;
	@$p2.neu add.u32 $r27, $r27, $r28;
	@$p2.neu st.global.u32 [$r9], $r8;
	@$p2.neu set.ne.s32.s32 $p2/$o127, $r27, $r26;
	add.u32 $ofs1, $ofs2, 0x00000cac;
	mul.f32 $r8, s[$ofs1+0x0000], 0x3f5019c3;
	@$p2.neu shl.u32 $r9, $r27, 0x00000002;
	@$p2.neu add.u32 $r9, s[0x0018], $r9;
	@$p2.neu add.u32 $r27, $r27, $r18;
	@$p2.neu st.global.u32 [$r9], $r8;
	@$p2.neu set.ne.s32.s32 $p2/$o127, $r27, $r26;
	add.u32 $ofs1, $ofs2, 0x00000e3c;
	mul.f32 $r8, s[$ofs1+0x0000], 0x3f9d7658;
	@$p2.neu shl.u32 $r9, $r27, 0x00000002;
	@$p2.neu add.u32 $r9, s[0x0018], $r9;
	@$p2.neu add.u32 $r27, $r27, $r28;
	@$p2.neu st.global.u32 [$r9], $r8;
	@$p2.neu set.ne.s32.s32 $p2/$o127, $r27, $r26;
	add.u32 $ofs1, $ofs2, 0x00000fcc;
	mul.f32 $r8, s[$ofs1+0x0000], 0x3f5019c3;
	@$p2.neu shl.u32 $r9, $r27, 0x00000002;
	@$p2.neu add.u32 $r9, s[0x0018], $r9;
	@$p2.neu add.u32 $r27, $r27, $r18;
	@$p2.neu st.global.u32 [$r9], $r8;
	@$p2.neu set.ne.s32.s32 $p2/$o127, $r27, $r26;
	add.u32 $ofs1, $ofs2, 0x0000115c;
	mul.f32 $r8, s[$ofs1+0x0000], 0x3f9d7658;
	@$p2.neu shl.u32 $r9, $r27, 0x00000002;
	@$p2.neu add.u32 $r9, s[0x0018], $r9;
	@$p2.neu st.global.u32 [$r9], $r8;
	@$p2.neu add.u32 $r27, $r27, $r28;
	mov.u32 s[$ofs2+0x002c], $r1;
	mov.u32 s[$ofs2+0x01bc], $r2;
	mov.u32 s[$ofs2+0x034c], $r3;
	mov.u32 s[$ofs2+0x04dc], $r4;
	mov.u32 s[$ofs2+0x066c], $r5;
	mov.u32 s[$ofs2+0x07fc], $r6;
	mov.u32 s[$ofs2+0x098c], $r7;
	bar.sync 0x00000000;
	add.u32 $r31, $r31, 0x00000001;
	set.ne.s32.s32 $p2/$o127, s[0x0028], $r31;
	@$p2.ne bra l0x00003460;
	retp;
	l0x000041b0: cvt.u32.u16 $r4, %ctaid.y;
	set.eq.u32.u32 $p3/$o127, $r4, $r124;
	@$p3.eq bra l0x00004398;
	ssy 0x00004218;
	@$p2.eq bra l0x000041f8;
	shl.u32 $r0, s[0x0020], 0x00000001;
	add.u32 $r0, $r0, -$r2;
	add.u32 $r1, $r0, 0xfffffffe;
	bra l0x00004218;
	l0x000041f8: add.u32 $r1, -$r2, 0x00000000;
	set.lt.s32.s32 $p3/$o127, $r2, $r124;
	@$p3 mov.u32 $r0, $p3;
	@$p3.equ mov.u32 $r1, $r2;
	l0x00004218: mov.u32 $r0, s[0x0020];
	mul.wide.u16 $r4, $r0.lo, $r7.hi;
	mad.wide.u16 $r4, $r0.hi, $r7.lo, $r4;
	shl.u32 $r4, $r4, 0x00000010;
	mad.wide.u16 $r0, $r0.lo, $r7.lo, $r4;
	add.half.u32 $r0, $r0, $r1;
	add.half.u32 $r4, s[0x0020], $r0;
	shl.u32 $r0, $r0, 0x00000002;
	shl.u32 $r5, $r4, 0x00000002;
	add.u32 $r0, s[0x0010], $r0;
	ld.global.u32 $r1, [$r0];
	add.u32 $r0, s[0x0010], $r5;
	ld.global.u32 $r0, [$r0];
	add.half.u32 $r4, s[0x0020], $r4;
	add.half.u32 $r5, s[0x0020], $r4;
	mov.u32 s[$ofs3+0x066c], $r1;
	add.u32 $r11, s[0x0020], $r5;
	shl.u32 $r1, $r4, 0x00000002;
	mov.u32 s[$ofs3+0x07fc], $r0;
	shl.u32 $r5, $r5, 0x00000002;
	shl.u32 $r11, $r11, 0x00000002;
	add.u32 $r1, s[0x0010], $r1;
	ld.global.u32 $r4, [$r1];
	mov.u32 s[$ofs3+0x04dc], $r0;
	add.u32 $r0, s[0x0010], $r5;
	ld.global.u32 $r1, [$r0];
	add.u32 $r0, s[0x0010], $r11;
	ld.global.u32 $r0, [$r0];
	mov.u32 s[$ofs3+0x098c], $r4;
	mov.u32 s[$ofs3+0x034c], $r4;
	mov.u32 s[$ofs3+0x01bc], $r1;
	mov.u32 s[$ofs3+0x002c], $r0;
	ssy 0x00004350;
	@$p2.eq bra l0x00004338;
	shl.u32 $r0, s[0x0020], 0x00000001;
	add.u32 $r0, $r0, -$r2;
	add.u32 $r1, $r0, 0xfffffffe;
	bra l0x00004350;
	l0x00004338: add.u32 $r1, -$r2, 0x00000000;
	set.lt.s32.s32 $p2/$o127, $r2, $r124;
	@$p2.equ mov.u32 $r1, $r2;
	l0x00004350: nop;
	add.u32 $r2, $r7, 0x00000003;
	mov.u32 $r0, s[0x0020];
	mul.wide.u16 $r4, $r0.lo, $r2.hi;
	mad.wide.u16 $r4, $r0.hi, $r2.lo, $r4;
	shl.u32 $r4, $r4, 0x00000010;
	mad.wide.u16 $r0, $r0.lo, $r2.lo, $r4;
	add.half.u32 $r0, $r0, $r1;
	add.half.u32 $r5, -s[0x0020], $r0;
	bra l0x00004520;
	l0x00004398: ssy 0x000043e0;
	@$p2.eq bra l0x000043c8;
	shl.u32 $r0, s[0x0020], 0x00000001;
	add.u32 $r0, $r0, -$r2;
	add.u32 $r1, $r0, 0xfffffffe;
	bra l0x000043e0;
	l0x000043c8: add.u32 $r1, -$r2, 0x00000000;
	set.lt.s32.s32 $p2/$o127, $r2, $r124;
	@$p2.equ mov.u32 $r1, $r2;
	l0x000043e0: mov.u32 $r0, s[0x0020];
	add.u32 $r2, $r7, 0xfffffffc;
	mul.wide.u16 $r4, $r2.lo, $r0.hi;
	mad.wide.u16 $r4, $r2.hi, $r0.lo, $r4;
	shl.u32 $r4, $r4, 0x00000010;
	mad.wide.u16 $r0, $r2.lo, $r0.lo, $r4;
	add.half.u32 $r0, $r0, $r1;
	add.half.u32 $r1, s[0x0020], $r0;
	add.u32 $r4, s[0x0020], $r1;
	shl.u32 $r0, $r0, 0x00000002;
	shl.u32 $r1, $r1, 0x00000002;
	shl.u32 $r5, $r4, 0x00000002;
	add.u32 $r0, s[0x0010], $r0;
	ld.global.u32 $r2, [$r0];
	add.u32 $r0, s[0x0010], $r1;
	ld.global.u32 $r1, [$r0];
	add.u32 $r0, s[0x0010], $r5;
	ld.global.u32 $r0, [$r0];
	add.u32 $r4, s[0x0020], $r4;
	mov.u32 s[$ofs3+0x002c], $r2;
	add.u32 $r2, s[0x0020], $r4;
	mov.u32 s[$ofs3+0x01bc], $r1;
	add.u32 $r11, s[0x0020], $r2;
	mov.u32 s[$ofs3+0x034c], $r0;
	add.u32 $r5, s[0x0020], $r11;
	shl.u32 $r0, $r4, 0x00000002;
	shl.u32 $r1, $r2, 0x00000002;
	shl.u32 $r11, $r11, 0x00000002;
	shl.u32 $r12, $r5, 0x00000002;
	add.u32 $r0, s[0x0010], $r0;
	ld.global.u32 $r4, [$r0];
	add.u32 $r0, s[0x0010], $r1;
	ld.global.u32 $r2, [$r0];
	add.u32 $r0, s[0x0010], $r11;
	ld.global.u32 $r1, [$r0];
	add.u32 $r0, s[0x0010], $r12;
	ld.global.u32 $r0, [$r0];
	mov.u32 s[$ofs3+0x04dc], $r4;
	mov.u32 s[$ofs3+0x066c], $r2;
	mov.u32 s[$ofs3+0x07fc], $r1;
	mov.u32 s[$ofs3+0x098c], $r0;
	l0x00004520: ssy 0x00004970;
	@$p0.eq bra l0x00004950;
	add.u32 $r0, $r19, 0xfffffff9;
	set.le.u32.u32 $p2/$o127, $r19, constant1_ZN8dwt_cuda12fdwt97KernelILi192ELi8EEEvPKfPfiii[0x0010];
	@$p2.ne add.u32 $r0, $r19, constant1_ZN8dwt_cuda12fdwt97KernelILi192ELi8EEEvPKfPfiii[0x0014];
	add.u32 $r1, $r0, 0x00000004;
	mov.u32 $r4, 0x000005e8;
	and.b32 $r2, $r1, constant1_ZN8dwt_cuda12fdwt97KernelILi192ELi8EEEvPKfPfiii[0x0000];
	mul.wide.u16 $r12, $r2.lo, $r4.hi;
	shr.s32 $r11, $r1, 0x0000001f;
	mad.wide.u16 $r12, $r2.hi, $r4.lo, $r12;
	and.b32 $r11, $r11, constant1_ZN8dwt_cuda12fdwt97KernelILi192ELi8EEEvPKfPfiii[0x0000];
	shl.u32 $r12, $r12, 0x00000010;
	add.u32 $r1, $r1, $r11;
	mad.wide.u16 $r2, $r2.lo, $r4.lo, $r12;
	shr.s32 $r1, $r1, 0x00000001;
	add.u32 $r1, $r2, $r1;
	shl.b32 $ofs1, $r1, 0x00000002;
	mov.u32 $r31, $ofs1;
	add.u32 $r2, $r0, $r3;
	set.le.s32.s32 $p2/$o127, s[0x0020], $r2;
	cvt.u32.u16 $r4, %ctaid.y;
	set.eq.u32.u32 $p3/$o127, $r4, $r124;
	@$p3.eq bra l0x000047b0;
	ssy 0x00004628;
	@$p2.eq bra l0x00004610;
	shl.u32 $r0, s[0x0020], 0x00000001;
	add.u32 $r0, $r0, -$r2;
	add.u32 $r1, $r0, 0xfffffffe;
	bra l0x00004628;
	l0x00004610: add.u32 $r1, -$r2, 0x00000000;
	set.lt.s32.s32 $p3/$o127, $r2, $r124;
	@$p3.equ mov.u32 $r1, $r2;
	l0x00004628: mov.u32 $r0, s[0x0020];
	mul.wide.u16 $r3, $r0.lo, $r7.hi;
	mad.wide.u16 $r3, $r0.hi, $r7.lo, $r3;
	shl.u32 $r3, $r3, 0x00000010;
	mad.wide.u16 $r0, $r0.lo, $r7.lo, $r3;
	add.half.u32 $r0, $r0, $r1;
	add.half.u32 $r3, s[0x0020], $r0;
	shl.u32 $r0, $r0, 0x00000002;
	shl.u32 $r4, $r3, 0x00000002;
	add.u32 $r0, s[0x0010], $r0;
	ld.global.u32 $r1, [$r0];
	add.u32 $r0, s[0x0010], $r4;
	ld.global.u32 $r0, [$r0];
	add.half.u32 $r3, s[0x0020], $r3;
	add.half.u32 $r4, s[0x0020], $r3;
	shl.b32 $ofs1, $r31, 0x0;
	mov.u32 s[$ofs1+0x066c], $r1;
	add.u32 $r11, s[0x0020], $r4;
	shl.u32 $r1, $r3, 0x00000002;
	mov.u32 s[$ofs1+0x07fc], $r0;
	shl.u32 $r4, $r4, 0x00000002;
	shl.u32 $r11, $r11, 0x00000002;
	add.u32 $r1, s[0x0010], $r1;
	ld.global.u32 $r3, [$r1];
	mov.u32 s[$ofs1+0x04dc], $r0;
	add.u32 $r0, s[0x0010], $r4;
	ld.global.u32 $r1, [$r0];
	add.u32 $r0, s[0x0010], $r11;
	ld.global.u32 $r0, [$r0];
	mov.u32 s[$ofs1+0x098c], $r3;
	mov.u32 s[$ofs1+0x034c], $r3;
	mov.u32 s[$ofs1+0x01bc], $r1;
	mov.u32 s[$ofs1+0x002c], $r0;
	ssy 0x00004768;
	@$p2.eq bra l0x00004750;
	shl.u32 $r0, s[0x0020], 0x00000001;
	add.u32 $r0, $r0, -$r2;
	add.u32 $r1, $r0, 0xfffffffe;
	bra l0x00004768;
	l0x00004750: add.u32 $r1, -$r2, 0x00000000;
	set.lt.s32.s32 $p2/$o127, $r2, $r124;
	@$p2.equ mov.u32 $r1, $r2;
	l0x00004768: nop;
	add.u32 $r2, $r7, 0x00000003;
	mov.u32 $r0, s[0x0020];
	mul.wide.u16 $r3, $r0.lo, $r2.hi;
	mad.wide.u16 $r3, $r0.hi, $r2.lo, $r3;
	shl.u32 $r3, $r3, 0x00000010;
	mad.wide.u16 $r0, $r0.lo, $r2.lo, $r3;
	add.half.u32 $r0, $r0, $r1;
	add.half.u32 $r25, -s[0x0020], $r0;
	bra l0x00004940;
	l0x000047b0: ssy 0x000047f8;
	@$p2.eq bra l0x000047e0;
	shl.u32 $r0, s[0x0020], 0x00000001;
	add.u32 $r0, $r0, -$r2;
	add.u32 $r1, $r0, 0xfffffffe;
	bra l0x000047f8;
	l0x000047e0: add.u32 $r1, -$r2, 0x00000000;
	set.lt.s32.s32 $p2/$o127, $r2, $r124;
	@$p2.equ mov.u32 $r1, $r2;
	l0x000047f8: mov.u32 $r0, s[0x0020];
	add.u32 $r2, $r7, 0xfffffffc;
	mul.wide.u16 $r3, $r2.lo, $r0.hi;
	mad.wide.u16 $r3, $r2.hi, $r0.lo, $r3;
	shl.u32 $r3, $r3, 0x00000010;
	mad.wide.u16 $r0, $r2.lo, $r0.lo, $r3;
	add.half.u32 $r0, $r0, $r1;
	add.half.u32 $r1, s[0x0020], $r0;
	add.u32 $r3, s[0x0020], $r1;
	shl.u32 $r0, $r0, 0x00000002;
	shl.u32 $r1, $r1, 0x00000002;
	shl.u32 $r4, $r3, 0x00000002;
	add.u32 $r0, s[0x0010], $r0;
	ld.global.u32 $r2, [$r0];
	add.u32 $r0, s[0x0010], $r1;
	ld.global.u32 $r1, [$r0];
	add.u32 $r0, s[0x0010], $r4;
	ld.global.u32 $r0, [$r0];
	add.u32 $r3, s[0x0020], $r3;
	shl.b32 $ofs1, $r31, 0x0;
	mov.u32 s[$ofs1+0x002c], $r2;
	add.u32 $r2, s[0x0020], $r3;
	mov.u32 s[$ofs1+0x01bc], $r1;
	add.u32 $r4, s[0x0020], $r2;
	mov.u32 s[$ofs1+0x034c], $r0;
	add.u32 $r25, s[0x0020], $r4;
	shl.u32 $r0, $r3, 0x00000002;
	shl.u32 $r1, $r2, 0x00000002;
	shl.u32 $r4, $r4, 0x00000002;
	shl.u32 $r11, $r25, 0x00000002;
	add.u32 $r0, s[0x0010], $r0;
	ld.global.u32 $r3, [$r0];
	add.u32 $r0, s[0x0010], $r1;
	ld.global.u32 $r2, [$r0];
	add.u32 $r0, s[0x0010], $r4;
	ld.global.u32 $r1, [$r0];
	add.u32 $r0, s[0x0010], $r11;
	ld.global.u32 $r0, [$r0];
	mov.u32 s[$ofs1+0x04dc], $r3;
	mov.u32 s[$ofs1+0x066c], $r2;
	mov.u32 s[$ofs1+0x07fc], $r1;
	mov.u32 s[$ofs1+0x098c], $r0;
	l0x00004940: mov.u32 $r0, s[0x0020];
	bra l0x00004970;
	l0x00004950: shl.b32 $ofs1, $r124, 0x00000002;
	mov.u32 $r31, $ofs1;
	mov.u32 $r25, $r124;
	mov.u32 $r0, $r124;
	l0x00004970: nop;
	bar.sync 0x00000000;
	shl.b32 $ofs2, $r19, 0x00000002;
	add.u32 $ofs1, $ofs2, 0x000017cc;
	mov.half.u32 $r1, s[$ofs2+0x0030];
	mov.half.u32 $r2, s[$ofs1+0x0000];
	add.f32 $r1, s[$ofs2+0x002c], $r1;
	mad.f32 $r2, $r1, 0xbfcb0673, $r2;
	mov.u32 s[$ofs2+0x17cc], $r2;
	add.u32 $ofs1, $ofs2, 0x0000032c;
	mov.half.u32 $r1, s[$ofs1+0x0004];
	add.half.f32 $r2, s[$ofs1+0x0000], $r1;
	add.u32 $ofs1, $ofs2, 0x00001acc;
	mov.u32 $r1, s[$ofs1+0x0000];
	mad.f32 $r1, $r2, 0xbfcb0673, $r1;
	mov.u32 s[$ofs2+0x1acc], $r1;
	add.u32 $ofs1, $ofs2, 0x0000062c;
	mov.half.u32 $r1, s[$ofs1+0x0004];
	add.half.f32 $r2, s[$ofs1+0x0000], $r1;
	add.u32 $ofs1, $ofs2, 0x00001dcc;
	mov.u32 $r1, s[$ofs1+0x0000];
	mad.f32 $r1, $r2, 0xbfcb0673, $r1;
	mov.u32 s[$ofs2+0x1dcc], $r1;
	ssy 0x00004a58;
	@$p1.eq bra l0x00004a58;
	shl.b32 $ofs2, $r19, 0x00000002;
	add.u32 $ofs1, $ofs2, 0x0000092c;
	mov.half.u32 $r1, s[$ofs1+0x0004];
	add.half.f32 $r2, s[$ofs1+0x0000], $r1;
	add.u32 $ofs1, $ofs2, 0x000020cc;
	mov.u32 $r1, s[$ofs1+0x0000];
	mad.f32 $r1, $r2, 0xbfcb0673, $r1;
	mov.u32 s[$ofs2+0x20cc], $r1;
	l0x00004a58: nop;
	bar.sync 0x00000000;
	shl.b32 $ofs2, $r19, 0x00000002;
	add.u32 $ofs1, $ofs2, 0x000017cc;
	mov.half.u32 $r1, s[$ofs1+0x0004];
	mov.half.u32 $r2, s[$ofs2+0x0030];
	add.f32 $r1, s[$ofs1+0x0000], $r1;
	mad.f32 $r2, $r1, 0xbd5901ae, $r2;
	mov.u32 s[$ofs2+0x0030], $r2;
	add.u32 $ofs1, $ofs2, 0x00001acc;
	mov.half.u32 $r1, s[$ofs1+0x0004];
	add.half.f32 $r2, s[$ofs1+0x0000], $r1;
	add.u32 $ofs1, $ofs2, 0x00000330;
	mov.u32 $r1, s[$ofs1+0x0000];
	mad.f32 $r1, $r2, 0xbd5901ae, $r1;
	mov.u32 s[$ofs2+0x0330], $r1;
	add.u32 $ofs1, $ofs2, 0x00001dcc;
	mov.half.u32 $r1, s[$ofs1+0x0004];
	add.half.f32 $r2, s[$ofs1+0x0000], $r1;
	add.u32 $ofs1, $ofs2, 0x00000630;
	mov.u32 $r1, s[$ofs1+0x0000];
	mad.f32 $r1, $r2, 0xbd5901ae, $r1;
	mov.u32 s[$ofs2+0x0630], $r1;
	ssy 0x00004b40;
	@$p1.eq bra l0x00004b40;
	shl.b32 $ofs2, $r19, 0x00000002;
	add.u32 $ofs1, $ofs2, 0x000020cc;
	mov.half.u32 $r1, s[$ofs1+0x0004];
	add.half.f32 $r2, s[$ofs1+0x0000], $r1;
	add.u32 $ofs1, $ofs2, 0x00000930;
	mov.u32 $r1, s[$ofs1+0x0000];
	mad.f32 $r1, $r2, 0xbd5901ae, $r1;
	mov.u32 s[$ofs2+0x0930], $r1;
	l0x00004b40: nop;
	bar.sync 0x00000000;
	shl.b32 $ofs2, $r19, 0x00000002;
	add.u32 $ofs1, $ofs2, 0x000017cc;
	mov.half.u32 $r1, s[$ofs2+0x0030];
	mov.half.u32 $r2, s[$ofs1+0x0000];
	add.f32 $r1, s[$ofs2+0x002c], $r1;
	mad.f32 $r2, $r1, 0x3f620676, $r2;
	mov.u32 s[$ofs2+0x17cc], $r2;
	add.u32 $ofs1, $ofs2, 0x0000032c;
	mov.half.u32 $r1, s[$ofs1+0x0004];
	add.half.f32 $r2, s[$ofs1+0x0000], $r1;
	add.u32 $ofs1, $ofs2, 0x00001acc;
	mov.u32 $r1, s[$ofs1+0x0000];
	mad.f32 $r1, $r2, 0x3f620676, $r1;
	mov.u32 s[$ofs2+0x1acc], $r1;
	add.u32 $ofs1, $ofs2, 0x0000062c;
	mov.half.u32 $r1, s[$ofs1+0x0004];
	add.half.f32 $r2, s[$ofs1+0x0000], $r1;
	add.u32 $ofs1, $ofs2, 0x00001dcc;
	mov.u32 $r1, s[$ofs1+0x0000];
	mad.f32 $r1, $r2, 0x3f620676, $r1;
	mov.u32 s[$ofs2+0x1dcc], $r1;
	ssy 0x00004c28;
	@$p1.eq bra l0x00004c28;
	shl.b32 $ofs2, $r19, 0x00000002;
	add.u32 $ofs1, $ofs2, 0x0000092c;
	mov.half.u32 $r1, s[$ofs1+0x0004];
	add.half.f32 $r2, s[$ofs1+0x0000], $r1;
	add.u32 $ofs1, $ofs2, 0x000020cc;
	mov.u32 $r1, s[$ofs1+0x0000];
	mad.f32 $r1, $r2, 0x3f620676, $r1;
	mov.u32 s[$ofs2+0x20cc], $r1;
	l0x00004c28: nop;
	bar.sync 0x00000000;
	shl.b32 $ofs2, $r19, 0x00000002;
	add.u32 $ofs1, $ofs2, 0x000017cc;
	mov.half.u32 $r1, s[$ofs1+0x0004];
	mov.half.u32 $r2, s[$ofs2+0x0030];
	add.f32 $r1, s[$ofs1+0x0000], $r1;
	mad.f32 $r2, $r1, 0x3ee31355, $r2;
	mov.u32 s[$ofs2+0x0030], $r2;
	add.u32 $ofs1, $ofs2, 0x00001acc;
	mov.half.u32 $r1, s[$ofs1+0x0004];
	add.half.f32 $r2, s[$ofs1+0x0000], $r1;
	add.u32 $ofs1, $ofs2, 0x00000330;
	mov.u32 $r1, s[$ofs1+0x0000];
	mad.f32 $r1, $r2, 0x3ee31355, $r1;
	mov.u32 s[$ofs2+0x0330], $r1;
	add.u32 $ofs1, $ofs2, 0x00001dcc;
	mov.half.u32 $r1, s[$ofs1+0x0004];
	add.half.f32 $r2, s[$ofs1+0x0000], $r1;
	add.u32 $ofs1, $ofs2, 0x00000630;
	mov.u32 $r1, s[$ofs1+0x0000];
	mad.f32 $r1, $r2, 0x3ee31355, $r1;
	mov.u32 s[$ofs2+0x0630], $r1;
	ssy 0x00004d10;
	@$p1.eq bra l0x00004d10;
	shl.b32 $ofs2, $r19, 0x00000002;
	add.u32 $ofs1, $ofs2, 0x000020cc;
	mov.half.u32 $r1, s[$ofs1+0x0004];
	add.half.f32 $r2, s[$ofs1+0x0000], $r1;
	add.u32 $ofs1, $ofs2, 0x00000930;
	mov.u32 $r1, s[$ofs1+0x0000];
	mad.f32 $r1, $r2, 0x3ee31355, $r1;
	mov.u32 s[$ofs2+0x0930], $r1;
	l0x00004d10: nop;
	bar.sync 0x00000000;
	shl.b32 $ofs2, $r19, 0x00000002;
	mul.f32 $r1, s[$ofs2+0x002c], 0x3f5019c3;
	mov.u32 s[$ofs2+0x002c], $r1;
	add.u32 $ofs1, $ofs2, 0x000017cc;
	mul.f32 $r1, s[$ofs1+0x0000], 0x3f9d7658;
	mov.u32 s[$ofs2+0x17cc], $r1;
	add.u32 $ofs1, $ofs2, 0x0000032c;
	mul.f32 $r1, s[$ofs1+0x0000], 0x3f5019c3;
	mov.u32 s[$ofs2+0x032c], $r1;
	add.u32 $ofs1, $ofs2, 0x00001acc;
	mul.f32 $r1, s[$ofs1+0x0000], 0x3f9d7658;
	mov.u32 s[$ofs2+0x1acc], $r1;
	add.u32 $ofs1, $ofs2, 0x0000062c;
	mul.f32 $r1, s[$ofs1+0x0000], 0x3f5019c3;
	mov.u32 s[$ofs2+0x062c], $r1;
	add.u32 $ofs1, $ofs2, 0x00001dcc;
	mul.f32 $r1, s[$ofs1+0x0000], 0x3f9d7658;
	mov.u32 s[$ofs2+0x1dcc], $r1;
	ssy 0x00004e00;
	mov.pred $p2, $r9;
	@$p2.eq bra l0x00004e00;
	shl.b32 $ofs2, $r19, 0x00000002;
	add.u32 $ofs1, $ofs2, 0x0000092c;
	mul.f32 $r1, s[$ofs1+0x0000], 0x3f5019c3;
	mov.u32 s[$ofs2+0x092c], $r1;
	add.u32 $ofs1, $ofs2, 0x000020cc;
	mul.f32 $r1, s[$ofs1+0x0000], 0x3f9d7658;
	mov.u32 s[$ofs2+0x20cc], $r1;
	l0x00004e00: nop;
	bar.sync 0x00000000;
	ssy 0x00005038;
	mov.pred $p3, $r10;
	@$p3.eq bra l0x00005020;
	shr.s32 $r2, s[0x0024], 0x0000001f;
	shr.s32 $r1, $r6, 0x0000001f;
	and.b32 $r3, $r2, constant1_ZN8dwt_cuda12fdwt97KernelILi192ELi8EEEvPKfPfiii[0x0000];
	shr.s32 $r2, s[0x0020], 0x0000001f;
	and.b32 $r1, $r1, constant1_ZN8dwt_cuda12fdwt97KernelILi192ELi8EEEvPKfPfiii[0x0000];
	add.u32 $r3, s[0x0024], $r3;
	and.b32 $p2|$o127, $r6, constant1_ZN8dwt_cuda12fdwt97KernelILi192ELi8EEEvPKfPfiii[0x0000];
	and.b32 $r2, $r2, constant1_ZN8dwt_cuda12fdwt97KernelILi192ELi8EEEvPKfPfiii[0x0000];
	add.u32 $r1, $r1, $r6;
	and.b32 $r4, $r3, constant1_ZN8dwt_cuda12fdwt97KernelILi192ELi8EEEvPKfPfiii[0x0028];
	ssy 0x00004fa8;
	add.u32 $r2, s[0x0020], $r2;
	shr.s32 $r1, $r1, 0x00000001;
	add.u32 $r6, s[0x0024], -$r4;
	shr.s32 $r4, $r3, 0x00000001;
	shr.s32 $r3, $r2, 0x00000001;
	set.ne.s32.s32 $p1/$o127, $r6, $r124;
	@$p2.eq bra l0x00004f68;
	shr.s32 $r2, s[0x0020], 0x0000001f;
	and.b32 $r2, $r2, constant1_ZN8dwt_cuda12fdwt97KernelILi192ELi8EEEvPKfPfiii[0x0000];
	add.u32 $r2, s[0x0020], $r2;
	and.b32 $r6, $r2, constant1_ZN8dwt_cuda12fdwt97KernelILi192ELi8EEEvPKfPfiii[0x0028];
	mov.u32 $r2, $r3;
	add.u32 $p2|$o127, s[0x0020], -$r6;
	@$p2.neu add.u32 $r3, $r3, constant1_ZN8dwt_cuda12fdwt97KernelILi192ELi8EEEvPKfPfiii[0x0000];
	@$p1.neu add.u32 $r4, $r4, constant1_ZN8dwt_cuda12fdwt97KernelILi192ELi8EEEvPKfPfiii[0x0000];
	mov.half.u32 $r6, s[0x0020];
	mov.half.u32 $r9, s[0x0024];
	mul.wide.u16 $r10, $r6.lo, $r9.hi;
	mad.wide.u16 $r10, $r6.hi, $r9.lo, $r10;
	shl.u32 $r11, $r10, 0x00000010;
	mul.wide.u16 $r10, $r3.lo, $r4.hi;
	mad.wide.u16 $r9, $r6.lo, $r9.lo, $r11;
	mad.wide.u16 $r6, $r3.hi, $r4.lo, $r10;
	shr.s32 $r10, $r9, 0x0000001f;
	shl.u32 $r6, $r6, 0x00000010;
	and.b32 $r10, $r10, constant1_ZN8dwt_cuda12fdwt97KernelILi192ELi8EEEvPKfPfiii[0x0000];
	mad.wide.u16 $r3, $r3.lo, $r4.lo, $r6;
	add.half.u32 $r4, $r10, $r9;
	add.half.u32 $r1, $r3, $r1;
	shr.s32 $r20, $r4, 0x00000001;
	bra l0x00004fa8;
	l0x00004f68: and.b32 $r2, s[0x0020], constant1_ZN8dwt_cuda12fdwt97KernelILi192ELi8EEEvPKfPfiii[0x0000];
	add.u32 $r2, $r3, $r2;
	@$p1.neu add.u32 $r4, $r4, constant1_ZN8dwt_cuda12fdwt97KernelILi192ELi8EEEvPKfPfiii[0x0000];
	mov.u32 $r3, s[0x0020];
	mul.wide.u16 $r6, $r4.lo, $r3.hi;
	mad.wide.u16 $r6, $r4.hi, $r3.lo, $r6;
	shl.u32 $r6, $r6, 0x00000010;
	mad.wide.u16 $r20, $r4.lo, $r3.lo, $r6;
	l0x00004fa8: shr.s32 $r3, $r7, 0x0000001f;
	and.b32 $r3, $r3, constant1_ZN8dwt_cuda12fdwt97KernelILi192ELi8EEEvPKfPfiii[0x0000];
	add.u32 $r3, $r3, $r7;
	and.b32 $r4, $r7, constant1_ZN8dwt_cuda12fdwt97KernelILi192ELi8EEEvPKfPfiii[0x0000];
	shr.s32 $r3, $r3, 0x00000001;
	mul.half.lo.u16 $r6, $r2.lo, $r3.hi;
	mul.half.lo.u16 $r7, $r20.lo, $r4.hi;
	mad.wide.u16 $r6, $r2.hi, $r3.lo, $r6;
	mad.wide.u16 $r7, $r20.hi, $r4.lo, $r7;
	shl.u32 $r6, $r6, 0x00000010;
	shl.u32 $r7, $r7, 0x00000010;
	mad.wide.u16 $r3, $r2.lo, $r3.lo, $r6;
	mad.wide.u16 $r4, $r20.lo, $r4.lo, $r7;
	add.half.u32 $r3, $r3, $r4;
	add.half.u32 $r1, $r1, $r3;
	add.u32 $r26, $r2, -$r20;
	bra l0x00005038;
	l0x00005020: mov.u32 $r1, $r124;
	mov.u32 $r26, $r124;
	mov.u32 $r20, $r124;
	l0x00005038: set.gt.s32.s32 $p1/$o127, s[0x0028], $r124;
	@$p1.eq retp;
	add.u32 $r2, $r8, 0x00000004;
	mov.u32 $r6, 0x000005e8;
	and.b32 $r4, $r2, constant1_ZN8dwt_cuda12fdwt97KernelILi192ELi8EEEvPKfPfiii[0x0000];
	mul.wide.u16 $r7, $r4.lo, $r6.hi;
	shr.s32 $r3, $r2, 0x0000001f;
	mad.wide.u16 $r7, $r4.hi, $r6.lo, $r7;
	and.b32 $r3, $r3, constant1_ZN8dwt_cuda12fdwt97KernelILi192ELi8EEEvPKfPfiii[0x0000];
	shl.u32 $r7, $r7, 0x00000010;
	add.u32 $r2, $r2, $r3;
	mad.wide.u16 $r3, $r4.lo, $r6.lo, $r7;
	shr.s32 $r2, $r2, 0x00000001;
	add.u32 $r2, $r3, $r2;
	shl.b32 $ofs2, $r2, 0x00000002;
	set.lt.u32.u32 $p1/$o127, $r19, constant1_ZN8dwt_cuda12fdwt97KernelILi192ELi8EEEvPKfPfiii[0x002c];
	shl.u32 $r2, $r5, 0x00000002;
	set.lt.u32.u32 $p2/$o127, $r19, constant1_ZN8dwt_cuda12fdwt97KernelILi192ELi8EEEvPKfPfiii[0x0030];
	shl.u32 $r28, s[0x0020], 0x00000002;
	mov.u32 $r29, $r124;
	add.u32 $r27, s[0x0010], $r2;
	l0x000050e0: add.u32 $r2, $r27, $r28;
	ld.global.u32 $r5, [$r2];
	add.u32 $r2, $r2, $r28;
	ld.global.u32 $r4, [$r2];
	add.u32 $r2, $r2, $r28;
	ld.global.u32 $r3, [$r2];
	add.u32 $r6, $r2, $r28;
	ld.global.u32 $r2, [$r6];
	mov.u32 s[$ofs3+0x0b1c], $r5;
	add.u32 $r6, $r6, $r28;
	ld.global.u32 $r5, [$r6];
	mov.u32 s[$ofs3+0x0cac], $r4;
	add.u32 $r6, $r6, $r28;
	ld.global.u32 $r4, [$r6];
	mov.u32 s[$ofs3+0x0e3c], $r3;
	add.u32 $r6, $r6, $r28;
	ld.global.u32 $r3, [$r6];
	mov.u32 s[$ofs3+0x0fcc], $r2;
	add.u32 $r27, $r6, $r28;
	ld.global.u32 $r2, [$r27];
	mov.u32 s[$ofs3+0x115c], $r5;
	mov.u32 s[$ofs3+0x12ec], $r4;
	mov.u32 s[$ofs3+0x147c], $r3;
	mov.u32 s[$ofs3+0x160c], $r2;
	ssy 0x000052e8;
	@$p0.eq bra l0x000052e8;
	add.half.u32 $r2, $r25, $r0;
	add.half.u32 $r3, $r2, $r0;
	add.half.u32 $r4, $r0, $r3;
	add.half.u32 $r6, $r0, $r4;
	shl.u32 $r5, $r2, 0x00000002;
	shl.u32 $r7, $r3, 0x00000002;
	shl.u32 $r3, $r4, 0x00000002;
	shl.u32 $r2, $r6, 0x00000002;
	add.u32 $r4, s[0x0010], $r5;
	ld.global.u32 $r5, [$r4];
	add.u32 $r4, s[0x0010], $r7;
	ld.global.u32 $r4, [$r4];
	add.u32 $r3, s[0x0010], $r3;
	ld.global.u32 $r3, [$r3];
	add.u32 $r2, s[0x0010], $r2;
	ld.global.u32 $r2, [$r2];
	shl.b32 $ofs1, $r31, 0x0;
	mov.u32 s[$ofs1+0x0b1c], $r5;
	add.u32 $r5, $r0, $r6;
	mov.u32 s[$ofs1+0x0cac], $r4;
	add.u32 $r4, $r0, $r5;
	mov.u32 s[$ofs1+0x0e3c], $r3;
	add.u32 $r3, $r0, $r4;
	mov.u32 s[$ofs1+0x0fcc], $r2;
	add.u32 $r25, $r0, $r3;
	shl.u32 $r5, $r5, 0x00000002;
	shl.u32 $r4, $r4, 0x00000002;
	shl.u32 $r3, $r3, 0x00000002;
	shl.u32 $r2, $r25, 0x00000002;
	add.u32 $r5, s[0x0010], $r5;
	ld.global.u32 $r5, [$r5];
	add.u32 $r4, s[0x0010], $r4;
	ld.global.u32 $r4, [$r4];
	add.u32 $r3, s[0x0010], $r3;
	ld.global.u32 $r3, [$r3];
	add.u32 $r2, s[0x0010], $r2;
	ld.global.u32 $r2, [$r2];
	mov.u32 s[$ofs1+0x115c], $r5;
	mov.u32 s[$ofs1+0x12ec], $r4;
	mov.u32 s[$ofs1+0x147c], $r3;
	mov.u32 s[$ofs1+0x160c], $r2;
	l0x000052e8: nop;
	bar.sync 0x00000000;
	shl.b32 $ofs4, $r19, 0x00000002;
	add.u32 $ofs1, $ofs4, 0x000022bc;
	mov.u32 $r3, s[$ofs1+0x0000];
	add.u32 $ofs1, $ofs4, 0x00000b1c;
	mov.half.u32 $r2, s[$ofs1+0x0004];
	add.half.f32 $r2, s[$ofs1+0x0000], $r2;
	mad.f32 $r3, $r2, 0xbfcb0673, $r3;
	mov.u32 s[$ofs4+0x22bc], $r3;
	add.u32 $ofs1, $ofs4, 0x000025bc;
	mov.u32 $r3, s[$ofs1+0x0000];
	add.u32 $ofs1, $ofs4, 0x00000e1c;
	mov.half.u32 $r2, s[$ofs1+0x0004];
	add.half.f32 $r2, s[$ofs1+0x0000], $r2;
	mad.f32 $r3, $r2, 0xbfcb0673, $r3;
	mov.u32 s[$ofs4+0x25bc], $r3;
	add.u32 $ofs1, $ofs4, 0x000028bc;
	mov.u32 $r3, s[$ofs1+0x0000];
	add.u32 $ofs1, $ofs4, 0x0000111c;
	mov.half.u32 $r2, s[$ofs1+0x0004];
	add.half.f32 $r2, s[$ofs1+0x0000], $r2;
	mad.f32 $r3, $r2, 0xbfcb0673, $r3;
	mov.u32 s[$ofs4+0x28bc], $r3;
	add.u32 $ofs1, $ofs4, 0x00002bbc;
	mov.u32 $r3, s[$ofs1+0x0000];
	add.u32 $ofs1, $ofs4, 0x0000141c;
	mov.half.u32 $r2, s[$ofs1+0x0004];
	add.half.f32 $r2, s[$ofs1+0x0000], $r2;
	mad.f32 $r3, $r2, 0xbfcb0673, $r3;
	mov.u32 s[$ofs4+0x2bbc], $r3;
	ssy 0x00005408;
	@$p1.eq bra l0x00005408;
	shl.b32 $ofs4, $r19, 0x00000002;
	add.u32 $ofs1, $ofs4, 0x0000171c;
	mov.half.u32 $r2, s[$ofs1+0x0004];
	add.half.f32 $r3, s[$ofs1+0x0000], $r2;
	add.u32 $ofs1, $ofs4, 0x00002ebc;
	mov.u32 $r2, s[$ofs1+0x0000];
	mad.f32 $r2, $r3, 0xbfcb0673, $r2;
	mov.u32 s[$ofs4+0x2ebc], $r2;
	l0x00005408: nop;
	bar.sync 0x00000000;
	shl.b32 $ofs4, $r19, 0x00000002;
	add.u32 $ofs1, $ofs4, 0x00000b20;
	mov.u32 $r3, s[$ofs1+0x0000];
	add.u32 $ofs1, $ofs4, 0x000022bc;
	mov.half.u32 $r2, s[$ofs1+0x0004];
	add.half.f32 $r2, s[$ofs1+0x0000], $r2;
	mad.f32 $r3, $r2, 0xbd5901ae, $r3;
	mov.u32 s[$ofs4+0x0b20], $r3;
	add.u32 $ofs1, $ofs4, 0x00000e20;
	mov.u32 $r3, s[$ofs1+0x0000];
	add.u32 $ofs1, $ofs4, 0x000025bc;
	mov.half.u32 $r2, s[$ofs1+0x0004];
	add.half.f32 $r2, s[$ofs1+0x0000], $r2;
	mad.f32 $r3, $r2, 0xbd5901ae, $r3;
	mov.u32 s[$ofs4+0x0e20], $r3;
	add.u32 $ofs1, $ofs4, 0x00001120;
	mov.u32 $r3, s[$ofs1+0x0000];
	add.u32 $ofs1, $ofs4, 0x000028bc;
	mov.half.u32 $r2, s[$ofs1+0x0004];
	add.half.f32 $r2, s[$ofs1+0x0000], $r2;
	mad.f32 $r3, $r2, 0xbd5901ae, $r3;
	mov.u32 s[$ofs4+0x1120], $r3;
	add.u32 $ofs1, $ofs4, 0x00001420;
	mov.u32 $r3, s[$ofs1+0x0000];
	add.u32 $ofs1, $ofs4, 0x00002bbc;
	mov.half.u32 $r2, s[$ofs1+0x0004];
	add.half.f32 $r2, s[$ofs1+0x0000], $r2;
	mad.f32 $r3, $r2, 0xbd5901ae, $r3;
	mov.u32 s[$ofs4+0x1420], $r3;
	ssy 0x00005528;
	@$p1.eq bra l0x00005528;
	shl.b32 $ofs4, $r19, 0x00000002;
	add.u32 $ofs1, $ofs4, 0x00002ebc;
	mov.half.u32 $r2, s[$ofs1+0x0004];
	add.half.f32 $r3, s[$ofs1+0x0000], $r2;
	add.u32 $ofs1, $ofs4, 0x00001720;
	mov.u32 $r2, s[$ofs1+0x0000];
	mad.f32 $r2, $r3, 0xbd5901ae, $r2;
	mov.u32 s[$ofs4+0x1720], $r2;
	l0x00005528: nop;
	bar.sync 0x00000000;
	shl.b32 $ofs4, $r19, 0x00000002;
	add.u32 $ofs1, $ofs4, 0x000022bc;
	mov.u32 $r3, s[$ofs1+0x0000];
	add.u32 $ofs1, $ofs4, 0x00000b1c;
	mov.half.u32 $r2, s[$ofs1+0x0004];
	add.half.f32 $r2, s[$ofs1+0x0000], $r2;
	mad.f32 $r3, $r2, 0x3f620676, $r3;
	mov.u32 s[$ofs4+0x22bc], $r3;
	add.u32 $ofs1, $ofs4, 0x000025bc;
	mov.u32 $r3, s[$ofs1+0x0000];
	add.u32 $ofs1, $ofs4, 0x00000e1c;
	mov.half.u32 $r2, s[$ofs1+0x0004];
	add.half.f32 $r2, s[$ofs1+0x0000], $r2;
	mad.f32 $r3, $r2, 0x3f620676, $r3;
	mov.u32 s[$ofs4+0x25bc], $r3;
	add.u32 $ofs1, $ofs4, 0x000028bc;
	mov.u32 $r3, s[$ofs1+0x0000];
	add.u32 $ofs1, $ofs4, 0x0000111c;
	mov.half.u32 $r2, s[$ofs1+0x0004];
	add.half.f32 $r2, s[$ofs1+0x0000], $r2;
	mad.f32 $r3, $r2, 0x3f620676, $r3;
	mov.u32 s[$ofs4+0x28bc], $r3;
	add.u32 $ofs1, $ofs4, 0x00002bbc;
	mov.u32 $r3, s[$ofs1+0x0000];
	add.u32 $ofs1, $ofs4, 0x0000141c;
	mov.half.u32 $r2, s[$ofs1+0x0004];
	add.half.f32 $r2, s[$ofs1+0x0000], $r2;
	mad.f32 $r3, $r2, 0x3f620676, $r3;
	mov.u32 s[$ofs4+0x2bbc], $r3;
	ssy 0x00005648;
	@$p1.eq bra l0x00005648;
	shl.b32 $ofs4, $r19, 0x00000002;
	add.u32 $ofs1, $ofs4, 0x0000171c;
	mov.half.u32 $r2, s[$ofs1+0x0004];
	add.half.f32 $r3, s[$ofs1+0x0000], $r2;
	add.u32 $ofs1, $ofs4, 0x00002ebc;
	mov.u32 $r2, s[$ofs1+0x0000];
	mad.f32 $r2, $r3, 0x3f620676, $r2;
	mov.u32 s[$ofs4+0x2ebc], $r2;
	l0x00005648: nop;
	bar.sync 0x00000000;
	shl.b32 $ofs4, $r19, 0x00000002;
	add.u32 $ofs1, $ofs4, 0x00000b20;
	mov.u32 $r3, s[$ofs1+0x0000];
	add.u32 $ofs1, $ofs4, 0x000022bc;
	mov.half.u32 $r2, s[$ofs1+0x0004];
	add.half.f32 $r2, s[$ofs1+0x0000], $r2;
	mad.f32 $r3, $r2, 0x3ee31355, $r3;
	mov.u32 s[$ofs4+0x0b20], $r3;
	add.u32 $ofs1, $ofs4, 0x00000e20;
	mov.u32 $r3, s[$ofs1+0x0000];
	add.u32 $ofs1, $ofs4, 0x000025bc;
	mov.half.u32 $r2, s[$ofs1+0x0004];
	add.half.f32 $r2, s[$ofs1+0x0000], $r2;
	mad.f32 $r3, $r2, 0x3ee31355, $r3;
	mov.u32 s[$ofs4+0x0e20], $r3;
	add.u32 $ofs1, $ofs4, 0x00001120;
	mov.u32 $r3, s[$ofs1+0x0000];
	add.u32 $ofs1, $ofs4, 0x000028bc;
	mov.half.u32 $r2, s[$ofs1+0x0004];
	add.half.f32 $r2, s[$ofs1+0x0000], $r2;
	mad.f32 $r3, $r2, 0x3ee31355, $r3;
	mov.u32 s[$ofs4+0x1120], $r3;
	add.u32 $ofs1, $ofs4, 0x00001420;
	mov.u32 $r3, s[$ofs1+0x0000];
	add.u32 $ofs1, $ofs4, 0x00002bbc;
	mov.half.u32 $r2, s[$ofs1+0x0004];
	add.half.f32 $r2, s[$ofs1+0x0000], $r2;
	mad.f32 $r3, $r2, 0x3ee31355, $r3;
	mov.u32 s[$ofs4+0x1420], $r3;
	ssy 0x00005768;
	@$p1.eq bra l0x00005768;
	shl.b32 $ofs4, $r19, 0x00000002;
	add.u32 $ofs1, $ofs4, 0x00002ebc;
	mov.half.u32 $r2, s[$ofs1+0x0004];
	add.half.f32 $r3, s[$ofs1+0x0000], $r2;
	add.u32 $ofs1, $ofs4, 0x00001720;
	mov.u32 $r2, s[$ofs1+0x0000];
	mad.f32 $r2, $r3, 0x3ee31355, $r2;
	mov.u32 s[$ofs4+0x1720], $r2;
	l0x00005768: nop;
	bar.sync 0x00000000;
	shl.b32 $ofs4, $r19, 0x00000002;
	add.u32 $ofs1, $ofs4, 0x00000b1c;
	mul.f32 $r2, s[$ofs1+0x0000], 0x3f5019c3;
	mov.u32 s[$ofs4+0x0b1c], $r2;
	add.u32 $ofs1, $ofs4, 0x000022bc;
	mul.f32 $r2, s[$ofs1+0x0000], 0x3f9d7658;
	mov.u32 s[$ofs4+0x22bc], $r2;
	add.u32 $ofs1, $ofs4, 0x00000e1c;
	mul.f32 $r2, s[$ofs1+0x0000], 0x3f5019c3;
	mov.u32 s[$ofs4+0x0e1c], $r2;
	add.u32 $ofs1, $ofs4, 0x000025bc;
	mul.f32 $r2, s[$ofs1+0x0000], 0x3f9d7658;
	mov.u32 s[$ofs4+0x25bc], $r2;
	add.u32 $ofs1, $ofs4, 0x0000111c;
	mul.f32 $r2, s[$ofs1+0x0000], 0x3f5019c3;
	mov.u32 s[$ofs4+0x111c], $r2;
	add.u32 $ofs1, $ofs4, 0x000028bc;
	mul.f32 $r2, s[$ofs1+0x0000], 0x3f9d7658;
	mov.u32 s[$ofs4+0x28bc], $r2;
	add.u32 $ofs1, $ofs4, 0x0000141c;
	mul.f32 $r2, s[$ofs1+0x0000], 0x3f5019c3;
	mov.u32 s[$ofs4+0x141c], $r2;
	add.u32 $ofs1, $ofs4, 0x00002bbc;
	mul.f32 $r2, s[$ofs1+0x0000], 0x3f9d7658;
	mov.u32 s[$ofs4+0x2bbc], $r2;
	ssy 0x00005888;
	@$p2.eq bra l0x00005888;
	shl.b32 $ofs4, $r19, 0x00000002;
	add.u32 $ofs1, $ofs4, 0x0000171c;
	mul.f32 $r2, s[$ofs1+0x0000], 0x3f5019c3;
	mov.u32 s[$ofs4+0x171c], $r2;
	add.u32 $ofs1, $ofs4, 0x00002ebc;
	mul.f32 $r2, s[$ofs1+0x0000], 0x3f9d7658;
	mov.u32 s[$ofs4+0x2ebc], $r2;
	l0x00005888: nop;
	bar.sync 0x00000000;
	add.u32 $ofs1, $ofs2, 0x000001bc;
	mov.u32 $r16, s[$ofs1+0x0000];
	add.u32 $ofs1, $ofs2, 0x0000034c;
	mov.half.u32 $r3, s[$ofs1+0x0000];
	mov.half.u32 $r2, s[$ofs1+0x0000];
	mov.u32 $r22, s[$ofs1+0x0000];
	add.u32 $ofs1, $ofs2, 0x000012ec;
	mov.half.u32 $r4, s[$ofs1+0x0000];
	mov.half.u32 $r5, s[$ofs1+0x0000];
	mov.half.u32 $r12, s[$ofs1+0x0000];
	mov.half.u32 $r8, s[$ofs1+0x0000];
	add.u32 $ofs1, $ofs2, 0x0000147c;
	mov.half.u32 $r11, s[$ofs1+0x0000];
	mov.half.u32 $r15, s[$ofs1+0x0000];
	add.u32 $ofs1, $ofs2, 0x0000115c;
	mov.u32 $r32, $ofs1;
	add.u32 $ofs1, $ofs2, 0x00000fcc;
	mov.u32 $r37, $ofs1;
	add.u32 $ofs4, $ofs2, 0x0000160c;
	shl.b32 $ofs1, $r32, 0x0;
	mov.u32 $r9, s[$ofs1+0x0000];
	shl.b32 $ofs1, $r37, 0x0;
	add.f32 $r4, s[$ofs1+0x0000], $r4;
	add.f32 $r5, s[$ofs4+0x0000], $r5;
	mad.f32 $r9, $r4, 0xbfcb0673, $r9;
	mad.f32 $r11, $r5, 0xbfcb0673, $r11;
	add.f32 $r4, $r9, $r11;
	mad.f32 $r12, $r4, 0xbd5901ae, $r12;
	mov.u32 $r10, s[$ofs4+0x0000];
	add.f32 $r30, s[$ofs4+0x0000], $r12;
	add.f32 $r3, s[$ofs2+0x002c], $r3;
	mad.f32 $r16, $r3, 0xbfcb0673, $r16;
	add.u32 $ofs1, $ofs2, 0x00000e3c;
	mov.u32 $r33, $ofs1;
	add.u32 $ofs4, $ofs2, 0x00000cac;
	mov.u32 $r17, s[$ofs2+0x002c];
	shl.b32 $ofs1, $r37, 0x0;
	mov.u32 $r3, s[$ofs1+0x0000];
	shl.b32 $ofs1, $r33, 0x0;
	mov.u32 $r7, s[$ofs1+0x0000];
	mov.u32 $r5, s[$ofs4+0x0000];
	mov.u32 $r21, s[$ofs4+0x0000];
	shl.b32 $ofs1, $r37, 0x0;
	mov.u32 $r18, s[$ofs1+0x0000];
	mov.u32 $r4, s[$ofs4+0x0000];
	shl.b32 $ofs1, $r33, 0x0;
	mov.u32 $r13, s[$ofs1+0x0000];
	shl.b32 $ofs1, $r37, 0x0;
	mov.u32 $r6, s[$ofs1+0x0000];
	shl.b32 $ofs1, $r32, 0x0;
	mov.u32 $r14, s[$ofs1+0x0000];
	add.f32 $r38, s[$ofs4+0x0000], $r3;
	add.u32 $ofs1, $ofs2, 0x000004dc;
	mov.u32 $r3, $ofs1;
	mov.u32 s[$ofs2+0x01bc], $r16;
	mov.u32 $r34, s[$ofs1+0x0000];
	add.u32 $ofs1, $ofs2, 0x0000066c;
	mov.u32 $r3, $ofs1;
	mov.half.u32 $r24, s[$ofs1+0x0000];
	mov.half.u32 $r3, s[$ofs1+0x0000];
	mov.half.u32 $r23, s[$ofs1+0x0000];
	add.half.f32 $r2, $r2, $r24;
	mad.f32 $r2, $r2, constant1_ZN8dwt_cuda12fdwt97KernelILi192ELi8EEEvPKfPfiii[0x0018], $r34;
	add.u32 $ofs1, $ofs2, 0x0000098c;
	mov.u32 $r34, $ofs1;
	mov.u32 s[$ofs2+0x04dc], $r2;
	mov.u32 $r24, s[$ofs1+0x0000];
	add.u32 $ofs1, $ofs2, 0x000007fc;
	mov.u32 $r35, $ofs1;
	add.half.f32 $r24, $r3, $r24;
	mov.half.u32 $r3, s[$ofs1+0x0000];
	mad.f32 $r3, $r24, 0xbfcb0673, $r3;
	shl.b32 $ofs1, $r34, 0x0;
	add.half.f32 $r39, s[$ofs1+0x0000], $r5;
	mov.half.u32 $r24, s[$ofs1+0x0000];
	add.u32 $ofs1, $ofs2, 0x00000b1c;
	mov.u32 $r36, $ofs1;
	mov.u32 s[$ofs2+0x07fc], $r3;
	mov.u32 $r5, s[$ofs1+0x0000];
	mad.f32 $r5, $r39, 0xbfcb0673, $r5;
	mad.f32 $r7, $r38, 0xbfcb0673, $r7;
	mov.u32 s[$ofs2+0x0b1c], $r5;
	mov.u32 s[$ofs2+0x0e3c], $r7;
	add.f32 $r38, $r16, $r2;
	mov.u32 s[$ofs2+0x115c], $r9;
	add.f32 $r39, $r2, $r3;
	mad.f32 $r22, $r38, 0xbd5901ae, $r22;
	mov.u32 s[$ofs2+0x147c], $r11;
	mad.f32 $r23, $r39, 0xbd5901ae, $r23;
	add.f32 $r38, $r3, $r5;
	mov.u32 s[$ofs2+0x034c], $r22;
	add.f32 $r39, $r5, $r7;
	mad.f32 $r24, $r38, 0xbd5901ae, $r24;
	mov.u32 s[$ofs2+0x066c], $r23;
	mad.f32 $r21, $r39, 0xbd5901ae, $r21;
	add.f32 $r38, $r7, $r9;
	mov.u32 s[$ofs2+0x098c], $r24;
	mad.f32 $r18, $r38, 0xbd5901ae, $r18;
	mov.u32 s[$ofs2+0x0cac], $r21;
	add.f32 $r17, $r17, $r22;
	mov.u32 s[$ofs2+0x0fcc], $r18;
	mad.f32 $r16, $r17, 0x3f620676, $r16;
	add.f32 $r17, $r22, $r23;
	mov.u32 s[$ofs2+0x12ec], $r12;
	add.f32 $r38, $r23, $r24;
	mad.f32 $r2, $r17, 0x3f620676, $r2;
	mov.u32 s[$ofs2+0x01bc], $r16;
	mad.f32 $r3, $r38, 0x3f620676, $r3;
	add.f32 $r17, $r24, $r21;
	mov.u32 s[$ofs2+0x04dc], $r2;
	add.f32 $r38, $r21, $r18;
	mad.f32 $r5, $r17, 0x3f620676, $r5;
	mov.u32 s[$ofs2+0x07fc], $r3;
	mad.f32 $r7, $r38, 0x3f620676, $r7;
	add.f32 $r17, $r18, $r12;
	mov.u32 s[$ofs2+0x0b1c], $r5;
	mad.f32 $r9, $r17, 0x3f620676, $r9;
	mov.u32 s[$ofs2+0x0e3c], $r7;
	mad.f32 $r11, $r30, 0x3f620676, $r11;
	add.f32 $r16, $r16, $r2;
	mov.u32 s[$ofs2+0x115c], $r9;
	mad.f32 $r22, $r16, 0x3ee31355, $r22;
	mov.u32 s[$ofs2+0x147c], $r11;
	add.f32 $r2, $r2, $r3;
	mov.u32 s[$ofs2+0x034c], $r22;
	add.f32 $r3, $r3, $r5;
	mad.f32 $r23, $r2, 0x3ee31355, $r23;
	mad.f32 $r24, $r3, 0x3ee31355, $r24;
	mov.u32 s[$ofs2+0x066c], $r23;
	add.f32 $r2, $r5, $r7;
	mov.u32 s[$ofs2+0x098c], $r24;
	mad.f32 $r21, $r2, 0x3ee31355, $r21;
	add.f32 $r2, $r7, $r9;
	mov.u32 s[$ofs2+0x0cac], $r21;
	add.f32 $r3, $r9, $r11;
	mad.f32 $r18, $r2, 0x3ee31355, $r18;
	mad.f32 $r12, $r3, 0x3ee31355, $r12;
	mov.u32 s[$ofs2+0x0fcc], $r18;
	mov.u32 s[$ofs2+0x12ec], $r12;
	shl.b32 $ofs1, $r35, 0x0;
	mul.f32 $r17, s[$ofs1+0x0000], 0x3f9d7658;
	shl.b32 $ofs1, $r34, 0x0;
	mul.f32 $r9, s[$ofs1+0x0000], 0x3f5019c3;
	shl.b32 $ofs1, $r36, 0x0;
	mul.f32 $r7, s[$ofs1+0x0000], 0x3f9d7658;
	mul.f32 $r3, s[$ofs4+0x0000], constant1_ZN8dwt_cuda12fdwt97KernelILi192ELi8EEEvPKfPfiii[0x0038];
	shl.b32 $ofs1, $r33, 0x0;
	mul.f32 $r2, s[$ofs1+0x0000], 0x3f9d7658;
	shl.b32 $ofs1, $r37, 0x0;
	mul.f32 $r5, s[$ofs1+0x0000], 0x3f5019c3;
	shl.u32 $r11, $r1, 0x00000002;
	add.half.u32 $r1, $r20, $r1;
	add.half.u32 $r11, s[0x0018], $r11;
	shl.u32 $r16, $r1, 0x00000002;
	mul.f32 $r12, $r23, 0x3f5019c3;
	add.u32 $r1, $r26, $r1;
	st.global.u32 [$r11], $r12;
	add.u32 $r12, s[0x0018], $r16;
	shl.u32 $r16, $r1, 0x00000002;
	shl.b32 $ofs1, $r32, 0x0;
	mul.f32 $r11, s[$ofs1+0x0000], 0x3f9d7658;
	add.u32 $r1, $r20, $r1;
	mov.u32 s[$ofs2+0x002c], $r4;
	st.global.u32 [$r12], $r17;
	add.u32 $r4, s[0x0018], $r16;
	shl.u32 $r12, $r1, 0x00000002;
	add.u32 $r1, $r26, $r1;
	mov.u32 s[$ofs2+0x01bc], $r13;
	st.global.u32 [$r4], $r9;
	add.u32 $r4, s[0x0018], $r12;
	shl.u32 $r9, $r1, 0x00000002;
	add.u32 $r1, $r20, $r1;
	mov.u32 s[$ofs2+0x034c], $r6;
	st.global.u32 [$r4], $r7;
	add.u32 $r4, s[0x0018], $r9;
	shl.u32 $r6, $r1, 0x00000002;
	add.u32 $r1, $r26, $r1;
	mov.u32 s[$ofs2+0x04dc], $r14;
	st.global.u32 [$r4], $r3;
	add.u32 $r3, s[0x0018], $r6;
	shl.u32 $r4, $r1, 0x00000002;
	add.u32 $r1, $r20, $r1;
	mov.u32 s[$ofs2+0x066c], $r8;
	st.global.u32 [$r3], $r2;
	add.u32 $r2, s[0x0018], $r4;
	shl.u32 $r3, $r1, 0x00000002;
	mov.u32 s[$ofs2+0x07fc], $r15;
	st.global.u32 [$r2], $r5;
	add.u32 $r2, s[0x0018], $r3;
	mov.u32 s[$ofs2+0x098c], $r10;
	st.global.u32 [$r2], $r11;
	add.u32 $r1, $r26, $r1;
	bar.sync 0x00000000;
	add.u32 $r29, $r29, 0x00000001;
	set.ne.s32.s32 $p3/$o127, s[0x0028], $r29;
	@$p3.ne bra l0x000050e0;
	nop;

	l_exit: exit;
}
//END INSTRUCTIONS
