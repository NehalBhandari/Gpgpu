//HEADER
.version 1.4+
.target sm_10, map_f64_to_f32
//END HEADER


//INSTRUCTIONS

.const .u32 constant1_Z21c_CopySrcToComponentsIfEvPT_S1_S1_Phi[5] = {
          0x000002ff, 0x7e800000, 0xbf000000, 0x3e800000, 
          0x427f0000
};

.const .u32 constant1_Z21c_CopySrcToComponentsIiEvPT_S1_S1_Phi[1] = {
          0x000002ff
};

.const .u32 constant1_Z20c_CopySrcToComponentIfEvPT_Phi[5] = {
          0x000000ff, 0x7e800000, 0xbf000000, 0x3e800000, 
          0x427f0000
};

.const .u32 constant1_Z20c_CopySrcToComponentIiEvPT_Phi[1] = {
          0x000000ff
};





.entry  _Z20c_CopySrcToComponentIiEvPT_Phi (
	.param  .u64 __cudaparm__Z20c_CopySrcToComponentIiEvPT_Phi_d_c ,
	.param  .u64 __cudaparm__Z20c_CopySrcToComponentIiEvPT_Phi_d_src ,
	.param  .s32 __cudaparm__Z20c_CopySrcToComponentIiEvPT_Phi_pixels )
{
	.reg .u32 $r<3>;
	.reg .u32 $ofs<2>;
	.reg .pred $p<4>;

	.reg .u32 $o127;

	
	cvt.u32.u16 $r1, $r0.lo;
	shl.u32 $r2, $r1, 0x00000002;
	mov.u16 $r0.lo, %ntid.x;
	set.gt.s32.s32 $p0/$o127, $r2, constant1_Z20c_CopySrcToComponentIiEvPT_Phi[0x0000];
	ssy 0x00000070;
	mul.wide.u16 $r0, %ctaid.x, $r0.lo;
	@$p0.ne bra l0x00000070;
	shr.s32 $r2, $r0, 0x00000002;
	add.u32 $r2, $r1, $r2;
	shl.u32 $r2, $r2, 0x00000002;
	add.u32 $r2, s[0x0018], $r2;
	shl.b32 $ofs1, $r1, 0x00000002;
	ld.global.u32 $r2, [$r2];
	mov.u32 s[$ofs1+0x0024], $r2;
	l0x00000070: nop;
	bar.sync 0x00000000;
	add.u32 $r0, $r1, $r0;
	set.le.s32.s32 $p0/$o127, s[0x0020], $r0;
	@$p0.ne retp;
	shl.b32 $ofs1, $r1, 0x0;
	add.u32 $ofs1, $ofs1, 0x00000024;
	shl.u32 $r0, $r0, 0x00000002;
	cvt.u32.u8 $r1, s[$ofs1+0x0000];
	add.u32 $r0, s[0x0010], $r0;
	add.u32 $r1, $r1, 0xffffff80;
	st.global.u32 [$r0], $r1;

	l_exit: exit;
}

.entry  _Z20c_CopySrcToComponentIfEvPT_Phi (
	.param  .u64 __cudaparm__Z20c_CopySrcToComponentIfEvPT_Phi_d_c ,
	.param  .u64 __cudaparm__Z20c_CopySrcToComponentIfEvPT_Phi_d_src ,
	.param  .s32 __cudaparm__Z20c_CopySrcToComponentIfEvPT_Phi_pixels )
{
	.reg .u32 $r<3>;
	.reg .u32 $ofs<2>;
	.reg .pred $p<4>;

	.reg .u32 $o127;

	
	cvt.u32.u16 $r1, $r0.lo;
	shl.u32 $r2, $r1, 0x00000002;
	mov.u16 $r0.lo, %ntid.x;
	set.gt.s32.s32 $p0/$o127, $r2, constant1_Z20c_CopySrcToComponentIfEvPT_Phi[0x0000];
	ssy 0x00000070;
	mul.wide.u16 $r0, %ctaid.x, $r0.lo;
	@$p0.ne bra l0x00000070;
	shr.s32 $r2, $r0, 0x00000002;
	add.u32 $r2, $r1, $r2;
	shl.u32 $r2, $r2, 0x00000002;
	add.u32 $r2, s[0x0018], $r2;
	shl.b32 $ofs1, $r1, 0x00000002;
	ld.global.u32 $r2, [$r2];
	mov.u32 s[$ofs1+0x0024], $r2;
	l0x00000070: nop;
	bar.sync 0x00000000;
	add.u32 $r0, $r1, $r0;
	set.le.s32.s32 $p0/$o127, s[0x0020], $r0;
	@$p0.ne retp;
	shl.b32 $ofs1, $r1, 0x0;
	mov.u32 $r1, 0x437f0000;
	add.u32 $ofs1, $ofs1, 0x00000024;
	set.gt.f32.f32 $p0/$o127, $r1, constant1_Z20c_CopySrcToComponentIfEvPT_Phi[0x0004];
	mov.u32 $r2, 0x437f0000;
	cvt.f32.u8 $r1, s[$ofs1+0x0000];
	@$p0.neu mul.f32 $r1, $r1, constant1_Z20c_CopySrcToComponentIfEvPT_Phi[0x000c];
	@$p0.neu mov.u32 $r2, constant1_Z20c_CopySrcToComponentIfEvPT_Phi[0x0010];
	rcp.f32 $r2, $r2;
	shl.u32 $r0, $r0, 0x00000002;
	mad.f32 $r1, $r1, $r2, constant1_Z20c_CopySrcToComponentIfEvPT_Phi[0x0008];
	add.u32 $r0, s[0x0010], $r0;
	st.global.u32 [$r0], $r1;

	l_exit: exit;
}

.entry  _Z21c_CopySrcToComponentsIiEvPT_S1_S1_Phi (
	.param  .u64 __cudaparm__Z21c_CopySrcToComponentsIiEvPT_S1_S1_Phi_d_r ,
	.param  .u64 __cudaparm__Z21c_CopySrcToComponentsIiEvPT_S1_S1_Phi_d_g ,
	.param  .u64 __cudaparm__Z21c_CopySrcToComponentsIiEvPT_S1_S1_Phi_d_b ,
	.param  .u64 __cudaparm__Z21c_CopySrcToComponentsIiEvPT_S1_S1_Phi_d_src ,
	.param  .s32 __cudaparm__Z21c_CopySrcToComponentsIiEvPT_S1_S1_Phi_pixels )
{
	.reg .u32 $r<4>;
	.reg .u32 $ofs<2>;
	.reg .pred $p<4>;

	.reg .u32 $o127;

	
	cvt.u32.u16 $r1, $r0.lo;
	shl.u32 $r2, $r1, 0x00000002;
	mov.u16 $r0.lo, %ntid.x;
	set.gt.s32.s32 $p0/$o127, $r2, constant1_Z21c_CopySrcToComponentsIiEvPT_S1_S1_Phi[0x0000];
	ssy 0x00000080;
	mul.wide.u16 $r0, %ctaid.x, $r0.lo;
	@$p0.ne bra l0x00000080;
	shl.u32 $r2, $r0, 0x00000001;
	add.u32 $r2, $r2, $r0;
	shr.s32 $r2, $r2, 0x00000002;
	add.u32 $r2, $r1, $r2;
	shl.u32 $r2, $r2, 0x00000002;
	add.u32 $r2, s[0x0028], $r2;
	shl.b32 $ofs1, $r1, 0x00000002;
	ld.global.u32 $r2, [$r2];
	mov.u32 s[$ofs1+0x0034], $r2;
	l0x00000080: nop;
	bar.sync 0x00000000;
	add.u32 $r0, $r1, $r0;
	set.le.s32.s32 $p0/$o127, s[0x0030], $r0;
	@$p0.ne retp;
	mul24.lo.u32 $r1, $r1, 0x00000003;
	shl.b32 $ofs1, $r1, 0x0;
	add.u32 $ofs1, $ofs1, 0x00000034;
	shl.u32 $r0, $r0, 0x00000002;
	cvt.u32.u8 $r2, s[$ofs1+0x0000];
	add.u32 $r1, s[0x0010], $r0;
	add.u32 $r2, $r2, 0xffffff80;
	cvt.u32.u8 $r3, s[$ofs1+0x0001];
	st.global.u32 [$r1], $r2;
	add.u32 $r1, s[0x0018], $r0;
	add.u32 $r2, $r3, 0xffffff80;
	cvt.u32.u8 $r3, s[$ofs1+0x0002];
	st.global.u32 [$r1], $r2;
	add.u32 $r0, s[0x0020], $r0;
	add.u32 $r1, $r3, 0xffffff80;
	st.global.u32 [$r0], $r1;

	l_exit: exit;
}

.entry  _Z21c_CopySrcToComponentsIfEvPT_S1_S1_Phi (
	.param  .u64 __cudaparm__Z21c_CopySrcToComponentsIfEvPT_S1_S1_Phi_d_r ,
	.param  .u64 __cudaparm__Z21c_CopySrcToComponentsIfEvPT_S1_S1_Phi_d_g ,
	.param  .u64 __cudaparm__Z21c_CopySrcToComponentsIfEvPT_S1_S1_Phi_d_b ,
	.param  .u64 __cudaparm__Z21c_CopySrcToComponentsIfEvPT_S1_S1_Phi_d_src ,
	.param  .s32 __cudaparm__Z21c_CopySrcToComponentsIfEvPT_S1_S1_Phi_pixels )
{
	.reg .u32 $r<4>;
	.reg .u32 $ofs<3>;
	.reg .pred $p<4>;

	.reg .u32 $o127;

	
	cvt.u32.u16 $r1, $r0.lo;
	shl.u32 $r2, $r1, 0x00000002;
	mov.u16 $r0.lo, %ntid.x;
	set.gt.s32.s32 $p0/$o127, $r2, constant1_Z21c_CopySrcToComponentsIfEvPT_S1_S1_Phi[0x0000];
	ssy 0x00000080;
	mul.wide.u16 $r0, %ctaid.x, $r0.lo;
	@$p0.ne bra l0x00000080;
	shl.u32 $r2, $r0, 0x00000001;
	add.u32 $r2, $r2, $r0;
	shr.s32 $r2, $r2, 0x00000002;
	add.u32 $r2, $r1, $r2;
	shl.u32 $r2, $r2, 0x00000002;
	add.u32 $r2, s[0x0028], $r2;
	shl.b32 $ofs1, $r1, 0x00000002;
	ld.global.u32 $r2, [$r2];
	mov.u32 s[$ofs1+0x0034], $r2;
	l0x00000080: nop;
	bar.sync 0x00000000;
	add.u32 $r0, $r1, $r0;
	set.le.s32.s32 $p0/$o127, s[0x0030], $r0;
	@$p0.ne retp;
	mul24.lo.u32 $r1, $r1, 0x00000003;
	add.u32 $r2, $r1, 0x00000034;
	shl.b32 $ofs2, $r1, 0x0;
	mov.u32 $r1, 0x437f0000;
	shl.b32 $ofs1, $r2, 0x0;
	add.u32 $ofs2, $ofs2, 0x00000034;
	set.gt.f32.f32 $p0/$o127, $r1, constant1_Z21c_CopySrcToComponentsIfEvPT_S1_S1_Phi[0x0004];
	shl.u32 $r0, $r0, 0x00000002;
	mov.u32 $r2, 0x437f0000;
	cvt.f32.u8 $r1, s[$ofs2+0x0000];
	@$p0.neu mul.f32 $r1, $r1, constant1_Z21c_CopySrcToComponentsIfEvPT_S1_S1_Phi[0x000c];
	@$p0.neu mov.u32 $r2, constant1_Z21c_CopySrcToComponentsIfEvPT_S1_S1_Phi[0x0010];
	rcp.f32 $r2, $r2;
	mad.f32 $r3, $r1, $r2, constant1_Z21c_CopySrcToComponentsIfEvPT_S1_S1_Phi[0x0008];
	mov.u32 $r1, 0x437f0000;
	add.u32 $r2, s[0x0010], $r0;
	set.gt.f32.f32 $p0/$o127, $r1, constant1_Z21c_CopySrcToComponentsIfEvPT_S1_S1_Phi[0x0004];
	st.global.u32 [$r2], $r3;
	cvt.f32.u8 $r1, s[$ofs1+0x0001];
	mov.u32 $r2, 0x437f0000;
	@$p0.neu mul.f32 $r1, $r1, constant1_Z21c_CopySrcToComponentsIfEvPT_S1_S1_Phi[0x000c];
	@$p0.neu mov.u32 $r2, constant1_Z21c_CopySrcToComponentsIfEvPT_S1_S1_Phi[0x0010];
	rcp.f32 $r2, $r2;
	mad.f32 $r3, $r1, $r2, constant1_Z21c_CopySrcToComponentsIfEvPT_S1_S1_Phi[0x0008];
	mov.u32 $r1, 0x437f0000;
	add.u32 $r2, s[0x0018], $r0;
	set.gt.f32.f32 $p0/$o127, $r1, constant1_Z21c_CopySrcToComponentsIfEvPT_S1_S1_Phi[0x0004];
	st.global.u32 [$r2], $r3;
	cvt.f32.u8 $r1, s[$ofs1+0x0002];
	mov.u32 $r2, 0x437f0000;
	@$p0.neu mul.f32 $r1, $r1, constant1_Z21c_CopySrcToComponentsIfEvPT_S1_S1_Phi[0x000c];
	@$p0.neu mov.u32 $r2, constant1_Z21c_CopySrcToComponentsIfEvPT_S1_S1_Phi[0x0010];
	rcp.f32 $r2, $r2;
	mad.f32 $r1, $r1, $r2, constant1_Z21c_CopySrcToComponentsIfEvPT_S1_S1_Phi[0x0008];
	add.u32 $r0, s[0x0020], $r0;
	st.global.u32 [$r0], $r1;

	l_exit: exit;
}
//END INSTRUCTIONS
